

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Jan 26 17:48:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 22/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180     044E                     __pidataBANK0:
   181                           
   182                           ;initializer for _ch1
   183     044E  3443               	retlw	67
   184     044F  3448               	retlw	72
   185     0450  3431               	retlw	49
   186     0451  343A               	retlw	58
   187                           
   188                           ;initializer for _ch0
   189     0452  3443               	retlw	67
   190     0453  3448               	retlw	72
   191     0454  3430               	retlw	48
   192     0455  343A               	retlw	58
   193     0008                     _PORTD	set	8
   194     0007                     _PORTC	set	7
   195     0012                     _T2CON	set	18
   196     0017                     _CCP1CON	set	23
   197     0015                     _CCPR1L	set	21
   198     001E                     _ADRESH	set	30
   199     001F                     _ADCON0	set	31
   200     0092                     _PR2	set	146
   201     009F                     _ADCON1	set	159
   202     0085                     _TRISA	set	133
   203     0088                     _TRISD	set	136
   204     0087                     _TRISC	set	135
   205     009E                     _ADRESL	set	158
   206                           
   207                           	psect	cinit
   208     07E6                     start_initialization:	
   209                           ; #config settings
   210                           
   211     07E6                     __initialization:
   212                           
   213                           ; Initialize objects allocated to BANK0
   214     07E6  1383               	bcf	3,7	;select IRP bank0
   215     07E7  3053               	movlw	low (__pdataBANK0+8)
   216     07E8  00FD               	movwf	btemp+-1
   217     07E9  3004               	movlw	high __pidataBANK0
   218     07EA  00FE               	movwf	btemp
   219     07EB  304E               	movlw	low __pidataBANK0
   220     07EC  00FF               	movwf	btemp+1
   221     07ED  304B               	movlw	low __pdataBANK0
   222     07EE  0084               	movwf	4
   223     07EF  120A  118A  245A  120A  118A  	fcall	init_ram0
   224                           
   225                           ; Clear objects allocated to BANK0
   226     07F4  3020               	movlw	low __pbssBANK0
   227     07F5  0084               	movwf	4
   228     07F6  303A               	movlw	low (__pbssBANK0+26)
   229     07F7  120A  118A  2446  120A  118A  	fcall	clear_ram0
   230     07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233     07FC                     __end_of__initialization:
   234     07FC  0183               	clrf	3
   235     07FD  120A  118A  2EF5   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssBANK0
   238     0020                     __pbssBANK0:
   239     0020                     _voltage:
   240     0020                     	ds	4
   241     0024                     _value:
   242     0024                     	ds	4
   243     0028                     _k:
   244     0028                     	ds	4
   245     002C                     _i:
   246     002C                     	ds	2
   247     002E                     _n:
   248     002E                     	ds	2
   249     0030                     _m:
   250     0030                     	ds	2
   251     0032                     _delaycount:
   252     0032                     	ds	2
   253     0034                     _hival:
   254     0034                     	ds	2
   255     0036                     _loval:
   256     0036                     	ds	2
   257     0038                     _J:
   258     0038                     	ds	1
   259     0039                     _N:
   260     0039                     	ds	1
   261                           
   262                           	psect	dataBANK0
   263     004B                     __pdataBANK0:
   264     004B                     _ch1:
   265     004B                     	ds	4
   266     004F                     _ch0:
   267     004F                     	ds	4
   268                           
   269                           	psect	inittext
   270     0456                     init_fetch0:	
   271                           ;	Called with low address in FSR and high address in W
   272                           
   273     0456  087E               	movf	btemp,w
   274     0457  008A               	movwf	10
   275     0458  087F               	movf	btemp+1,w
   276     0459  0082               	movwf	2
   277     045A                     init_ram0:	
   278                           ;Called with:
   279                           ;	high address of idata address in btemp 
   280                           ;	low address of idata address in btemp+1 
   281                           ;	low address of data in FSR
   282                           ;	high address + 1 of data in btemp-1
   283                           
   284     045A  120A  118A  2456  120A  118A  	fcall	init_fetch0
   285     045F  0080               	movwf	0
   286     0460  0A84               	incf	4,f
   287     0461  0804               	movf	4,w
   288     0462  067D               	xorwf	btemp+-1,w
   289     0463  1903               	btfsc	3,2
   290     0464  3400               	retlw	0
   291     0465  0AFF               	incf	btemp+1,f
   292     0466  1903               	btfsc	3,2
   293     0467  0AFE               	incf	btemp,f
   294     0468  2C5A               	goto	init_ram0
   295                           
   296                           	psect	clrtext
   297     0446                     clear_ram0:	
   298                           ;	Called with FSR containing the base address, and
   299                           ;	W with the last address+1
   300                           
   301     0446  0064               	clrwdt	;clear the watchdog before getting into this loop
   302     0447                     clrloop0:
   303     0447  0180               	clrf	0	;clear RAM location pointed to by FSR
   304     0448  0A84               	incf	4,f	;increment pointer
   305     0449  0604               	xorwf	4,w	;XOR with final address
   306     044A  1903               	btfsc	3,2	;have we reached the end yet?
   307     044B  3400               	retlw	0	;all done for this memory range, return
   308     044C  0604               	xorwf	4,w	;XOR again to restore value
   309     044D  2C47               	goto	clrloop0	;do the next byte
   310                           
   311                           	psect	cstackCOMMON
   312     0070                     __pcstackCOMMON:
   313     0070                     ?_init:
   314     0070                     ?_Lcd_Command:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ??_Lcd_Command:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?_Lcd_Data:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ??_Lcd_Data:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?___lwdiv:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?___lmul:	
   333                           ; 2 bytes @ 0x0
   334                           
   335     0070                     ___lwdiv@divisor:	
   336                           ; 4 bytes @ 0x0
   337                           
   338     0070                     ___lmul@multiplier:	
   339                           ; 2 bytes @ 0x0
   340                           
   341                           
   342                           ; 4 bytes @ 0x0
   343     0070                     	ds	2
   344     0072                     Lcd_Command@i:
   345     0072                     Lcd_Data@i:	
   346                           ; 1 bytes @ 0x2
   347                           
   348     0072                     ___lwdiv@dividend:	
   349                           ; 1 bytes @ 0x2
   350                           
   351                           
   352                           ; 2 bytes @ 0x2
   353     0072                     	ds	1
   354     0073                     ??_init:
   355                           
   356                           ; 1 bytes @ 0x3
   357     0073                     	ds	1
   358     0074                     ??___lwdiv:
   359     0074                     ___lwdiv@quotient:	
   360                           ; 1 bytes @ 0x4
   361                           
   362     0074                     ___lmul@multiplicand:	
   363                           ; 2 bytes @ 0x4
   364                           
   365                           
   366                           ; 4 bytes @ 0x4
   367     0074                     	ds	2
   368     0076                     ___lwdiv@counter:
   369                           
   370                           ; 1 bytes @ 0x6
   371     0076                     	ds	1
   372     0077                     ?___bmul:
   373     0077                     ___bmul@multiplicand:	
   374                           ; 1 bytes @ 0x7
   375                           
   376                           
   377                           ; 1 bytes @ 0x7
   378     0077                     	ds	1
   379     0078                     ??___lmul:
   380     0078                     ??___bmul:	
   381                           ; 1 bytes @ 0x8
   382                           
   383     0078                     ___bmul@product:	
   384                           ; 1 bytes @ 0x8
   385                           
   386                           
   387                           ; 1 bytes @ 0x8
   388     0078                     	ds	1
   389     0079                     ___bmul@multiplier:
   390     0079                     ___lmul@product:	
   391                           ; 1 bytes @ 0x9
   392                           
   393                           
   394                           ; 4 bytes @ 0x9
   395     0079                     	ds	1
   396     007A                     ??_Lcd_Output:
   397     007A                     Lcd_Output@s:	
   398                           ; 1 bytes @ 0xA
   399                           
   400                           
   401                           ; 1 bytes @ 0xA
   402     007A                     	ds	1
   403     007B                     Lcd_Output@j:
   404                           
   405                           ; 1 bytes @ 0xB
   406     007B                     	ds	2
   407     007D                     ??___lldiv:
   408                           
   409                           ; 1 bytes @ 0xD
   410     007D                     	ds	1
   411                           
   412                           	psect	cstackBANK0
   413     003A                     __pcstackBANK0:
   414     003A                     ?_Lcd_Output:
   415     003A                     ?___lldiv:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     003A                     Lcd_Output@i:	
   419                           ; 4 bytes @ 0x0
   420                           
   421     003A                     ___lldiv@divisor:	
   422                           ; 4 bytes @ 0x0
   423                           
   424                           
   425                           ; 4 bytes @ 0x0
   426     003A                     	ds	4
   427     003E                     Lcd_Output@pos:
   428     003E                     ___lldiv@dividend:	
   429                           ; 1 bytes @ 0x4
   430                           
   431                           
   432                           ; 4 bytes @ 0x4
   433     003E                     	ds	4
   434     0042                     ___lldiv@quotient:
   435                           
   436                           ; 4 bytes @ 0x8
   437     0042                     	ds	4
   438     0046                     ___lldiv@counter:
   439                           
   440                           ; 1 bytes @ 0xC
   441     0046                     	ds	1
   442     0047                     ??_main:
   443                           
   444                           ; 1 bytes @ 0xD
   445     0047                     	ds	4
   446                           
   447                           	psect	maintext
   448     06F5                     __pmaintext:	
   449 ;;
   450 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   451 ;;
   452 ;; *************** function _main *****************
   453 ;; Defined at:
   454 ;;		line 29 in file "7T_ADC_PWM.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : B00/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0
   470 ;;      Temps:          0       4       0       0       0
   471 ;;      Totals:         0       4       0       0       0
   472 ;;Total ram usage:        4 bytes
   473 ;; Hardware stack levels required when called: 2
   474 ;; This function calls:
   475 ;;		_Lcd_Output
   476 ;;		___lldiv
   477 ;;		___lmul
   478 ;;		_init
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484     06F5                     _main:	
   485                           ;psect for function _main
   486                           
   487     06F5                     l1087:	
   488                           ;incstack = 0
   489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   490                           
   491     06F5  120A  118A  263C  120A  118A  	fcall	_init
   492     06FA                     l1089:
   493     06FA  3081               	movlw	129
   494     06FB  1283               	bcf	3,5	;RP0=0, select bank0
   495     06FC  1303               	bcf	3,6	;RP1=0, select bank0
   496     06FD  009F               	movwf	31	;volatile
   497     06FE                     l1091:
   498     06FE  30C3               	movlw	195
   499     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   500     0700  1303               	bcf	3,6	;RP1=0, select bank0
   501     0701  00C8               	movwf	??_main+1
   502     0702  30CC               	movlw	204
   503     0703  00C7               	movwf	??_main
   504     0704                     u637:
   505     0704  0BC7               	decfsz	??_main,f
   506     0705  2F04               	goto	u637
   507     0706  0BC8               	decfsz	??_main+1,f
   508     0707  2F04               	goto	u637
   509     0708  0000               	nop
   510     0709                     l1093:
   511     0709  1283               	bcf	3,5	;RP0=0, select bank0
   512     070A  1303               	bcf	3,6	;RP1=0, select bank0
   513     070B  151F               	bsf	31,2	;volatile
   514     070C                     l68:
   515     070C  191F               	btfsc	31,2	;volatile
   516     070D  2F0F               	goto	u591
   517     070E  2F10               	goto	u590
   518     070F                     u591:
   519     070F  2F0C               	goto	l68
   520     0710                     u590:
   521     0710                     l1095:
   522     0710  1683               	bsf	3,5	;RP0=1, select bank1
   523     0711  1303               	bcf	3,6	;RP1=0, select bank1
   524     0712  081E               	movf	30,w	;volatile
   525     0713  1283               	bcf	3,5	;RP0=0, select bank0
   526     0714  1303               	bcf	3,6	;RP1=0, select bank0
   527     0715  00C7               	movwf	??_main
   528     0716  01C8               	clrf	??_main+1
   529     0717  0847               	movf	??_main,w
   530     0718  00B6               	movwf	_loval
   531     0719  0848               	movf	??_main+1,w
   532     071A  00B7               	movwf	_loval+1
   533     071B  081E               	movf	30,w	;volatile
   534     071C  00C7               	movwf	??_main
   535     071D  01C8               	clrf	??_main+1
   536     071E  0847               	movf	??_main,w
   537     071F  00B4               	movwf	_hival
   538     0720  0848               	movf	??_main+1,w
   539     0721  00B5               	movwf	_hival+1
   540     0722                     l1097:
   541     0722  0834               	movf	_hival,w
   542     0723  00C8               	movwf	??_main+1
   543     0724  01C7               	clrf	??_main
   544     0725  0836               	movf	_loval,w
   545     0726  0747               	addwf	??_main,w
   546     0727  00A4               	movwf	_value
   547     0728  0837               	movf	_loval+1,w
   548     0729  1803               	skipnc
   549     072A  0A37               	incf	_loval+1,w
   550     072B  0748               	addwf	??_main+1,w
   551     072C  00A5               	movwf	_value+1
   552     072D  01A6               	clrf	_value+2
   553     072E  01A7               	clrf	_value+3
   554     072F                     l1099:
   555     072F  0827               	movf	_value+3,w
   556     0730  00A3               	movwf	_voltage+3
   557     0731  0826               	movf	_value+2,w
   558     0732  00A2               	movwf	_voltage+2
   559     0733  0825               	movf	_value+1,w
   560     0734  00A1               	movwf	_voltage+1
   561     0735  0824               	movf	_value,w
   562     0736  00A0               	movwf	_voltage
   563     0737                     l1101:
   564     0737  0823               	movf	_voltage+3,w
   565     0738  00BD               	movwf	Lcd_Output@i+3
   566     0739  0822               	movf	_voltage+2,w
   567     073A  00BC               	movwf	Lcd_Output@i+2
   568     073B  0821               	movf	_voltage+1,w
   569     073C  00BB               	movwf	Lcd_Output@i+1
   570     073D  0820               	movf	_voltage,w
   571     073E  00BA               	movwf	Lcd_Output@i
   572     073F  3087               	movlw	135
   573     0740  00BE               	movwf	Lcd_Output@pos
   574     0741  120A  118A  259B  120A  118A  	fcall	_Lcd_Output
   575     0746                     l1103:
   576     0746  3091               	movlw	145
   577     0747  1283               	bcf	3,5	;RP0=0, select bank0
   578     0748  1303               	bcf	3,6	;RP1=0, select bank0
   579     0749  009F               	movwf	31	;volatile
   580     074A                     l1105:
   581     074A  30C3               	movlw	195
   582     074B  1283               	bcf	3,5	;RP0=0, select bank0
   583     074C  1303               	bcf	3,6	;RP1=0, select bank0
   584     074D  00C8               	movwf	??_main+1
   585     074E  30CC               	movlw	204
   586     074F  00C7               	movwf	??_main
   587     0750                     u647:
   588     0750  0BC7               	decfsz	??_main,f
   589     0751  2F50               	goto	u647
   590     0752  0BC8               	decfsz	??_main+1,f
   591     0753  2F50               	goto	u647
   592     0754  0000               	nop
   593     0755                     l1107:
   594     0755  1283               	bcf	3,5	;RP0=0, select bank0
   595     0756  1303               	bcf	3,6	;RP1=0, select bank0
   596     0757  151F               	bsf	31,2	;volatile
   597     0758                     l71:
   598     0758  191F               	btfsc	31,2	;volatile
   599     0759  2F5B               	goto	u601
   600     075A  2F5C               	goto	u600
   601     075B                     u601:
   602     075B  2F58               	goto	l71
   603     075C                     u600:
   604     075C                     l1109:
   605     075C  1683               	bsf	3,5	;RP0=1, select bank1
   606     075D  1303               	bcf	3,6	;RP1=0, select bank1
   607     075E  081E               	movf	30,w	;volatile
   608     075F  1283               	bcf	3,5	;RP0=0, select bank0
   609     0760  1303               	bcf	3,6	;RP1=0, select bank0
   610     0761  00C7               	movwf	??_main
   611     0762  01C8               	clrf	??_main+1
   612     0763  0847               	movf	??_main,w
   613     0764  00B6               	movwf	_loval
   614     0765  0848               	movf	??_main+1,w
   615     0766  00B7               	movwf	_loval+1
   616     0767  081E               	movf	30,w	;volatile
   617     0768  00C7               	movwf	??_main
   618     0769  01C8               	clrf	??_main+1
   619     076A  0847               	movf	??_main,w
   620     076B  00B4               	movwf	_hival
   621     076C  0848               	movf	??_main+1,w
   622     076D  00B5               	movwf	_hival+1
   623     076E                     l1111:
   624     076E  0834               	movf	_hival,w
   625     076F  00C8               	movwf	??_main+1
   626     0770  01C7               	clrf	??_main
   627     0771  0836               	movf	_loval,w
   628     0772  0747               	addwf	??_main,w
   629     0773  00A4               	movwf	_value
   630     0774  0837               	movf	_loval+1,w
   631     0775  1803               	skipnc
   632     0776  0A37               	incf	_loval+1,w
   633     0777  0748               	addwf	??_main+1,w
   634     0778  00A5               	movwf	_value+1
   635     0779  01A6               	clrf	_value+2
   636     077A  01A7               	clrf	_value+3
   637     077B                     l1113:
   638     077B  3000               	movlw	0
   639     077C  00BD               	movwf	___lldiv@divisor+3
   640     077D  3000               	movlw	0
   641     077E  00BC               	movwf	___lldiv@divisor+2
   642     077F  3003               	movlw	3
   643     0780  00BB               	movwf	___lldiv@divisor+1
   644     0781  30FF               	movlw	255
   645     0782  00BA               	movwf	___lldiv@divisor
   646     0783  0827               	movf	_value+3,w
   647     0784  00F3               	movwf	___lmul@multiplier+3
   648     0785  0826               	movf	_value+2,w
   649     0786  00F2               	movwf	___lmul@multiplier+2
   650     0787  0825               	movf	_value+1,w
   651     0788  00F1               	movwf	___lmul@multiplier+1
   652     0789  0824               	movf	_value,w
   653     078A  00F0               	movwf	___lmul@multiplier
   654     078B  3000               	movlw	0
   655     078C  00F7               	movwf	___lmul@multiplicand+3
   656     078D  3000               	movlw	0
   657     078E  00F6               	movwf	___lmul@multiplicand+2
   658     078F  3001               	movlw	1
   659     0790  00F5               	movwf	___lmul@multiplicand+1
   660     0791  3051               	movlw	81
   661     0792  00F4               	movwf	___lmul@multiplicand
   662     0793  120A  118A  24ED  120A  118A  	fcall	___lmul
   663     0798  0873               	movf	?___lmul+3,w
   664     0799  1283               	bcf	3,5	;RP0=0, select bank0
   665     079A  1303               	bcf	3,6	;RP1=0, select bank0
   666     079B  00C1               	movwf	___lldiv@dividend+3
   667     079C  0872               	movf	?___lmul+2,w
   668     079D  00C0               	movwf	___lldiv@dividend+2
   669     079E  0871               	movf	?___lmul+1,w
   670     079F  00BF               	movwf	___lldiv@dividend+1
   671     07A0  0870               	movf	?___lmul,w
   672     07A1  00BE               	movwf	___lldiv@dividend
   673     07A2  120A  118A  2533  120A  118A  	fcall	___lldiv
   674     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   675     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   676     07A9  083D               	movf	?___lldiv+3,w
   677     07AA  00A3               	movwf	_voltage+3
   678     07AB  083C               	movf	?___lldiv+2,w
   679     07AC  00A2               	movwf	_voltage+2
   680     07AD  083B               	movf	?___lldiv+1,w
   681     07AE  00A1               	movwf	_voltage+1
   682     07AF  083A               	movf	?___lldiv,w
   683     07B0  00A0               	movwf	_voltage
   684     07B1                     l1115:
   685     07B1  0823               	movf	_voltage+3,w
   686     07B2  00BD               	movwf	Lcd_Output@i+3
   687     07B3  0822               	movf	_voltage+2,w
   688     07B4  00BC               	movwf	Lcd_Output@i+2
   689     07B5  0821               	movf	_voltage+1,w
   690     07B6  00BB               	movwf	Lcd_Output@i+1
   691     07B7  0820               	movf	_voltage,w
   692     07B8  00BA               	movwf	Lcd_Output@i
   693     07B9  30C7               	movlw	199
   694     07BA  00BE               	movwf	Lcd_Output@pos
   695     07BB  120A  118A  259B  120A  118A  	fcall	_Lcd_Output
   696     07C0                     l1117:
   697     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   698     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   699     07C2  0820               	movf	_voltage,w
   700     07C3  00C7               	movwf	??_main
   701     07C4  0821               	movf	_voltage+1,w
   702     07C5  00C8               	movwf	??_main+1
   703     07C6  0822               	movf	_voltage+2,w
   704     07C7  00C9               	movwf	??_main+2
   705     07C8  0823               	movf	_voltage+3,w
   706     07C9  00CA               	movwf	??_main+3
   707     07CA  3002               	movlw	2
   708     07CB                     u615:
   709     07CB  1003               	clrc
   710     07CC  0CCA               	rrf	??_main+3,f
   711     07CD  0CC9               	rrf	??_main+2,f
   712     07CE  0CC8               	rrf	??_main+1,f
   713     07CF  0CC7               	rrf	??_main,f
   714     07D0                     u610:
   715     07D0  3EFF               	addlw	-1
   716     07D1  1D03               	skipz
   717     07D2  2FCB               	goto	u615
   718     07D3  0847               	movf	??_main,w
   719     07D4  0095               	movwf	21	;volatile
   720     07D5                     l1119:
   721     07D5  0820               	movf	_voltage,w
   722     07D6  3903               	andlw	3
   723     07D7  00C7               	movwf	??_main
   724     07D8  3004               	movlw	4
   725     07D9                     u625:
   726     07D9  1003               	clrc
   727     07DA  0DC7               	rlf	??_main,f
   728     07DB  3EFF               	addlw	-1
   729     07DC  1D03               	skipz
   730     07DD  2FD9               	goto	u625
   731     07DE  0817               	movf	23,w	;volatile
   732     07DF  390C               	andlw	12
   733     07E0  0747               	addwf	??_main,w
   734     07E1  0097               	movwf	23	;volatile
   735     07E2  2EFA               	goto	l1089
   736     07E3  120A  118A  2800   	ljmp	start
   737     07E6                     __end_of_main:
   738                           
   739                           	psect	text1
   740     063C                     __ptext1:	
   741 ;; *************** function _init *****************
   742 ;; Defined at:
   743 ;;		line 100 in file "7T_ADC_PWM.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          2       0       0       0       0
   760 ;;      Totals:         2       0       0       0       0
   761 ;;Total ram usage:        2 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		_Lcd_Command
   766 ;;		_Lcd_Data
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772     063C                     _init:	
   773                           ;psect for function _init
   774                           
   775     063C                     l943:	
   776                           ;incstack = 0
   777                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   778                           
   779     063C  1683               	bsf	3,5	;RP0=1, select bank1
   780     063D  1303               	bcf	3,6	;RP1=0, select bank1
   781     063E  0187               	clrf	7	;volatile
   782     063F  0188               	clrf	8	;volatile
   783     0640                     l945:
   784     0640  3005               	movlw	5
   785     0641  0085               	movwf	5	;volatile
   786     0642                     l947:
   787     0642  3080               	movlw	128
   788     0643  009F               	movwf	31	;volatile
   789     0644                     l949:
   790     0644  300F               	movlw	15
   791     0645  1283               	bcf	3,5	;RP0=0, select bank0
   792     0646  1303               	bcf	3,6	;RP1=0, select bank0
   793     0647  0097               	movwf	23	;volatile
   794     0648                     l951:
   795     0648  305E               	movlw	94
   796     0649  1683               	bsf	3,5	;RP0=1, select bank1
   797     064A  1303               	bcf	3,6	;RP1=0, select bank1
   798     064B  0092               	movwf	18	;volatile
   799     064C                     l953:
   800     064C  3006               	movlw	6
   801     064D  1283               	bcf	3,5	;RP0=0, select bank0
   802     064E  1303               	bcf	3,6	;RP1=0, select bank0
   803     064F  0092               	movwf	18	;volatile
   804     0650                     l955:
   805     0650  3030               	movlw	48
   806     0651  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   807     0656                     l957:
   808     0656  30C3               	movlw	195
   809     0657  00F4               	movwf	??_init+1
   810     0658  30CD               	movlw	205
   811     0659  00F3               	movwf	??_init
   812     065A                     u657:
   813     065A  0BF3               	decfsz	??_init,f
   814     065B  2E5A               	goto	u657
   815     065C  0BF4               	decfsz	??_init+1,f
   816     065D  2E5A               	goto	u657
   817     065E                     l959:
   818     065E  3030               	movlw	48
   819     065F  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   820     0664                     l961:
   821     0664  30C3               	movlw	195
   822     0665  00F4               	movwf	??_init+1
   823     0666  30CD               	movlw	205
   824     0667  00F3               	movwf	??_init
   825     0668                     u667:
   826     0668  0BF3               	decfsz	??_init,f
   827     0669  2E68               	goto	u667
   828     066A  0BF4               	decfsz	??_init+1,f
   829     066B  2E68               	goto	u667
   830     066C                     l963:
   831     066C  3030               	movlw	48
   832     066D  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   833     0672                     l965:
   834     0672  30C3               	movlw	195
   835     0673  00F4               	movwf	??_init+1
   836     0674  30CD               	movlw	205
   837     0675  00F3               	movwf	??_init
   838     0676                     u677:
   839     0676  0BF3               	decfsz	??_init,f
   840     0677  2E76               	goto	u677
   841     0678  0BF4               	decfsz	??_init+1,f
   842     0679  2E76               	goto	u677
   843     067A                     l967:
   844     067A  3038               	movlw	56
   845     067B  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   846     0680                     l969:
   847     0680  30C3               	movlw	195
   848     0681  00F4               	movwf	??_init+1
   849     0682  30CD               	movlw	205
   850     0683  00F3               	movwf	??_init
   851     0684                     u687:
   852     0684  0BF3               	decfsz	??_init,f
   853     0685  2E84               	goto	u687
   854     0686  0BF4               	decfsz	??_init+1,f
   855     0687  2E84               	goto	u687
   856     0688                     l971:
   857     0688  300C               	movlw	12
   858     0689  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   859     068E                     l973:
   860     068E  30C3               	movlw	195
   861     068F  00F4               	movwf	??_init+1
   862     0690  30CD               	movlw	205
   863     0691  00F3               	movwf	??_init
   864     0692                     u697:
   865     0692  0BF3               	decfsz	??_init,f
   866     0693  2E92               	goto	u697
   867     0694  0BF4               	decfsz	??_init+1,f
   868     0695  2E92               	goto	u697
   869     0696                     l975:
   870     0696  3001               	movlw	1
   871     0697  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   872     069C                     l977:
   873     069C  30C3               	movlw	195
   874     069D  00F4               	movwf	??_init+1
   875     069E  30CD               	movlw	205
   876     069F  00F3               	movwf	??_init
   877     06A0                     u707:
   878     06A0  0BF3               	decfsz	??_init,f
   879     06A1  2EA0               	goto	u707
   880     06A2  0BF4               	decfsz	??_init+1,f
   881     06A3  2EA0               	goto	u707
   882     06A4                     l979:
   883     06A4  3080               	movlw	128
   884     06A5  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   885     06AA                     l981:
   886     06AA  1283               	bcf	3,5	;RP0=0, select bank0
   887     06AB  1303               	bcf	3,6	;RP1=0, select bank0
   888     06AC  01AC               	clrf	_i
   889     06AD  01AD               	clrf	_i+1
   890     06AE                     l987:
   891     06AE  082C               	movf	_i,w
   892     06AF  3E4F               	addlw	(low (_ch0| 0))& (0+255)
   893     06B0  0084               	movwf	4
   894     06B1  1383               	bcf	3,7	;select IRP bank0
   895     06B2  0800               	movf	0,w
   896     06B3  120A  118A  2469  120A  118A  	fcall	_Lcd_Data
   897     06B8                     l989:
   898     06B8  3001               	movlw	1
   899     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   900     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   901     06BB  07AC               	addwf	_i,f
   902     06BC  1803               	skipnc
   903     06BD  0AAD               	incf	_i+1,f
   904     06BE  3000               	movlw	0
   905     06BF  07AD               	addwf	_i+1,f
   906     06C0                     l991:
   907     06C0  3000               	movlw	0
   908     06C1  022D               	subwf	_i+1,w
   909     06C2  3004               	movlw	4
   910     06C3  1903               	skipnz
   911     06C4  022C               	subwf	_i,w
   912     06C5  1C03               	skipc
   913     06C6  2EC8               	goto	u411
   914     06C7  2EC9               	goto	u410
   915     06C8                     u411:
   916     06C8  2EAE               	goto	l987
   917     06C9                     u410:
   918     06C9                     l993:
   919     06C9  30C0               	movlw	192
   920     06CA  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   921     06CF                     l995:
   922     06CF  1283               	bcf	3,5	;RP0=0, select bank0
   923     06D0  1303               	bcf	3,6	;RP1=0, select bank0
   924     06D1  01AC               	clrf	_i
   925     06D2  01AD               	clrf	_i+1
   926     06D3                     l1001:
   927     06D3  082C               	movf	_i,w
   928     06D4  3E4B               	addlw	(low (_ch1| 0))& (0+255)
   929     06D5  0084               	movwf	4
   930     06D6  1383               	bcf	3,7	;select IRP bank0
   931     06D7  0800               	movf	0,w
   932     06D8  120A  118A  2469  120A  118A  	fcall	_Lcd_Data
   933     06DD                     l1003:
   934     06DD  3001               	movlw	1
   935     06DE  1283               	bcf	3,5	;RP0=0, select bank0
   936     06DF  1303               	bcf	3,6	;RP1=0, select bank0
   937     06E0  07AC               	addwf	_i,f
   938     06E1  1803               	skipnc
   939     06E2  0AAD               	incf	_i+1,f
   940     06E3  3000               	movlw	0
   941     06E4  07AD               	addwf	_i+1,f
   942     06E5                     l1005:
   943     06E5  3000               	movlw	0
   944     06E6  022D               	subwf	_i+1,w
   945     06E7  3004               	movlw	4
   946     06E8  1903               	skipnz
   947     06E9  022C               	subwf	_i,w
   948     06EA  1C03               	skipc
   949     06EB  2EED               	goto	u421
   950     06EC  2EEE               	goto	u420
   951     06ED                     u421:
   952     06ED  2ED3               	goto	l1001
   953     06EE                     u420:
   954     06EE                     l1007:
   955     06EE  3004               	movlw	4
   956     06EF  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
   957     06F4                     l95:
   958     06F4  0008               	return
   959     06F5                     __end_of_init:
   960                           
   961                           	psect	text2
   962     04ED                     __ptext2:	
   963 ;; *************** function ___lmul *****************
   964 ;; Defined at:
   965 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  multiplier      4    0[COMMON] unsigned long 
   968 ;;  multiplicand    4    4[COMMON] unsigned long 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  product         4    9[COMMON] unsigned long 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  4    0[COMMON] unsigned long 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         8       0       0       0       0
   981 ;;      Locals:         4       0       0       0       0
   982 ;;      Temps:          1       0       0       0       0
   983 ;;      Totals:        13       0       0       0       0
   984 ;;Total ram usage:       13 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993     04ED                     ___lmul:	
   994                           ;psect for function ___lmul
   995                           
   996     04ED                     l1047:	
   997                           ;incstack = 0
   998                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   999                           
  1000     04ED  3000               	movlw	0
  1001     04EE  00FC               	movwf	___lmul@product+3
  1002     04EF  3000               	movlw	0
  1003     04F0  00FB               	movwf	___lmul@product+2
  1004     04F1  3000               	movlw	0
  1005     04F2  00FA               	movwf	___lmul@product+1
  1006     04F3  3000               	movlw	0
  1007     04F4  00F9               	movwf	___lmul@product
  1008     04F5                     l1049:
  1009     04F5  1C70               	btfss	___lmul@multiplier,0
  1010     04F6  2CF8               	goto	u471
  1011     04F7  2CF9               	goto	u470
  1012     04F8                     u471:
  1013     04F8  2D10               	goto	l1053
  1014     04F9                     u470:
  1015     04F9                     l1051:
  1016     04F9  0874               	movf	___lmul@multiplicand,w
  1017     04FA  07F9               	addwf	___lmul@product,f
  1018     04FB  0875               	movf	___lmul@multiplicand+1,w
  1019     04FC  1103               	clrz
  1020     04FD  1803               	skipnc
  1021     04FE  3E01               	addlw	1
  1022     04FF  1903               	skipnz
  1023     0500  2D02               	goto	u481
  1024     0501  07FA               	addwf	___lmul@product+1,f
  1025     0502                     u481:
  1026     0502  0876               	movf	___lmul@multiplicand+2,w
  1027     0503  1103               	clrz
  1028     0504  1803               	skipnc
  1029     0505  3E01               	addlw	1
  1030     0506  1903               	skipnz
  1031     0507  2D09               	goto	u482
  1032     0508  07FB               	addwf	___lmul@product+2,f
  1033     0509                     u482:
  1034     0509  0877               	movf	___lmul@multiplicand+3,w
  1035     050A  1103               	clrz
  1036     050B  1803               	skipnc
  1037     050C  3E01               	addlw	1
  1038     050D  1903               	skipnz
  1039     050E  2D10               	goto	u483
  1040     050F  07FC               	addwf	___lmul@product+3,f
  1041     0510                     u483:
  1042     0510                     l1053:
  1043     0510  3001               	movlw	1
  1044     0511  00F8               	movwf	??___lmul
  1045     0512                     u495:
  1046     0512  1003               	clrc
  1047     0513  0DF4               	rlf	___lmul@multiplicand,f
  1048     0514  0DF5               	rlf	___lmul@multiplicand+1,f
  1049     0515  0DF6               	rlf	___lmul@multiplicand+2,f
  1050     0516  0DF7               	rlf	___lmul@multiplicand+3,f
  1051     0517  0BF8               	decfsz	??___lmul,f
  1052     0518  2D12               	goto	u495
  1053     0519                     l1055:
  1054     0519  3001               	movlw	1
  1055     051A                     u505:
  1056     051A  1003               	clrc
  1057     051B  0CF3               	rrf	___lmul@multiplier+3,f
  1058     051C  0CF2               	rrf	___lmul@multiplier+2,f
  1059     051D  0CF1               	rrf	___lmul@multiplier+1,f
  1060     051E  0CF0               	rrf	___lmul@multiplier,f
  1061     051F  3EFF               	addlw	-1
  1062     0520  1D03               	skipz
  1063     0521  2D1A               	goto	u505
  1064     0522  0873               	movf	___lmul@multiplier+3,w
  1065     0523  0472               	iorwf	___lmul@multiplier+2,w
  1066     0524  0471               	iorwf	___lmul@multiplier+1,w
  1067     0525  0470               	iorwf	___lmul@multiplier,w
  1068     0526  1D03               	skipz
  1069     0527  2D29               	goto	u511
  1070     0528  2D2A               	goto	u510
  1071     0529                     u511:
  1072     0529  2CF5               	goto	l1049
  1073     052A                     u510:
  1074     052A                     l1057:
  1075     052A  087C               	movf	___lmul@product+3,w
  1076     052B  00F3               	movwf	?___lmul+3
  1077     052C  087B               	movf	___lmul@product+2,w
  1078     052D  00F2               	movwf	?___lmul+2
  1079     052E  087A               	movf	___lmul@product+1,w
  1080     052F  00F1               	movwf	?___lmul+1
  1081     0530  0879               	movf	___lmul@product,w
  1082     0531  00F0               	movwf	?___lmul
  1083     0532                     l201:
  1084     0532  0008               	return
  1085     0533                     __end_of___lmul:
  1086                           
  1087                           	psect	text3
  1088     0533                     __ptext3:	
  1089 ;; *************** function ___lldiv *****************
  1090 ;; Defined at:
  1091 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  divisor         4    0[BANK0 ] unsigned long 
  1094 ;;  dividend        4    4[BANK0 ] unsigned long 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  quotient        4    8[BANK0 ] unsigned long 
  1097 ;;  counter         1   12[BANK0 ] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  4    0[BANK0 ] unsigned long 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, btemp+1
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       8       0       0       0
  1108 ;;      Locals:         0       5       0       0       0
  1109 ;;      Temps:          1       0       0       0       0
  1110 ;;      Totals:         1      13       0       0       0
  1111 ;;Total ram usage:       14 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120     0533                     ___lldiv:	
  1121                           ;psect for function ___lldiv
  1122                           
  1123     0533                     l1061:	
  1124                           ;incstack = 0
  1125                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1126                           
  1127     0533  3000               	movlw	0
  1128     0534  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0535  1303               	bcf	3,6	;RP1=0, select bank0
  1130     0536  00C5               	movwf	___lldiv@quotient+3
  1131     0537  3000               	movlw	0
  1132     0538  00C4               	movwf	___lldiv@quotient+2
  1133     0539  3000               	movlw	0
  1134     053A  00C3               	movwf	___lldiv@quotient+1
  1135     053B  3000               	movlw	0
  1136     053C  00C2               	movwf	___lldiv@quotient
  1137     053D  083D               	movf	___lldiv@divisor+3,w
  1138     053E  043C               	iorwf	___lldiv@divisor+2,w
  1139     053F  043B               	iorwf	___lldiv@divisor+1,w
  1140     0540  043A               	iorwf	___lldiv@divisor,w
  1141     0541  1903               	skipnz
  1142     0542  2D44               	goto	u521
  1143     0543  2D45               	goto	u520
  1144     0544                     u521:
  1145     0544  2D92               	goto	l1083
  1146     0545                     u520:
  1147     0545                     l1063:
  1148     0545  01C6               	clrf	___lldiv@counter
  1149     0546  0AC6               	incf	___lldiv@counter,f
  1150     0547  2D55               	goto	l1069
  1151     0548                     l1065:
  1152     0548  3001               	movlw	1
  1153     0549  00FD               	movwf	??___lldiv
  1154     054A                     u535:
  1155     054A  1003               	clrc
  1156     054B  0DBA               	rlf	___lldiv@divisor,f
  1157     054C  0DBB               	rlf	___lldiv@divisor+1,f
  1158     054D  0DBC               	rlf	___lldiv@divisor+2,f
  1159     054E  0DBD               	rlf	___lldiv@divisor+3,f
  1160     054F  0BFD               	decfsz	??___lldiv,f
  1161     0550  2D4A               	goto	u535
  1162     0551                     l1067:
  1163     0551  3001               	movlw	1
  1164     0552  00FF               	movwf	btemp+1
  1165     0553  087F               	movf	btemp+1,w
  1166     0554  07C6               	addwf	___lldiv@counter,f
  1167     0555                     l1069:
  1168     0555  1FBD               	btfss	___lldiv@divisor+3,7
  1169     0556  2D58               	goto	u541
  1170     0557  2D59               	goto	u540
  1171     0558                     u541:
  1172     0558  2D48               	goto	l1065
  1173     0559                     u540:
  1174     0559                     l1071:
  1175     0559  3001               	movlw	1
  1176     055A  00FD               	movwf	??___lldiv
  1177     055B                     u555:
  1178     055B  1003               	clrc
  1179     055C  0DC2               	rlf	___lldiv@quotient,f
  1180     055D  0DC3               	rlf	___lldiv@quotient+1,f
  1181     055E  0DC4               	rlf	___lldiv@quotient+2,f
  1182     055F  0DC5               	rlf	___lldiv@quotient+3,f
  1183     0560  0BFD               	decfsz	??___lldiv,f
  1184     0561  2D5B               	goto	u555
  1185     0562                     l1073:
  1186     0562  083D               	movf	___lldiv@divisor+3,w
  1187     0563  0241               	subwf	___lldiv@dividend+3,w
  1188     0564  1D03               	skipz
  1189     0565  2D70               	goto	u565
  1190     0566  083C               	movf	___lldiv@divisor+2,w
  1191     0567  0240               	subwf	___lldiv@dividend+2,w
  1192     0568  1D03               	skipz
  1193     0569  2D70               	goto	u565
  1194     056A  083B               	movf	___lldiv@divisor+1,w
  1195     056B  023F               	subwf	___lldiv@dividend+1,w
  1196     056C  1D03               	skipz
  1197     056D  2D70               	goto	u565
  1198     056E  083A               	movf	___lldiv@divisor,w
  1199     056F  023E               	subwf	___lldiv@dividend,w
  1200     0570                     u565:
  1201     0570  1C03               	skipc
  1202     0571  2D73               	goto	u561
  1203     0572  2D74               	goto	u560
  1204     0573                     u561:
  1205     0573  2D83               	goto	l1079
  1206     0574                     u560:
  1207     0574                     l1075:
  1208     0574  083A               	movf	___lldiv@divisor,w
  1209     0575  02BE               	subwf	___lldiv@dividend,f
  1210     0576  083B               	movf	___lldiv@divisor+1,w
  1211     0577  1C03               	skipc
  1212     0578  0F3B               	incfsz	___lldiv@divisor+1,w
  1213     0579  02BF               	subwf	___lldiv@dividend+1,f
  1214     057A  083C               	movf	___lldiv@divisor+2,w
  1215     057B  1C03               	skipc
  1216     057C  0F3C               	incfsz	___lldiv@divisor+2,w
  1217     057D  02C0               	subwf	___lldiv@dividend+2,f
  1218     057E  083D               	movf	___lldiv@divisor+3,w
  1219     057F  1C03               	skipc
  1220     0580  0F3D               	incfsz	___lldiv@divisor+3,w
  1221     0581  02C1               	subwf	___lldiv@dividend+3,f
  1222     0582                     l1077:
  1223     0582  1442               	bsf	___lldiv@quotient,0
  1224     0583                     l1079:
  1225     0583  3001               	movlw	1
  1226     0584                     u575:
  1227     0584  1003               	clrc
  1228     0585  0CBD               	rrf	___lldiv@divisor+3,f
  1229     0586  0CBC               	rrf	___lldiv@divisor+2,f
  1230     0587  0CBB               	rrf	___lldiv@divisor+1,f
  1231     0588  0CBA               	rrf	___lldiv@divisor,f
  1232     0589  3EFF               	addlw	-1
  1233     058A  1D03               	skipz
  1234     058B  2D84               	goto	u575
  1235     058C                     l1081:
  1236     058C  3001               	movlw	1
  1237     058D  02C6               	subwf	___lldiv@counter,f
  1238     058E  1D03               	btfss	3,2
  1239     058F  2D91               	goto	u581
  1240     0590  2D92               	goto	u580
  1241     0591                     u581:
  1242     0591  2D59               	goto	l1071
  1243     0592                     u580:
  1244     0592                     l1083:
  1245     0592  0845               	movf	___lldiv@quotient+3,w
  1246     0593  00BD               	movwf	?___lldiv+3
  1247     0594  0844               	movf	___lldiv@quotient+2,w
  1248     0595  00BC               	movwf	?___lldiv+2
  1249     0596  0843               	movf	___lldiv@quotient+1,w
  1250     0597  00BB               	movwf	?___lldiv+1
  1251     0598  0842               	movf	___lldiv@quotient,w
  1252     0599  00BA               	movwf	?___lldiv
  1253     059A                     l223:
  1254     059A  0008               	return
  1255     059B                     __end_of___lldiv:
  1256                           
  1257                           	psect	text4
  1258     059B                     __ptext4:	
  1259 ;; *************** function _Lcd_Output *****************
  1260 ;; Defined at:
  1261 ;;		line 61 in file "7T_ADC_PWM.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  i               4    0[BANK0 ] unsigned long 
  1264 ;;  pos             1    4[BANK0 ] unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  j               1   11[COMMON] unsigned char 
  1267 ;;  s               1   10[COMMON] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       5       0       0       0
  1278 ;;      Locals:         2       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0
  1280 ;;      Totals:         2       5       0       0       0
  1281 ;;Total ram usage:        7 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 1
  1284 ;; This function calls:
  1285 ;;		_Lcd_Command
  1286 ;;		_Lcd_Data
  1287 ;;		___bmul
  1288 ;;		___lwdiv
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294     059B                     _Lcd_Output:	
  1295                           ;psect for function _Lcd_Output
  1296                           
  1297     059B                     l1009:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _Lcd_Output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1300                           
  1301     059B  3023               	movlw	35
  1302     059C  1283               	bcf	3,5	;RP0=0, select bank0
  1303     059D  1303               	bcf	3,6	;RP1=0, select bank0
  1304     059E  00A8               	movwf	_k
  1305     059F  3023               	movlw	35
  1306     05A0  00A9               	movwf	_k+1
  1307     05A1  3023               	movlw	35
  1308     05A2  00AA               	movwf	_k+2
  1309     05A3  3023               	movlw	35
  1310     05A4  00AB               	movwf	_k+3
  1311     05A5  3023               	movlw	35
  1312     05A6  00AC               	movwf	_k+4
  1313     05A7                     l1011:
  1314     05A7  01FB               	clrf	Lcd_Output@j
  1315     05A8  0AFB               	incf	Lcd_Output@j,f
  1316     05A9  083B               	movf	Lcd_Output@i+1,w
  1317     05AA  00B1               	movwf	_m+1
  1318     05AB  083A               	movf	Lcd_Output@i,w
  1319     05AC  00B0               	movwf	_m
  1320     05AD                     l1013:
  1321     05AD  0830               	movf	_m,w
  1322     05AE  0431               	iorwf	_m+1,w
  1323     05AF  1D03               	btfss	3,2
  1324     05B0  2DB2               	goto	u431
  1325     05B1  2DB3               	goto	u430
  1326     05B2                     u431:
  1327     05B2  2DF6               	goto	l1025
  1328     05B3                     u430:
  1329     05B3                     l1015:
  1330     05B3  083E               	movf	Lcd_Output@pos,w
  1331     05B4  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
  1332     05B9  3030               	movlw	48
  1333     05BA  120A  118A  2469  120A  118A  	fcall	_Lcd_Data
  1334     05BF  2DF6               	goto	l1025
  1335     05C0                     l1017:
  1336     05C0  30F6               	movlw	246
  1337     05C1  00F7               	movwf	___bmul@multiplicand
  1338     05C2  0831               	movf	_m+1,w
  1339     05C3  00F3               	movwf	___lwdiv@dividend+1
  1340     05C4  0830               	movf	_m,w
  1341     05C5  00F2               	movwf	___lwdiv@dividend
  1342     05C6  300A               	movlw	10
  1343     05C7  00F0               	movwf	___lwdiv@divisor
  1344     05C8  3000               	movlw	0
  1345     05C9  00F1               	movwf	___lwdiv@divisor+1
  1346     05CA  120A  118A  24A9  120A  118A  	fcall	___lwdiv
  1347     05CF  0870               	movf	?___lwdiv,w
  1348     05D0  120A  118A  247D  120A  118A  	fcall	___bmul
  1349     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1350     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1351     05D7  0730               	addwf	_m,w
  1352     05D8  00FA               	movwf	Lcd_Output@s
  1353     05D9                     l1019:
  1354     05D9  087B               	movf	Lcd_Output@j,w
  1355     05DA  3E28               	addlw	(low (_k| 0))& (0+255)
  1356     05DB  0084               	movwf	4
  1357     05DC  087A               	movf	Lcd_Output@s,w
  1358     05DD  1383               	bcf	3,7	;select IRP bank0
  1359     05DE  0080               	movwf	0
  1360     05DF                     l1021:
  1361     05DF  3001               	movlw	1
  1362     05E0  00FF               	movwf	btemp+1
  1363     05E1  087F               	movf	btemp+1,w
  1364     05E2  07FB               	addwf	Lcd_Output@j,f
  1365     05E3                     l1023:
  1366     05E3  300A               	movlw	10
  1367     05E4  00F0               	movwf	___lwdiv@divisor
  1368     05E5  3000               	movlw	0
  1369     05E6  00F1               	movwf	___lwdiv@divisor+1
  1370     05E7  0831               	movf	_m+1,w
  1371     05E8  00F3               	movwf	___lwdiv@dividend+1
  1372     05E9  0830               	movf	_m,w
  1373     05EA  00F2               	movwf	___lwdiv@dividend
  1374     05EB  120A  118A  24A9  120A  118A  	fcall	___lwdiv
  1375     05F0  0871               	movf	?___lwdiv+1,w
  1376     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1377     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1378     05F3  00B1               	movwf	_m+1
  1379     05F4  0870               	movf	?___lwdiv,w
  1380     05F5  00B0               	movwf	_m
  1381     05F6                     l1025:
  1382     05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1383     05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1384     05F8  0830               	movf	_m,w
  1385     05F9  0431               	iorwf	_m+1,w
  1386     05FA  1D03               	btfss	3,2
  1387     05FB  2DFD               	goto	u441
  1388     05FC  2DFE               	goto	u440
  1389     05FD                     u441:
  1390     05FD  2DC0               	goto	l1017
  1391     05FE                     u440:
  1392     05FE                     l1027:
  1393     05FE  087B               	movf	Lcd_Output@j,w
  1394     05FF  3E28               	addlw	(low (_k| 0))& (0+255)
  1395     0600  0084               	movwf	4
  1396     0601  3023               	movlw	35
  1397     0602  1383               	bcf	3,7	;select IRP bank0
  1398     0603  0080               	movwf	0
  1399     0604                     l1029:
  1400     0604  01FB               	clrf	Lcd_Output@j
  1401     0605  0AFB               	incf	Lcd_Output@j,f
  1402     0606                     l1031:
  1403     0606  083E               	movf	Lcd_Output@pos,w
  1404     0607  120A  118A  2492  120A  118A  	fcall	_Lcd_Command
  1405     060C  2E35               	goto	l1045
  1406     060D                     l1033:
  1407     060D  087B               	movf	Lcd_Output@j,w
  1408     060E  3E28               	addlw	(low (_k| 0))& (0+255)
  1409     060F  0084               	movwf	4
  1410     0610  3023               	movlw	35
  1411     0611  1383               	bcf	3,7	;select IRP bank0
  1412     0612  0600               	xorwf	0,w
  1413     0613  1D03               	btfss	3,2
  1414     0614  2E16               	goto	u451
  1415     0615  2E17               	goto	u450
  1416     0616                     u451:
  1417     0616  2E22               	goto	l1039
  1418     0617                     u450:
  1419     0617                     l1035:
  1420     0617  3020               	movlw	32
  1421     0618  120A  118A  2469  120A  118A  	fcall	_Lcd_Data
  1422     061D                     l1037:
  1423     061D  3001               	movlw	1
  1424     061E  00FF               	movwf	btemp+1
  1425     061F  087F               	movf	btemp+1,w
  1426     0620  07FB               	addwf	Lcd_Output@j,f
  1427     0621  2E35               	goto	l1045
  1428     0622                     l1039:
  1429     0622  087B               	movf	Lcd_Output@j,w
  1430     0623  3E28               	addlw	(low (_k| 0))& (0+255)
  1431     0624  0084               	movwf	4
  1432     0625  0800               	movf	0,w
  1433     0626  3E30               	addlw	48
  1434     0627  1283               	bcf	3,5	;RP0=0, select bank0
  1435     0628  1303               	bcf	3,6	;RP1=0, select bank0
  1436     0629  00AE               	movwf	_n
  1437     062A  3000               	movlw	0
  1438     062B  1803               	skipnc
  1439     062C  3001               	movlw	1
  1440     062D  00AF               	movwf	_n+1
  1441     062E                     l1041:
  1442     062E  082E               	movf	_n,w
  1443     062F  120A  118A  2469  120A  118A  	fcall	_Lcd_Data
  1444     0634  2E1D               	goto	l1037
  1445     0635                     l1045:
  1446     0635  3005               	movlw	5
  1447     0636  027B               	subwf	Lcd_Output@j,w
  1448     0637  1C03               	skipc
  1449     0638  2E3A               	goto	u461
  1450     0639  2E3B               	goto	u460
  1451     063A                     u461:
  1452     063A  2E0D               	goto	l1033
  1453     063B                     u460:
  1454     063B                     l88:
  1455     063B  0008               	return
  1456     063C                     __end_of_Lcd_Output:
  1457                           
  1458                           	psect	text5
  1459     04A9                     __ptext5:	
  1460 ;; *************** function ___lwdiv *****************
  1461 ;; Defined at:
  1462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  divisor         2    0[COMMON] unsigned int 
  1465 ;;  dividend        2    2[COMMON] unsigned int 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  quotient        2    4[COMMON] unsigned int 
  1468 ;;  counter         1    6[COMMON] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    0[COMMON] unsigned int 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, btemp+1
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         4       0       0       0       0
  1479 ;;      Locals:         3       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0
  1481 ;;      Totals:         7       0       0       0       0
  1482 ;;Total ram usage:        7 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_Lcd_Output
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491     04A9                     ___lwdiv:	
  1492                           ;psect for function ___lwdiv
  1493                           
  1494     04A9                     l917:	
  1495                           ;incstack = 0
  1496                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1497                           
  1498     04A9  01F4               	clrf	___lwdiv@quotient
  1499     04AA  01F5               	clrf	___lwdiv@quotient+1
  1500     04AB                     l919:
  1501     04AB  0870               	movf	___lwdiv@divisor,w
  1502     04AC  0471               	iorwf	___lwdiv@divisor+1,w
  1503     04AD  1903               	btfsc	3,2
  1504     04AE  2CB0               	goto	u341
  1505     04AF  2CB1               	goto	u340
  1506     04B0                     u341:
  1507     04B0  2CE8               	goto	l939
  1508     04B1                     u340:
  1509     04B1                     l921:
  1510     04B1  01F6               	clrf	___lwdiv@counter
  1511     04B2  0AF6               	incf	___lwdiv@counter,f
  1512     04B3  2CBF               	goto	l927
  1513     04B4                     l923:
  1514     04B4  3001               	movlw	1
  1515     04B5                     u355:
  1516     04B5  1003               	clrc
  1517     04B6  0DF0               	rlf	___lwdiv@divisor,f
  1518     04B7  0DF1               	rlf	___lwdiv@divisor+1,f
  1519     04B8  3EFF               	addlw	-1
  1520     04B9  1D03               	skipz
  1521     04BA  2CB5               	goto	u355
  1522     04BB                     l925:
  1523     04BB  3001               	movlw	1
  1524     04BC  00FF               	movwf	btemp+1
  1525     04BD  087F               	movf	btemp+1,w
  1526     04BE  07F6               	addwf	___lwdiv@counter,f
  1527     04BF                     l927:
  1528     04BF  1FF1               	btfss	___lwdiv@divisor+1,7
  1529     04C0  2CC2               	goto	u361
  1530     04C1  2CC3               	goto	u360
  1531     04C2                     u361:
  1532     04C2  2CB4               	goto	l923
  1533     04C3                     u360:
  1534     04C3                     l929:
  1535     04C3  3001               	movlw	1
  1536     04C4                     u375:
  1537     04C4  1003               	clrc
  1538     04C5  0DF4               	rlf	___lwdiv@quotient,f
  1539     04C6  0DF5               	rlf	___lwdiv@quotient+1,f
  1540     04C7  3EFF               	addlw	-1
  1541     04C8  1D03               	skipz
  1542     04C9  2CC4               	goto	u375
  1543     04CA  0871               	movf	___lwdiv@divisor+1,w
  1544     04CB  0273               	subwf	___lwdiv@dividend+1,w
  1545     04CC  1D03               	skipz
  1546     04CD  2CD0               	goto	u385
  1547     04CE  0870               	movf	___lwdiv@divisor,w
  1548     04CF  0272               	subwf	___lwdiv@dividend,w
  1549     04D0                     u385:
  1550     04D0  1C03               	skipc
  1551     04D1  2CD3               	goto	u381
  1552     04D2  2CD4               	goto	u380
  1553     04D3                     u381:
  1554     04D3  2CDB               	goto	l935
  1555     04D4                     u380:
  1556     04D4                     l931:
  1557     04D4  0870               	movf	___lwdiv@divisor,w
  1558     04D5  02F2               	subwf	___lwdiv@dividend,f
  1559     04D6  0871               	movf	___lwdiv@divisor+1,w
  1560     04D7  1C03               	skipc
  1561     04D8  03F3               	decf	___lwdiv@dividend+1,f
  1562     04D9  02F3               	subwf	___lwdiv@dividend+1,f
  1563     04DA                     l933:
  1564     04DA  1474               	bsf	___lwdiv@quotient,0
  1565     04DB                     l935:
  1566     04DB  3001               	movlw	1
  1567     04DC                     u395:
  1568     04DC  1003               	clrc
  1569     04DD  0CF1               	rrf	___lwdiv@divisor+1,f
  1570     04DE  0CF0               	rrf	___lwdiv@divisor,f
  1571     04DF  3EFF               	addlw	-1
  1572     04E0  1D03               	skipz
  1573     04E1  2CDC               	goto	u395
  1574     04E2                     l937:
  1575     04E2  3001               	movlw	1
  1576     04E3  02F6               	subwf	___lwdiv@counter,f
  1577     04E4  1D03               	btfss	3,2
  1578     04E5  2CE7               	goto	u401
  1579     04E6  2CE8               	goto	u400
  1580     04E7                     u401:
  1581     04E7  2CC3               	goto	l929
  1582     04E8                     u400:
  1583     04E8                     l939:
  1584     04E8  0875               	movf	___lwdiv@quotient+1,w
  1585     04E9  00F1               	movwf	?___lwdiv+1
  1586     04EA  0874               	movf	___lwdiv@quotient,w
  1587     04EB  00F0               	movwf	?___lwdiv
  1588     04EC                     l467:
  1589     04EC  0008               	return
  1590     04ED                     __end_of___lwdiv:
  1591                           
  1592                           	psect	text6
  1593     047D                     __ptext6:	
  1594 ;; *************** function ___bmul *****************
  1595 ;; Defined at:
  1596 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  multiplier      1    wreg     unsigned char 
  1599 ;;  multiplicand    1    7[COMMON] unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  multiplier      1    9[COMMON] unsigned char 
  1602 ;;  product         1    8[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, btemp+1
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         1       0       0       0       0
  1613 ;;      Locals:         2       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0
  1615 ;;      Totals:         3       0       0       0       0
  1616 ;;Total ram usage:        3 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_Lcd_Output
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625     047D                     ___bmul:	
  1626                           ;psect for function ___bmul
  1627                           
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1631                           ;___bmul@multiplier stored from wreg
  1632     047D  00F9               	movwf	___bmul@multiplier
  1633     047E                     l901:
  1634     047E  01F8               	clrf	___bmul@product
  1635     047F                     l903:
  1636     047F  1C79               	btfss	___bmul@multiplier,0
  1637     0480  2C82               	goto	u321
  1638     0481  2C83               	goto	u320
  1639     0482                     u321:
  1640     0482  2C87               	goto	l907
  1641     0483                     u320:
  1642     0483                     l905:
  1643     0483  0877               	movf	___bmul@multiplicand,w
  1644     0484  00FF               	movwf	btemp+1
  1645     0485  087F               	movf	btemp+1,w
  1646     0486  07F8               	addwf	___bmul@product,f
  1647     0487                     l907:
  1648     0487  1003               	clrc
  1649     0488  0DF7               	rlf	___bmul@multiplicand,f
  1650     0489                     l909:
  1651     0489  1003               	clrc
  1652     048A  0CF9               	rrf	___bmul@multiplier,f
  1653     048B                     l911:
  1654     048B  0879               	movf	___bmul@multiplier,w
  1655     048C  1D03               	btfss	3,2
  1656     048D  2C8F               	goto	u331
  1657     048E  2C90               	goto	u330
  1658     048F                     u331:
  1659     048F  2C7F               	goto	l903
  1660     0490                     u330:
  1661     0490                     l913:
  1662     0490  0878               	movf	___bmul@product,w
  1663     0491                     l213:
  1664     0491  0008               	return
  1665     0492                     __end_of___bmul:
  1666                           
  1667                           	psect	text7
  1668     0469                     __ptext7:	
  1669 ;; *************** function _Lcd_Data *****************
  1670 ;; Defined at:
  1671 ;;		line 144 in file "7T_ADC_PWM.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  i               1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               1    2[COMMON] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, btemp+1
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0
  1687 ;;      Temps:          2       0       0       0       0
  1688 ;;      Totals:         3       0       0       0       0
  1689 ;;Total ram usage:        3 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_Lcd_Output
  1695 ;;		_init
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699     0469                     _Lcd_Data:	
  1700                           ;psect for function _Lcd_Data
  1701                           
  1702                           
  1703                           ;incstack = 0
  1704                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
  1705                           ;Lcd_Data@i stored from wreg
  1706     0469  00F2               	movwf	Lcd_Data@i
  1707     046A                     l891:
  1708     046A  1283               	bcf	3,5	;RP0=0, select bank0
  1709     046B  1303               	bcf	3,6	;RP1=0, select bank0
  1710     046C  1587               	bsf	7,3	;volatile
  1711     046D                     l893:
  1712     046D  0872               	movf	Lcd_Data@i,w
  1713     046E  0088               	movwf	8	;volatile
  1714     046F                     l895:
  1715     046F  1407               	bsf	7,0	;volatile
  1716     0470                     l897:
  1717     0470  30FE               	movlw	254
  1718     0471  00FF               	movwf	btemp+1
  1719     0472  087F               	movf	btemp+1,w
  1720     0473  0587               	andwf	7,f	;volatile
  1721     0474                     l899:
  1722     0474  30C3               	movlw	195
  1723     0475  00F1               	movwf	??_Lcd_Data+1
  1724     0476  30CD               	movlw	205
  1725     0477  00F0               	movwf	??_Lcd_Data
  1726     0478                     u717:
  1727     0478  0BF0               	decfsz	??_Lcd_Data,f
  1728     0479  2C78               	goto	u717
  1729     047A  0BF1               	decfsz	??_Lcd_Data+1,f
  1730     047B  2C78               	goto	u717
  1731     047C                     l101:
  1732     047C  0008               	return
  1733     047D                     __end_of_Lcd_Data:
  1734                           
  1735                           	psect	text8
  1736     0492                     __ptext8:	
  1737 ;; *************** function _Lcd_Command *****************
  1738 ;; Defined at:
  1739 ;;		line 137 in file "7T_ADC_PWM.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  i               1    wreg     unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  i               1    2[COMMON] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0, btemp+1
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       0       0       0
  1754 ;;      Locals:         1       0       0       0       0
  1755 ;;      Temps:          2       0       0       0       0
  1756 ;;      Totals:         3       0       0       0       0
  1757 ;;Total ram usage:        3 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_Lcd_Output
  1763 ;;		_init
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767     0492                     _Lcd_Command:	
  1768                           ;psect for function _Lcd_Command
  1769                           
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+btemp+1]
  1773                           ;Lcd_Command@i stored from wreg
  1774     0492  00F2               	movwf	Lcd_Command@i
  1775     0493                     l883:
  1776     0493  30F7               	movlw	247
  1777     0494  00FF               	movwf	btemp+1
  1778     0495  087F               	movf	btemp+1,w
  1779     0496  1283               	bcf	3,5	;RP0=0, select bank0
  1780     0497  1303               	bcf	3,6	;RP1=0, select bank0
  1781     0498  0587               	andwf	7,f	;volatile
  1782     0499                     l885:
  1783     0499  0872               	movf	Lcd_Command@i,w
  1784     049A  0088               	movwf	8	;volatile
  1785     049B                     l887:
  1786     049B  1407               	bsf	7,0	;volatile
  1787     049C                     l889:
  1788     049C  30FE               	movlw	254
  1789     049D  00FF               	movwf	btemp+1
  1790     049E  087F               	movf	btemp+1,w
  1791     049F  0587               	andwf	7,f	;volatile
  1792     04A0  30C3               	movlw	195
  1793     04A1  00F1               	movwf	??_Lcd_Command+1
  1794     04A2  30CD               	movlw	205
  1795     04A3  00F0               	movwf	??_Lcd_Command
  1796     04A4                     u727:
  1797     04A4  0BF0               	decfsz	??_Lcd_Command,f
  1798     04A5  2CA4               	goto	u727
  1799     04A6  0BF1               	decfsz	??_Lcd_Command+1,f
  1800     04A7  2CA4               	goto	u727
  1801     04A8                     l98:
  1802     04A8  0008               	return
  1803     04A9                     __end_of_Lcd_Command:
  1804     007E                     btemp	set	126	;btemp
  1805     007E                     wtemp0	set	126
  1806                           
  1807                           	psect	config
  1808                           
  1809                           ;Config register CONFIG @ 0x2007
  1810                           ;	Oscillator Selection bits
  1811                           ;	FOSC = EXTRC, RC oscillator
  1812                           ;	Watchdog Timer Enable bit
  1813                           ;	WDTE = OFF, WDT disabled
  1814                           ;	Power-up Timer Enable bit
  1815                           ;	PWRTE = OFF, PWRT disabled
  1816                           ;	Brown-out Reset Enable bit
  1817                           ;	BOREN = OFF, BOR disabled
  1818                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1819                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1820                           ;	Data EEPROM Memory Code Protection bit
  1821                           ;	CPD = OFF, Data EEPROM code protection off
  1822                           ;	Flash Program Memory Write Enable bits
  1823                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1824                           ;	In-Circuit Debugger Mode bit
  1825                           ;	DEBUG = 0x1, unprogrammed default
  1826                           ;	Flash Program Memory Code Protection bit
  1827                           ;	CP = OFF, Code protection off
  1828     2007                     	org	8199
  1829     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _init->_Lcd_Command
    _init->_Lcd_Data
    ___lldiv->___lmul
    _Lcd_Output->___bmul
    ___bmul->___lwdiv

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1788
                                             13 BANK0      4     4      0
                         _Lcd_Output
                            ___lldiv
                             ___lmul
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      44
                                              3 COMMON     2     2      0
                        _Lcd_Command
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Output                                           7     2      5    1186
                                             10 COMMON     2     2      0
                                              0 BANK0      5     0      5
                        _Lcd_Command
                           _Lcd_Data
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Output
     _Lcd_Command
     _Lcd_Data
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _init
     _Lcd_Command
     _Lcd_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Jan 26 17:48:22 2024

                      _J 0038                        _N 0039                        _i 002C  
                      _k 0028                        _m 0030                        _n 002E  
                      pc 0002           ___bmul@product 0078                       l71 0758  
                     l68 070C                       l95 06F4                       l88 063B  
                     l98 04A8                       fsr 0004                      l101 047C  
                    l201 0532                      l213 0491                      l223 059A  
                    l467 04EC                      l901 047E                      l911 048B  
                    l903 047F                      l913 0490                      l905 0483  
                    l921 04B1                      l907 0487                      l931 04D4  
                    l923 04B4                      l909 0489                      l933 04DA  
                    l925 04BB                      l917 04A9                      l935 04DB  
                    l927 04BF                      l919 04AB                      l951 0648  
                    l943 063C                      l937 04E2                      l929 04C3  
                    l961 0664                      l953 064C                      l945 0640  
                    l883 0493                      l891 046A                      l939 04E8  
                    l971 0688                      l963 066C                      l955 0650  
                    l947 0642                      l885 0499                      l893 046D  
                    l981 06AA                      l973 068E                      l965 0672  
                    l957 0656                      l949 0644                      l887 049B  
                    l895 046F                      l991 06C0                      l975 0696  
                    l967 067A                      l959 065E                      l889 049C  
                    l897 0470                      l993 06C9                      l977 069C  
                    l969 0680                      l899 0474                      l995 06CF  
                    l987 06AE                      l979 06A4                      l989 06B8  
                    u320 0483                      u400 04E8                      u321 0482  
                    u401 04E7                      u330 0490                      u410 06C9  
                    u331 048F                      u411 06C8                      u340 04B1  
                    u420 06EE                      u341 04B0                      u421 06ED  
                    u430 05B3                      u510 052A                      _PR2 0092  
                    u431 05B2                      u511 0529                      u360 04C3  
                    u440 05FE                      u520 0545                      u600 075C  
                    u361 04C2                      u441 05FD                      u521 0544  
                    u505 051A                      u601 075B                      u450 0617  
                    u610 07D0                      u355 04B5                      u451 0616  
                    u380 04D4                      u460 063B                      u540 0559  
                    u381 04D3                      u461 063A                      u541 0558  
                    u470 04F9                      u375 04C4                      u535 054A  
                    u471 04F8                      u615 07CB                      u560 0574  
                    u385 04D0                      u561 0573                      u481 0502  
                    u625 07D9                      u482 0509                      u395 04DC  
                    u555 055B                      u483 0510                      u707 06A0  
                    u580 0592                      u717 0478                      u581 0591  
                    u565 0570                      u637 0704                      u590 0710  
                    u727 04A4                      u575 0584                      u495 0512  
                    u647 0750                      u591 070F                      u657 065A  
                    u667 0668                      u677 0676                      u687 0684  
                    u697 0692                      _ch0 004F                      _ch1 004B  
                    fsr0 0004                      indf 0000      __end_of_Lcd_Command 04A9  
                   l1001 06D3                     l1011 05A7                     l1003 06DD  
                   l1021 05DF                     l1013 05AD                     l1005 06E5  
                   l1101 0737                     l1031 0606                     l1023 05E3  
                   l1015 05B3                     l1007 06EE                     l1111 076E  
                   l1103 0746                     l1041 062E                     l1033 060D  
                   l1017 05C0                     l1025 05F6                     l1009 059B  
                   l1113 077B                     l1105 074A                     l1035 0617  
                   l1027 05FE                     l1019 05D9                     l1051 04F9  
                   l1115 07B1                     l1107 0755                     l1037 061D  
                   l1045 0635                     l1029 0604                     l1061 0533  
                   l1053 0510                     l1117 07C0                     l1109 075C  
                   l1039 0622                     l1071 0559                     l1063 0545  
                   l1055 0519                     l1047 04ED                     l1119 07D5  
                   l1081 058C                     l1073 0562                     l1065 0548  
                   l1057 052A                     l1049 04F5                     l1075 0574  
                   l1067 0551                     l1083 0592                     l1091 06FE  
                   l1077 0582                     l1069 0555                     l1093 0709  
                   l1079 0583                     l1095 0710                     l1087 06F5  
                   l1097 0722                     l1089 06FA                     l1099 072F  
                   _main 06F5                     _init 063C                     btemp 007E  
                   start 0000        ___bmul@multiplier 0079               _Lcd_Output 059B  
                  ?_main 0070                    ?_init 0070          __end_of___lldiv 059B  
                  _T2CON 0012          __end_of___lwdiv 04ED                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088      ___lmul@multiplicand 0074                    _hival 0034  
                  _loval 0036                    _value 0024                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Data 047D  
        __initialization 07E6             __end_of_main 07E6             __end_of_init 06F5  
            _Lcd_Command 0492                   ??_main 0047                   ??_init 0073  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _CCPR1L 0015                   ___bmul 047D  
                 ___lmul 04ED                ??___lldiv 007D                ??___lwdiv 0074  
            ?_Lcd_Output 003A  __end_of__initialization 07FC      ___bmul@multiplicand 0077  
         __pcstackCOMMON 0070             __pidataBANK0 044E                ?_Lcd_Data 0070  
             __pbssBANK0 0020               _delaycount 0032               __pmaintext 06F5  
                ?___bmul 0077                  ?___lmul 0070                  _CCP1CON 0017  
         ___lmul@product 0079               ??_Lcd_Data 0070                  ___lldiv 0533  
                ___lwdiv 04A9             ?_Lcd_Command 0070                  __ptext1 063C  
                __ptext2 04ED                  __ptext3 0533                  __ptext4 059B  
                __ptext5 04A9                  __ptext6 047D                  __ptext7 0469  
                __ptext8 0492                  clrloop0 0447                  _voltage 0020  
   end_of_initialization 07FC          ___lldiv@divisor 003A                Lcd_Data@i 0072  
        ___lldiv@counter 0046             ??_Lcd_Output 007A       __end_of_Lcd_Output 063C  
         __end_of___bmul 0492           __end_of___lmul 0533      start_initialization 07E6  
               ??___bmul 0078                 ??___lmul 0078               init_fetch0 0456  
            __pdataBANK0 004B                ___latbits 0002            __pcstackBANK0 003A  
          Lcd_Output@pos 003E         ___lwdiv@dividend 0072                 ?___lldiv 003A  
               ?___lwdiv 0070         ___lwdiv@quotient 0074                clear_ram0 0446  
           Lcd_Command@i 0072                 _Lcd_Data 0469        ___lmul@multiplier 0070  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 init_ram0 045A  
            Lcd_Output@i 003A              Lcd_Output@j 007B              Lcd_Output@s 007A  
       ___lldiv@dividend 003E            ??_Lcd_Command 0070         ___lldiv@quotient 0042  
