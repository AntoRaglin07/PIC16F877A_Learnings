

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 03 00:24:27 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	nvCOMMON
   169     0072                     __pnvCOMMON:
   170     0072                     _val:
   171     0072                     	ds	1
   172     0018                     _RCSTA	set	24
   173     0008                     _PORTD	set	8
   174     001A                     _RCREG	set	26
   175     0019                     _TXREG	set	25
   176     0006                     _PORTB	set	6
   177     0065                     _RCIF	set	101
   178     0088                     _TRISD	set	136
   179     0098                     _TXSTA	set	152
   180     0099                     _SPBRG	set	153
   181     0087                     _TRISC	set	135
   182     0081                     _OPTION_REG	set	129
   183     0086                     _TRISB	set	134
   184                           
   185                           	psect	cinit
   186     07FB                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FB                     __initialization:
   190                           
   191                           ; Clear objects allocated to COMMON
   192     07FB  01F3               	clrf	__pbssCOMMON& (0+127)
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2F9B   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201     0073                     __pbssCOMMON:
   202     0073                     _rec_val:
   203     0073                     	ds	1
   204                           
   205                           	psect	cstackCOMMON
   206     0070                     __pcstackCOMMON:
   207     0070                     ?_init:
   208     0070                     ??_init:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ??_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219     0070                     	ds	2
   220                           
   221                           	psect	maintext
   222     079B                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 22 in file "8T_UART_LCD_Send.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          2       0       0       0       0
   245 ;;      Totals:         2       0       0       0       0
   246 ;;Total ram usage:        2 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_init
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     079B                     _main:	
   256                           ;psect for function _main
   257                           
   258     079B                     l616:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   261                           
   262     079B  120A  118A  277F  120A  118A  	fcall	_init
   263     07A0                     l618:
   264     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   265     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   266     07A2  0806               	movf	6,w	;volatile
   267     07A3  00F2               	movwf	_val
   268     07A4  2FB1               	goto	l630
   269     07A5                     l620:
   270     07A5  3041               	movlw	65
   271     07A6  0099               	movwf	25	;volatile
   272     07A7  2FC7               	goto	l40
   273     07A8                     l622:
   274     07A8  3042               	movlw	66
   275     07A9  0099               	movwf	25	;volatile
   276     07AA  2FC7               	goto	l40
   277     07AB                     l624:
   278     07AB  3043               	movlw	67
   279     07AC  0099               	movwf	25	;volatile
   280     07AD  2FC7               	goto	l40
   281     07AE                     l626:
   282     07AE  3044               	movlw	68
   283     07AF  0099               	movwf	25	;volatile
   284     07B0  2FC7               	goto	l40
   285     07B1                     l630:
   286     07B1  0872               	movf	_val,w
   287     07B2  00F0               	movwf	??_main
   288     07B3  01F1               	clrf	??_main+1
   289                           
   290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   291                           ; Switch size 1, requested type "simple"
   292                           ; Number of cases is 1, Range of values is 0 to 0
   293                           ; switch strategies available:
   294                           ; Name         Instructions Cycles
   295                           ; simple_byte            4     3 (average)
   296                           ; direct_byte           11     8 (fixed)
   297                           ; jumptable            260     6 (fixed)
   298                           ;	Chosen strategy is simple_byte
   299     07B4  0871               	movf	??_main+1,w
   300     07B5  3A00               	xorlw	0	; case 0
   301     07B6  1903               	skipnz
   302     07B7  2FB9               	goto	l696
   303     07B8  2FC7               	goto	l40
   304     07B9                     l696:
   305                           
   306                           ; Switch size 1, requested type "simple"
   307                           ; Number of cases is 4, Range of values is 247 to 254
   308                           ; switch strategies available:
   309                           ; Name         Instructions Cycles
   310                           ; simple_byte           13     7 (average)
   311                           ; direct_byte           35    11 (fixed)
   312                           ; jumptable            263     9 (fixed)
   313                           ;	Chosen strategy is simple_byte
   314     07B9  0870               	movf	??_main,w
   315     07BA  3AF7               	xorlw	247	; case 247
   316     07BB  1903               	skipnz
   317     07BC  2FAE               	goto	l626
   318     07BD  3A0C               	xorlw	12	; case 251
   319     07BE  1903               	skipnz
   320     07BF  2FAB               	goto	l624
   321     07C0  3A06               	xorlw	6	; case 253
   322     07C1  1903               	skipnz
   323     07C2  2FA8               	goto	l622
   324     07C3  3A03               	xorlw	3	; case 254
   325     07C4  1903               	skipnz
   326     07C5  2FA5               	goto	l620
   327     07C6  2FC7               	goto	l40
   328     07C7                     l40:
   329     07C7  1E8C               	btfss	12,5	;volatile
   330     07C8  2FCA               	goto	u11
   331     07C9  2FCB               	goto	u10
   332     07CA                     u11:
   333     07CA  2FEF               	goto	l646
   334     07CB                     u10:
   335     07CB                     l632:
   336     07CB  081A               	movf	26,w	;volatile
   337     07CC  00F3               	movwf	_rec_val
   338     07CD  2FD9               	goto	l644
   339     07CE                     l634:
   340     07CE  3002               	movlw	2
   341     07CF  0088               	movwf	8	;volatile
   342     07D0  2FEF               	goto	l646
   343     07D1                     l636:
   344     07D1  3004               	movlw	4
   345     07D2  0088               	movwf	8	;volatile
   346     07D3  2FEF               	goto	l646
   347     07D4                     l638:
   348     07D4  3006               	movlw	6
   349     07D5  0088               	movwf	8	;volatile
   350     07D6  2FEF               	goto	l646
   351     07D7                     l640:
   352     07D7  0188               	clrf	8	;volatile
   353     07D8  2FEF               	goto	l646
   354     07D9                     l644:
   355     07D9  0873               	movf	_rec_val,w
   356     07DA  00F0               	movwf	??_main
   357     07DB  01F1               	clrf	??_main+1
   358                           
   359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   360                           ; Switch size 1, requested type "simple"
   361                           ; Number of cases is 1, Range of values is 0 to 0
   362                           ; switch strategies available:
   363                           ; Name         Instructions Cycles
   364                           ; simple_byte            4     3 (average)
   365                           ; direct_byte           11     8 (fixed)
   366                           ; jumptable            260     6 (fixed)
   367                           ;	Chosen strategy is simple_byte
   368     07DC  0871               	movf	??_main+1,w
   369     07DD  3A00               	xorlw	0	; case 0
   370     07DE  1903               	skipnz
   371     07DF  2FE1               	goto	l698
   372     07E0  2FEF               	goto	l646
   373     07E1                     l698:
   374                           
   375                           ; Switch size 1, requested type "simple"
   376                           ; Number of cases is 4, Range of values is 97 to 100
   377                           ; switch strategies available:
   378                           ; Name         Instructions Cycles
   379                           ; simple_byte           13     7 (average)
   380                           ; direct_byte           23    11 (fixed)
   381                           ; jumptable            263     9 (fixed)
   382                           ;	Chosen strategy is simple_byte
   383     07E1  0870               	movf	??_main,w
   384     07E2  3A61               	xorlw	97	; case 97
   385     07E3  1903               	skipnz
   386     07E4  2FCE               	goto	l634
   387     07E5  3A03               	xorlw	3	; case 98
   388     07E6  1903               	skipnz
   389     07E7  2FD1               	goto	l636
   390     07E8  3A01               	xorlw	1	; case 99
   391     07E9  1903               	skipnz
   392     07EA  2FD4               	goto	l638
   393     07EB  3A07               	xorlw	7	; case 100
   394     07EC  1903               	skipnz
   395     07ED  2FD7               	goto	l640
   396     07EE  2FEF               	goto	l646
   397     07EF                     l646:
   398     07EF  30C3               	movlw	195
   399     07F0  00F1               	movwf	??_main+1
   400     07F1  30CD               	movlw	205
   401     07F2  00F0               	movwf	??_main
   402     07F3                     u27:
   403     07F3  0BF0               	decfsz	??_main,f
   404     07F4  2FF3               	goto	u27
   405     07F5  0BF1               	decfsz	??_main+1,f
   406     07F6  2FF3               	goto	u27
   407     07F7  2FA0               	goto	l618
   408     07F8  120A  118A  2800   	ljmp	start
   409     07FB                     __end_of_main:
   410                           
   411                           	psect	text1
   412     077F                     __ptext1:	
   413 ;; *************** function _init *****************
   414 ;; Defined at:
   415 ;;		line 68 in file "8T_UART_LCD_Send.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, btemp+1
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     077F                     _init:	
   443                           ;psect for function _init
   444                           
   445     077F                     l600:	
   446                           ;incstack = 0
   447                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   448                           
   449     077F  30FF               	movlw	255
   450     0780  1683               	bsf	3,5	;RP0=1, select bank1
   451     0781  1303               	bcf	3,6	;RP1=0, select bank1
   452     0782  0086               	movwf	6	;volatile
   453     0783                     l602:
   454     0783  307F               	movlw	127
   455     0784  00FF               	movwf	btemp+1
   456     0785  087F               	movf	btemp+1,w
   457     0786  0581               	andwf	1,f	;volatile
   458     0787                     l604:
   459     0787  30C0               	movlw	192
   460     0788  0087               	movwf	7	;volatile
   461     0789                     l606:
   462     0789  3009               	movlw	9
   463     078A  0099               	movwf	25	;volatile
   464     078B                     l608:
   465     078B  30EF               	movlw	239
   466     078C  00FF               	movwf	btemp+1
   467     078D  087F               	movf	btemp+1,w
   468     078E  0598               	andwf	24,f	;volatile
   469     078F  3090               	movlw	144
   470     0790  1283               	bcf	3,5	;RP0=0, select bank0
   471     0791  1303               	bcf	3,6	;RP1=0, select bank0
   472     0792  0098               	movwf	24	;volatile
   473     0793                     l610:
   474     0793  1683               	bsf	3,5	;RP0=1, select bank1
   475     0794  1303               	bcf	3,6	;RP1=0, select bank1
   476     0795  1698               	bsf	24,5	;volatile
   477     0796                     l612:
   478     0796  0188               	clrf	8	;volatile
   479     0797                     l614:
   480     0797  1283               	bcf	3,5	;RP0=0, select bank0
   481     0798  1303               	bcf	3,6	;RP1=0, select bank0
   482     0799  0188               	clrf	8	;volatile
   483     079A                     l56:
   484     079A  0008               	return
   485     079B                     __end_of_init:
   486     007E                     btemp	set	126	;btemp
   487     007E                     wtemp0	set	126
   488                           
   489                           	psect	config
   490                           
   491                           ;Config register CONFIG @ 0x2007
   492                           ;	Oscillator Selection bits
   493                           ;	FOSC = EXTRC, RC oscillator
   494                           ;	Watchdog Timer Enable bit
   495                           ;	WDTE = OFF, WDT disabled
   496                           ;	Power-up Timer Enable bit
   497                           ;	PWRTE = OFF, PWRT disabled
   498                           ;	Brown-out Reset Enable bit
   499                           ;	BOREN = OFF, BOR disabled
   500                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   501                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   502                           ;	Data EEPROM Memory Code Protection bit
   503                           ;	CPD = OFF, Data EEPROM code protection off
   504                           ;	Flash Program Memory Write Enable bits
   505                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   506                           ;	In-Circuit Debugger Mode bit
   507                           ;	DEBUG = 0x1, unprogrammed default
   508                           ;	Flash Program Memory Code Protection bit
   509                           ;	CP = OFF, Code protection off
   510     2007                     	org	8199
   511     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 03 00:24:27 2024

                     l40 07C7                       l56 079A                       u10 07CB  
                     u11 07CA                       u27 07F3                      l600 077F  
                    l610 0793                      l602 0783                      l612 0796  
                    l604 0787                      l620 07A5                      l614 0797  
                    l606 0789                      l622 07A8                      l630 07B1  
                    l608 078B                      l640 07D7                      l632 07CB  
                    l624 07AB                      l616 079B                      l634 07CE  
                    l626 07AE                      l618 07A0                      l636 07D1  
                    l644 07D9                      l638 07D4                      l646 07EF  
                    l696 07B9                      l698 07E1                      _val 0072  
                   _RCIF 0065                     _main 079B                     _init 077F  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_init 0070                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
           __end_of_init 079B                   ??_main 0070                   ??_init 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pnvCOMMON 0072  
             __pmaintext 079B                  __ptext1 077F                  _rec_val 0073  
   end_of_initialization 07FC      start_initialization 07FB              __pbssCOMMON 0073  
              ___latbits 0002               _OPTION_REG 0081  
