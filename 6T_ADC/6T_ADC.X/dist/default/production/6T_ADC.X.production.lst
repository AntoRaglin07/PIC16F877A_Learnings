

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 16 19:13:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     04FB                     __pidataBANK0:
   180                           
   181                           ;initializer for _cal_val
   182     04FB  3443               	retlw	67
   183     04FC  3461               	retlw	97
   184     04FD  346C               	retlw	108
   185     04FE  345F               	retlw	95
   186     04FF  3456               	retlw	86
   187     0500  3461               	retlw	97
   188     0501  346C               	retlw	108
   189     0502  343A               	retlw	58
   190     0503  3420               	retlw	32
   191     0504  3400               	retlw	0
   192                           
   193                           ;initializer for _act_val
   194     0505  3441               	retlw	65
   195     0506  3463               	retlw	99
   196     0507  3474               	retlw	116
   197     0508  345F               	retlw	95
   198     0509  3456               	retlw	86
   199     050A  3461               	retlw	97
   200     050B  346C               	retlw	108
   201     050C  343A               	retlw	58
   202     050D  3420               	retlw	32
   203     050E  3400               	retlw	0
   204     0008                     _PORTD	set	8
   205     0007                     _PORTC	set	7
   206     001E                     _ADRESH	set	30
   207     001F                     _ADCON0	set	31
   208     009F                     _ADCON1	set	159
   209     0085                     _TRISA	set	133
   210     0088                     _TRISD	set	136
   211     0087                     _TRISC	set	135
   212     009E                     _ADRESL	set	158
   213                           
   214                           	psect	cinit
   215     07E6                     start_initialization:	
   216                           ; #config settings
   217                           
   218     07E6                     __initialization:
   219                           
   220                           ; Initialize objects allocated to BANK0
   221     07E6  1383               	bcf	3,7	;select IRP bank0
   222     07E7  3069               	movlw	low (__pdataBANK0+20)
   223     07E8  00FD               	movwf	btemp+-1
   224     07E9  3004               	movlw	high __pidataBANK0
   225     07EA  00FE               	movwf	btemp
   226     07EB  30FB               	movlw	low __pidataBANK0
   227     07EC  00FF               	movwf	btemp+1
   228     07ED  3055               	movlw	low __pdataBANK0
   229     07EE  0084               	movwf	4
   230     07EF  120A  118A  24D8  120A  118A  	fcall	init_ram0
   231                           
   232                           ; Clear objects allocated to BANK0
   233     07F4  3020               	movlw	low __pbssBANK0
   234     07F5  0084               	movwf	4
   235     07F6  303D               	movlw	low (__pbssBANK0+29)
   236     07F7  120A  118A  24CC  120A  118A  	fcall	clear_ram0
   237     07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240     07FC                     __end_of__initialization:
   241     07FC  0183               	clrf	3
   242     07FD  120A  118A  2EFB   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssBANK0
   245     0020                     __pbssBANK0:
   246     0020                     _k:
   247     0020                     	ds	5
   248     0025                     _m:
   249     0025                     	ds	4
   250     0029                     _voltage:
   251     0029                     	ds	4
   252     002D                     _value:
   253     002D                     	ds	4
   254     0031                     _i:
   255     0031                     	ds	2
   256     0033                     _n:
   257     0033                     	ds	2
   258     0035                     _delaycount:
   259     0035                     	ds	2
   260     0037                     _hival:
   261     0037                     	ds	2
   262     0039                     _loval:
   263     0039                     	ds	2
   264     003B                     _J:
   265     003B                     	ds	1
   266     003C                     _N:
   267     003C                     	ds	1
   268                           
   269                           	psect	dataBANK0
   270     0055                     __pdataBANK0:
   271     0055                     _cal_val:
   272     0055                     	ds	10
   273     005F                     _act_val:
   274     005F                     	ds	10
   275                           
   276                           	psect	inittext
   277     04D4                     init_fetch0:	
   278                           ;	Called with low address in FSR and high address in W
   279                           
   280     04D4  087E               	movf	btemp,w
   281     04D5  008A               	movwf	10
   282     04D6  087F               	movf	btemp+1,w
   283     04D7  0082               	movwf	2
   284     04D8                     init_ram0:	
   285                           ;Called with:
   286                           ;	high address of idata address in btemp 
   287                           ;	low address of idata address in btemp+1 
   288                           ;	low address of data in FSR
   289                           ;	high address + 1 of data in btemp-1
   290                           
   291     04D8  120A  118A  24D4  120A  118A  	fcall	init_fetch0
   292     04DD  0080               	movwf	0
   293     04DE  0A84               	incf	4,f
   294     04DF  0804               	movf	4,w
   295     04E0  067D               	xorwf	btemp+-1,w
   296     04E1  1903               	btfsc	3,2
   297     04E2  3400               	retlw	0
   298     04E3  0AFF               	incf	btemp+1,f
   299     04E4  1903               	btfsc	3,2
   300     04E5  0AFE               	incf	btemp,f
   301     04E6  2CD8               	goto	init_ram0
   302                           
   303                           	psect	clrtext
   304     04CC                     clear_ram0:	
   305                           ;	Called with FSR containing the base address, and
   306                           ;	W with the last address+1
   307                           
   308     04CC  0064               	clrwdt	;clear the watchdog before getting into this loop
   309     04CD                     clrloop0:
   310     04CD  0180               	clrf	0	;clear RAM location pointed to by FSR
   311     04CE  0A84               	incf	4,f	;increment pointer
   312     04CF  0604               	xorwf	4,w	;XOR with final address
   313     04D0  1903               	btfsc	3,2	;have we reached the end yet?
   314     04D1  3400               	retlw	0	;all done for this memory range, return
   315     04D2  0604               	xorwf	4,w	;XOR again to restore value
   316     04D3  2CCD               	goto	clrloop0	;do the next byte
   317                           
   318                           	psect	cstackCOMMON
   319     0070                     __pcstackCOMMON:
   320     0070                     ?_init:
   321     0070                     ?_Lcd_Command:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_Lcd_Command:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_Lcd_Data:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ??_Lcd_Data:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?___lmul:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ___lmul@multiplier:	
   340                           ; 4 bytes @ 0x0
   341                           
   342                           
   343                           ; 4 bytes @ 0x0
   344     0070                     	ds	2
   345     0072                     Lcd_Command@i:
   346     0072                     Lcd_Data@i:	
   347                           ; 1 bytes @ 0x2
   348                           
   349                           
   350                           ; 1 bytes @ 0x2
   351     0072                     	ds	1
   352     0073                     ??_init:
   353                           
   354                           ; 1 bytes @ 0x3
   355     0073                     	ds	1
   356     0074                     ___lmul@multiplicand:
   357                           
   358                           ; 4 bytes @ 0x4
   359     0074                     	ds	4
   360     0078                     ??___lmul:
   361                           
   362                           ; 1 bytes @ 0x8
   363     0078                     	ds	1
   364     0079                     ___lmul@product:
   365                           
   366                           ; 4 bytes @ 0x9
   367     0079                     	ds	4
   368     007D                     ??___lldiv:
   369                           
   370                           ; 1 bytes @ 0xD
   371     007D                     	ds	1
   372     007E                     ??_Lcd_Output:
   373     007E                     ??___bmul:	
   374                           ; 1 bytes @ 0xE
   375                           
   376                           
   377                           	psect	cstackBANK0
   378     003D                     __pcstackBANK0:	
   379                           ; 1 bytes @ 0xE
   380                           
   381     003D                     ?___lldiv:
   382     003D                     ___lldiv@divisor:	
   383                           ; 4 bytes @ 0x0
   384                           
   385                           
   386                           ; 4 bytes @ 0x0
   387     003D                     	ds	4
   388     0041                     ___lldiv@dividend:
   389                           
   390                           ; 4 bytes @ 0x4
   391     0041                     	ds	4
   392     0045                     ___lldiv@quotient:
   393                           
   394                           ; 4 bytes @ 0x8
   395     0045                     	ds	4
   396     0049                     ___lldiv@counter:
   397                           
   398                           ; 1 bytes @ 0xC
   399     0049                     	ds	1
   400     004A                     ?___bmul:
   401     004A                     ___bmul@multiplicand:	
   402                           ; 1 bytes @ 0xD
   403                           
   404                           
   405                           ; 1 bytes @ 0xD
   406     004A                     	ds	1
   407     004B                     ___bmul@product:
   408                           
   409                           ; 1 bytes @ 0xE
   410     004B                     	ds	1
   411     004C                     ___bmul@multiplier:
   412                           
   413                           ; 1 bytes @ 0xF
   414     004C                     	ds	1
   415     004D                     ?_Lcd_Output:
   416     004D                     Lcd_Output@i:	
   417                           ; 1 bytes @ 0x10
   418                           
   419                           
   420                           ; 4 bytes @ 0x10
   421     004D                     	ds	4
   422     0051                     Lcd_Output@s:
   423                           
   424                           ; 1 bytes @ 0x14
   425     0051                     	ds	1
   426     0052                     Lcd_Output@j:
   427                           
   428                           ; 1 bytes @ 0x15
   429     0052                     	ds	1
   430     0053                     ??_main:
   431                           
   432                           ; 1 bytes @ 0x16
   433     0053                     	ds	2
   434                           
   435                           	psect	maintext
   436     06FB                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 30 in file "6T_ADC.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : B00/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          0       2       0       0       0
   459 ;;      Totals:         0       2       0       0       0
   460 ;;Total ram usage:        2 bytes
   461 ;; Hardware stack levels required when called: 2
   462 ;; This function calls:
   463 ;;		_Lcd_Command
   464 ;;		_Lcd_Data
   465 ;;		_Lcd_Output
   466 ;;		___lldiv
   467 ;;		___lmul
   468 ;;		_init
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474     06FB                     _main:	
   475                           ;psect for function _main
   476                           
   477     06FB                     l954:	
   478                           ;incstack = 0
   479                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   480                           
   481     06FB  120A  118A  2583  120A  118A  	fcall	_init
   482     0700  3080               	movlw	128
   483     0701  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   484     0706                     l956:
   485     0706  1283               	bcf	3,5	;RP0=0, select bank0
   486     0707  1303               	bcf	3,6	;RP1=0, select bank0
   487     0708  01B1               	clrf	_i
   488     0709  01B2               	clrf	_i+1
   489     070A                     l962:
   490     070A  0831               	movf	_i,w
   491     070B  3E5F               	addlw	(low (_act_val| 0))& (0+255)
   492     070C  0084               	movwf	4
   493     070D  1383               	bcf	3,7	;select IRP bank0
   494     070E  0800               	movf	0,w
   495     070F  120A  118A  24E7  120A  118A  	fcall	_Lcd_Data
   496     0714                     l964:
   497     0714  3001               	movlw	1
   498     0715  1283               	bcf	3,5	;RP0=0, select bank0
   499     0716  1303               	bcf	3,6	;RP1=0, select bank0
   500     0717  07B1               	addwf	_i,f
   501     0718  1803               	skipnc
   502     0719  0AB2               	incf	_i+1,f
   503     071A  3000               	movlw	0
   504     071B  07B2               	addwf	_i+1,f
   505     071C                     l966:
   506     071C  3000               	movlw	0
   507     071D  0232               	subwf	_i+1,w
   508     071E  300A               	movlw	10
   509     071F  1903               	skipnz
   510     0720  0231               	subwf	_i,w
   511     0721  1C03               	skipc
   512     0722  2F24               	goto	u401
   513     0723  2F25               	goto	u400
   514     0724                     u401:
   515     0724  2F0A               	goto	l962
   516     0725                     u400:
   517     0725                     l968:
   518     0725  30C0               	movlw	192
   519     0726  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   520     072B                     l970:
   521     072B  1283               	bcf	3,5	;RP0=0, select bank0
   522     072C  1303               	bcf	3,6	;RP1=0, select bank0
   523     072D  01B1               	clrf	_i
   524     072E  01B2               	clrf	_i+1
   525     072F                     l976:
   526     072F  0831               	movf	_i,w
   527     0730  3E55               	addlw	(low (_cal_val| 0))& (0+255)
   528     0731  0084               	movwf	4
   529     0732  1383               	bcf	3,7	;select IRP bank0
   530     0733  0800               	movf	0,w
   531     0734  120A  118A  24E7  120A  118A  	fcall	_Lcd_Data
   532     0739                     l978:
   533     0739  3001               	movlw	1
   534     073A  1283               	bcf	3,5	;RP0=0, select bank0
   535     073B  1303               	bcf	3,6	;RP1=0, select bank0
   536     073C  07B1               	addwf	_i,f
   537     073D  1803               	skipnc
   538     073E  0AB2               	incf	_i+1,f
   539     073F  3000               	movlw	0
   540     0740  07B2               	addwf	_i+1,f
   541     0741                     l980:
   542     0741  3000               	movlw	0
   543     0742  0232               	subwf	_i+1,w
   544     0743  300A               	movlw	10
   545     0744  1903               	skipnz
   546     0745  0231               	subwf	_i,w
   547     0746  1C03               	skipc
   548     0747  2F49               	goto	u411
   549     0748  2F4A               	goto	u410
   550     0749                     u411:
   551     0749  2F2F               	goto	l976
   552     074A                     u410:
   553     074A                     l982:
   554     074A  30CE               	movlw	206
   555     074B  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   556     0750  3056               	movlw	86
   557     0751  120A  118A  24E7  120A  118A  	fcall	_Lcd_Data
   558     0756                     l984:
   559     0756  1283               	bcf	3,5	;RP0=0, select bank0
   560     0757  1303               	bcf	3,6	;RP1=0, select bank0
   561     0758  151F               	bsf	31,2	;volatile
   562     0759                     l64:
   563     0759  191F               	btfsc	31,2	;volatile
   564     075A  2F5C               	goto	u421
   565     075B  2F5D               	goto	u420
   566     075C                     u421:
   567     075C  2F59               	goto	l64
   568     075D                     u420:
   569     075D                     l986:
   570     075D  1683               	bsf	3,5	;RP0=1, select bank1
   571     075E  1303               	bcf	3,6	;RP1=0, select bank1
   572     075F  081E               	movf	30,w	;volatile
   573     0760  1283               	bcf	3,5	;RP0=0, select bank0
   574     0761  1303               	bcf	3,6	;RP1=0, select bank0
   575     0762  00D3               	movwf	??_main
   576     0763  01D4               	clrf	??_main+1
   577     0764  0853               	movf	??_main,w
   578     0765  00B9               	movwf	_loval
   579     0766  0854               	movf	??_main+1,w
   580     0767  00BA               	movwf	_loval+1
   581     0768  081E               	movf	30,w	;volatile
   582     0769  00D3               	movwf	??_main
   583     076A  01D4               	clrf	??_main+1
   584     076B  0853               	movf	??_main,w
   585     076C  00B7               	movwf	_hival
   586     076D  0854               	movf	??_main+1,w
   587     076E  00B8               	movwf	_hival+1
   588     076F                     l988:
   589     076F  0837               	movf	_hival,w
   590     0770  00D4               	movwf	??_main+1
   591     0771  01D3               	clrf	??_main
   592     0772  0839               	movf	_loval,w
   593     0773  0753               	addwf	??_main,w
   594     0774  00AD               	movwf	_value
   595     0775  083A               	movf	_loval+1,w
   596     0776  1803               	skipnc
   597     0777  0A3A               	incf	_loval+1,w
   598     0778  0754               	addwf	??_main+1,w
   599     0779  00AE               	movwf	_value+1
   600     077A  01AF               	clrf	_value+2
   601     077B  01B0               	clrf	_value+3
   602     077C                     l990:
   603     077C  3000               	movlw	0
   604     077D  00C0               	movwf	___lldiv@divisor+3
   605     077E  3000               	movlw	0
   606     077F  00BF               	movwf	___lldiv@divisor+2
   607     0780  3003               	movlw	3
   608     0781  00BE               	movwf	___lldiv@divisor+1
   609     0782  30FF               	movlw	255
   610     0783  00BD               	movwf	___lldiv@divisor
   611     0784  0830               	movf	_value+3,w
   612     0785  00F3               	movwf	___lmul@multiplier+3
   613     0786  082F               	movf	_value+2,w
   614     0787  00F2               	movwf	___lmul@multiplier+2
   615     0788  082E               	movf	_value+1,w
   616     0789  00F1               	movwf	___lmul@multiplier+1
   617     078A  082D               	movf	_value,w
   618     078B  00F0               	movwf	___lmul@multiplier
   619     078C  3000               	movlw	0
   620     078D  00F7               	movwf	___lmul@multiplicand+3
   621     078E  3000               	movlw	0
   622     078F  00F6               	movwf	___lmul@multiplicand+2
   623     0790  3000               	movlw	0
   624     0791  00F5               	movwf	___lmul@multiplicand+1
   625     0792  3064               	movlw	100
   626     0793  00F4               	movwf	___lmul@multiplicand
   627     0794  120A  118A  253D  120A  118A  	fcall	___lmul
   628     0799  0873               	movf	?___lmul+3,w
   629     079A  1283               	bcf	3,5	;RP0=0, select bank0
   630     079B  1303               	bcf	3,6	;RP1=0, select bank0
   631     079C  00C4               	movwf	___lldiv@dividend+3
   632     079D  0872               	movf	?___lmul+2,w
   633     079E  00C3               	movwf	___lldiv@dividend+2
   634     079F  0871               	movf	?___lmul+1,w
   635     07A0  00C2               	movwf	___lldiv@dividend+1
   636     07A1  0870               	movf	?___lmul,w
   637     07A2  00C1               	movwf	___lldiv@dividend
   638     07A3  120A  118A  25E6  120A  118A  	fcall	___lldiv
   639     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   640     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   641     07AA  0840               	movf	?___lldiv+3,w
   642     07AB  00AC               	movwf	_voltage+3
   643     07AC  083F               	movf	?___lldiv+2,w
   644     07AD  00AB               	movwf	_voltage+2
   645     07AE  083E               	movf	?___lldiv+1,w
   646     07AF  00AA               	movwf	_voltage+1
   647     07B0  083D               	movf	?___lldiv,w
   648     07B1  00A9               	movwf	_voltage
   649     07B2                     l992:
   650     07B2  3004               	movlw	4
   651     07B3  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   652     07B8                     l994:
   653     07B8  308D               	movlw	141
   654     07B9  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   655     07BE                     l996:
   656     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   657     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   658     07C0  0830               	movf	_value+3,w
   659     07C1  00D0               	movwf	Lcd_Output@i+3
   660     07C2  082F               	movf	_value+2,w
   661     07C3  00CF               	movwf	Lcd_Output@i+2
   662     07C4  082E               	movf	_value+1,w
   663     07C5  00CE               	movwf	Lcd_Output@i+1
   664     07C6  082D               	movf	_value,w
   665     07C7  00CD               	movwf	Lcd_Output@i
   666     07C8  120A  118A  264E  120A  118A  	fcall	_Lcd_Output
   667     07CD                     l998:
   668     07CD  30CD               	movlw	205
   669     07CE  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   670     07D3                     l1000:
   671     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   672     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   673     07D5  082C               	movf	_voltage+3,w
   674     07D6  00D0               	movwf	Lcd_Output@i+3
   675     07D7  082B               	movf	_voltage+2,w
   676     07D8  00CF               	movwf	Lcd_Output@i+2
   677     07D9  082A               	movf	_voltage+1,w
   678     07DA  00CE               	movwf	Lcd_Output@i+1
   679     07DB  0829               	movf	_voltage,w
   680     07DC  00CD               	movwf	Lcd_Output@i
   681     07DD  120A  118A  264E  120A  118A  	fcall	_Lcd_Output
   682     07E2  2F56               	goto	l984
   683     07E3  120A  118A  2800   	ljmp	start
   684     07E6                     __end_of_main:
   685                           
   686                           	psect	text1
   687     0583                     __ptext1:	
   688 ;; *************** function _init *****************
   689 ;; Defined at:
   690 ;;		line 101 in file "6T_ADC.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          2       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 1
   711 ;; This function calls:
   712 ;;		_Lcd_Command
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     0583                     _init:	
   719                           ;psect for function _init
   720                           
   721     0583                     l878:	
   722                           ;incstack = 0
   723                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   724                           
   725     0583  1683               	bsf	3,5	;RP0=1, select bank1
   726     0584  1303               	bcf	3,6	;RP1=0, select bank1
   727     0585  0187               	clrf	7	;volatile
   728     0586  0188               	clrf	8	;volatile
   729     0587                     l880:
   730     0587  3004               	movlw	4
   731     0588  0085               	movwf	5	;volatile
   732     0589                     l882:
   733     0589  3091               	movlw	145
   734     058A  1283               	bcf	3,5	;RP0=0, select bank0
   735     058B  1303               	bcf	3,6	;RP1=0, select bank0
   736     058C  009F               	movwf	31	;volatile
   737     058D                     l884:
   738     058D  3080               	movlw	128
   739     058E  1683               	bsf	3,5	;RP0=1, select bank1
   740     058F  1303               	bcf	3,6	;RP1=0, select bank1
   741     0590  009F               	movwf	31	;volatile
   742     0591                     l886:
   743     0591  3030               	movlw	48
   744     0592  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   745     0597                     l888:
   746     0597  30C3               	movlw	195
   747     0598  00F4               	movwf	??_init+1
   748     0599  30CD               	movlw	205
   749     059A  00F3               	movwf	??_init
   750     059B                     u437:
   751     059B  0BF3               	decfsz	??_init,f
   752     059C  2D9B               	goto	u437
   753     059D  0BF4               	decfsz	??_init+1,f
   754     059E  2D9B               	goto	u437
   755     059F                     l890:
   756     059F  3030               	movlw	48
   757     05A0  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   758     05A5                     l892:
   759     05A5  30C3               	movlw	195
   760     05A6  00F4               	movwf	??_init+1
   761     05A7  30CD               	movlw	205
   762     05A8  00F3               	movwf	??_init
   763     05A9                     u447:
   764     05A9  0BF3               	decfsz	??_init,f
   765     05AA  2DA9               	goto	u447
   766     05AB  0BF4               	decfsz	??_init+1,f
   767     05AC  2DA9               	goto	u447
   768     05AD                     l894:
   769     05AD  3030               	movlw	48
   770     05AE  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   771     05B3                     l896:
   772     05B3  30C3               	movlw	195
   773     05B4  00F4               	movwf	??_init+1
   774     05B5  30CD               	movlw	205
   775     05B6  00F3               	movwf	??_init
   776     05B7                     u457:
   777     05B7  0BF3               	decfsz	??_init,f
   778     05B8  2DB7               	goto	u457
   779     05B9  0BF4               	decfsz	??_init+1,f
   780     05BA  2DB7               	goto	u457
   781     05BB                     l898:
   782     05BB  3038               	movlw	56
   783     05BC  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   784     05C1                     l900:
   785     05C1  30C3               	movlw	195
   786     05C2  00F4               	movwf	??_init+1
   787     05C3  30CD               	movlw	205
   788     05C4  00F3               	movwf	??_init
   789     05C5                     u467:
   790     05C5  0BF3               	decfsz	??_init,f
   791     05C6  2DC5               	goto	u467
   792     05C7  0BF4               	decfsz	??_init+1,f
   793     05C8  2DC5               	goto	u467
   794     05C9                     l902:
   795     05C9  300C               	movlw	12
   796     05CA  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   797     05CF                     l904:
   798     05CF  30C3               	movlw	195
   799     05D0  00F4               	movwf	??_init+1
   800     05D1  30CD               	movlw	205
   801     05D2  00F3               	movwf	??_init
   802     05D3                     u477:
   803     05D3  0BF3               	decfsz	??_init,f
   804     05D4  2DD3               	goto	u477
   805     05D5  0BF4               	decfsz	??_init+1,f
   806     05D6  2DD3               	goto	u477
   807     05D7                     l906:
   808     05D7  3001               	movlw	1
   809     05D8  120A  118A  2526  120A  118A  	fcall	_Lcd_Command
   810     05DD                     l908:
   811     05DD  30C3               	movlw	195
   812     05DE  00F4               	movwf	??_init+1
   813     05DF  30CD               	movlw	205
   814     05E0  00F3               	movwf	??_init
   815     05E1                     u487:
   816     05E1  0BF3               	decfsz	??_init,f
   817     05E2  2DE1               	goto	u487
   818     05E3  0BF4               	decfsz	??_init+1,f
   819     05E4  2DE1               	goto	u487
   820     05E5                     l84:
   821     05E5  0008               	return
   822     05E6                     __end_of_init:
   823                           
   824                           	psect	text2
   825     0526                     __ptext2:	
   826 ;; *************** function _Lcd_Command *****************
   827 ;; Defined at:
   828 ;;		line 125 in file "6T_ADC.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  i               1    wreg     unsigned char 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  i               1    2[COMMON] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0, btemp+1
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         1       0       0       0       0
   844 ;;      Temps:          2       0       0       0       0
   845 ;;      Totals:         3       0       0       0       0
   846 ;;Total ram usage:        3 bytes
   847 ;; Hardware stack levels used: 1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;;		_init
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856     0526                     _Lcd_Command:	
   857                           ;psect for function _Lcd_Command
   858                           
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+btemp+1]
   862                           ;Lcd_Command@i stored from wreg
   863     0526  00F2               	movwf	Lcd_Command@i
   864     0527                     l818:
   865     0527  30F7               	movlw	247
   866     0528  00FF               	movwf	btemp+1
   867     0529  087F               	movf	btemp+1,w
   868     052A  1283               	bcf	3,5	;RP0=0, select bank0
   869     052B  1303               	bcf	3,6	;RP1=0, select bank0
   870     052C  0587               	andwf	7,f	;volatile
   871     052D                     l820:
   872     052D  0872               	movf	Lcd_Command@i,w
   873     052E  0088               	movwf	8	;volatile
   874     052F                     l822:
   875     052F  1407               	bsf	7,0	;volatile
   876     0530                     l824:
   877     0530  30FE               	movlw	254
   878     0531  00FF               	movwf	btemp+1
   879     0532  087F               	movf	btemp+1,w
   880     0533  0587               	andwf	7,f	;volatile
   881     0534  30C3               	movlw	195
   882     0535  00F1               	movwf	??_Lcd_Command+1
   883     0536  30CD               	movlw	205
   884     0537  00F0               	movwf	??_Lcd_Command
   885     0538                     u497:
   886     0538  0BF0               	decfsz	??_Lcd_Command,f
   887     0539  2D38               	goto	u497
   888     053A  0BF1               	decfsz	??_Lcd_Command+1,f
   889     053B  2D38               	goto	u497
   890     053C                     l87:
   891     053C  0008               	return
   892     053D                     __end_of_Lcd_Command:
   893                           
   894                           	psect	text3
   895     053D                     __ptext3:	
   896 ;; *************** function ___lmul *****************
   897 ;; Defined at:
   898 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  multiplier      4    0[COMMON] unsigned long 
   901 ;;  multiplicand    4    4[COMMON] unsigned long 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  product         4    9[COMMON] unsigned long 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  4    0[COMMON] unsigned long 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         8       0       0       0       0
   914 ;;      Locals:         4       0       0       0       0
   915 ;;      Temps:          1       0       0       0       0
   916 ;;      Totals:        13       0       0       0       0
   917 ;;Total ram usage:       13 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926     053D                     ___lmul:	
   927                           ;psect for function ___lmul
   928                           
   929     053D                     l940:	
   930                           ;incstack = 0
   931                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   932                           
   933     053D  3000               	movlw	0
   934     053E  00FC               	movwf	___lmul@product+3
   935     053F  3000               	movlw	0
   936     0540  00FB               	movwf	___lmul@product+2
   937     0541  3000               	movlw	0
   938     0542  00FA               	movwf	___lmul@product+1
   939     0543  3000               	movlw	0
   940     0544  00F9               	movwf	___lmul@product
   941     0545                     l942:
   942     0545  1C70               	btfss	___lmul@multiplier,0
   943     0546  2D48               	goto	u351
   944     0547  2D49               	goto	u350
   945     0548                     u351:
   946     0548  2D60               	goto	l946
   947     0549                     u350:
   948     0549                     l944:
   949     0549  0874               	movf	___lmul@multiplicand,w
   950     054A  07F9               	addwf	___lmul@product,f
   951     054B  0875               	movf	___lmul@multiplicand+1,w
   952     054C  1103               	clrz
   953     054D  1803               	skipnc
   954     054E  3E01               	addlw	1
   955     054F  1903               	skipnz
   956     0550  2D52               	goto	u361
   957     0551  07FA               	addwf	___lmul@product+1,f
   958     0552                     u361:
   959     0552  0876               	movf	___lmul@multiplicand+2,w
   960     0553  1103               	clrz
   961     0554  1803               	skipnc
   962     0555  3E01               	addlw	1
   963     0556  1903               	skipnz
   964     0557  2D59               	goto	u362
   965     0558  07FB               	addwf	___lmul@product+2,f
   966     0559                     u362:
   967     0559  0877               	movf	___lmul@multiplicand+3,w
   968     055A  1103               	clrz
   969     055B  1803               	skipnc
   970     055C  3E01               	addlw	1
   971     055D  1903               	skipnz
   972     055E  2D60               	goto	u363
   973     055F  07FC               	addwf	___lmul@product+3,f
   974     0560                     u363:
   975     0560                     l946:
   976     0560  3001               	movlw	1
   977     0561  00F8               	movwf	??___lmul
   978     0562                     u375:
   979     0562  1003               	clrc
   980     0563  0DF4               	rlf	___lmul@multiplicand,f
   981     0564  0DF5               	rlf	___lmul@multiplicand+1,f
   982     0565  0DF6               	rlf	___lmul@multiplicand+2,f
   983     0566  0DF7               	rlf	___lmul@multiplicand+3,f
   984     0567  0BF8               	decfsz	??___lmul,f
   985     0568  2D62               	goto	u375
   986     0569                     l948:
   987     0569  3001               	movlw	1
   988     056A                     u385:
   989     056A  1003               	clrc
   990     056B  0CF3               	rrf	___lmul@multiplier+3,f
   991     056C  0CF2               	rrf	___lmul@multiplier+2,f
   992     056D  0CF1               	rrf	___lmul@multiplier+1,f
   993     056E  0CF0               	rrf	___lmul@multiplier,f
   994     056F  3EFF               	addlw	-1
   995     0570  1D03               	skipz
   996     0571  2D6A               	goto	u385
   997     0572  0873               	movf	___lmul@multiplier+3,w
   998     0573  0472               	iorwf	___lmul@multiplier+2,w
   999     0574  0471               	iorwf	___lmul@multiplier+1,w
  1000     0575  0470               	iorwf	___lmul@multiplier,w
  1001     0576  1D03               	skipz
  1002     0577  2D79               	goto	u391
  1003     0578  2D7A               	goto	u390
  1004     0579                     u391:
  1005     0579  2D45               	goto	l942
  1006     057A                     u390:
  1007     057A                     l950:
  1008     057A  087C               	movf	___lmul@product+3,w
  1009     057B  00F3               	movwf	?___lmul+3
  1010     057C  087B               	movf	___lmul@product+2,w
  1011     057D  00F2               	movwf	?___lmul+2
  1012     057E  087A               	movf	___lmul@product+1,w
  1013     057F  00F1               	movwf	?___lmul+1
  1014     0580  0879               	movf	___lmul@product,w
  1015     0581  00F0               	movwf	?___lmul
  1016     0582                     l190:
  1017     0582  0008               	return
  1018     0583                     __end_of___lmul:
  1019                           
  1020                           	psect	text4
  1021     064E                     __ptext4:	
  1022 ;; *************** function _Lcd_Output *****************
  1023 ;; Defined at:
  1024 ;;		line 66 in file "6T_ADC.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  i               4   16[BANK0 ] unsigned long 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  j               1   21[BANK0 ] unsigned char 
  1029 ;;  s               1   20[BANK0 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       4       0       0       0
  1040 ;;      Locals:         0       2       0       0       0
  1041 ;;      Temps:          0       0       0       0       0
  1042 ;;      Totals:         0       6       0       0       0
  1043 ;;Total ram usage:        6 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 1
  1046 ;; This function calls:
  1047 ;;		_Lcd_Data
  1048 ;;		___bmul
  1049 ;;		___lldiv
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055     064E                     _Lcd_Output:	
  1056                           ;psect for function _Lcd_Output
  1057                           
  1058     064E                     l910:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _Lcd_Output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1061                           
  1062     064E  3023               	movlw	35
  1063     064F  1283               	bcf	3,5	;RP0=0, select bank0
  1064     0650  1303               	bcf	3,6	;RP1=0, select bank0
  1065     0651  00A0               	movwf	_k
  1066     0652  3023               	movlw	35
  1067     0653  00A1               	movwf	_k+1
  1068     0654  3023               	movlw	35
  1069     0655  00A2               	movwf	_k+2
  1070     0656  3023               	movlw	35
  1071     0657  00A3               	movwf	_k+3
  1072     0658  3023               	movlw	35
  1073     0659  00A4               	movwf	_k+4
  1074     065A                     l912:
  1075     065A  01D2               	clrf	Lcd_Output@j
  1076     065B  0AD2               	incf	Lcd_Output@j,f
  1077     065C  0850               	movf	Lcd_Output@i+3,w
  1078     065D  00A8               	movwf	_m+3
  1079     065E  084F               	movf	Lcd_Output@i+2,w
  1080     065F  00A7               	movwf	_m+2
  1081     0660  084E               	movf	Lcd_Output@i+1,w
  1082     0661  00A6               	movwf	_m+1
  1083     0662  084D               	movf	Lcd_Output@i,w
  1084     0663  00A5               	movwf	_m
  1085     0664  0828               	movf	_m+3,w
  1086     0665  0427               	iorwf	_m+2,w
  1087     0666  0426               	iorwf	_m+1,w
  1088     0667  0425               	iorwf	_m,w
  1089     0668  1D03               	skipz
  1090     0669  2E6B               	goto	u311
  1091     066A  2E6C               	goto	u310
  1092     066B                     u311:
  1093     066B  2EBF               	goto	l924
  1094     066C                     u310:
  1095     066C                     l914:
  1096     066C  3030               	movlw	48
  1097     066D  120A  118A  24E7  120A  118A  	fcall	_Lcd_Data
  1098     0672  2EBF               	goto	l924
  1099     0673                     l916:
  1100     0673  30F6               	movlw	246
  1101     0674  00CA               	movwf	___bmul@multiplicand
  1102     0675  0828               	movf	_m+3,w
  1103     0676  00C4               	movwf	___lldiv@dividend+3
  1104     0677  0827               	movf	_m+2,w
  1105     0678  00C3               	movwf	___lldiv@dividend+2
  1106     0679  0826               	movf	_m+1,w
  1107     067A  00C2               	movwf	___lldiv@dividend+1
  1108     067B  0825               	movf	_m,w
  1109     067C  00C1               	movwf	___lldiv@dividend
  1110     067D  3000               	movlw	0
  1111     067E  00C0               	movwf	___lldiv@divisor+3
  1112     067F  3000               	movlw	0
  1113     0680  00BF               	movwf	___lldiv@divisor+2
  1114     0681  3000               	movlw	0
  1115     0682  00BE               	movwf	___lldiv@divisor+1
  1116     0683  300A               	movlw	10
  1117     0684  00BD               	movwf	___lldiv@divisor
  1118     0685  120A  118A  25E6  120A  118A  	fcall	___lldiv
  1119     068A  1283               	bcf	3,5	;RP0=0, select bank0
  1120     068B  1303               	bcf	3,6	;RP1=0, select bank0
  1121     068C  083D               	movf	?___lldiv,w
  1122     068D  120A  118A  250F  120A  118A  	fcall	___bmul
  1123     0692  1283               	bcf	3,5	;RP0=0, select bank0
  1124     0693  1303               	bcf	3,6	;RP1=0, select bank0
  1125     0694  0725               	addwf	_m,w
  1126     0695  00D1               	movwf	Lcd_Output@s
  1127     0696                     l918:
  1128     0696  0852               	movf	Lcd_Output@j,w
  1129     0697  3E20               	addlw	(low (_k| 0))& (0+255)
  1130     0698  0084               	movwf	4
  1131     0699  0851               	movf	Lcd_Output@s,w
  1132     069A  1383               	bcf	3,7	;select IRP bank0
  1133     069B  0080               	movwf	0
  1134     069C                     l920:
  1135     069C  3001               	movlw	1
  1136     069D  00FF               	movwf	btemp+1
  1137     069E  087F               	movf	btemp+1,w
  1138     069F  07D2               	addwf	Lcd_Output@j,f
  1139     06A0                     l922:
  1140     06A0  3000               	movlw	0
  1141     06A1  00C0               	movwf	___lldiv@divisor+3
  1142     06A2  3000               	movlw	0
  1143     06A3  00BF               	movwf	___lldiv@divisor+2
  1144     06A4  3000               	movlw	0
  1145     06A5  00BE               	movwf	___lldiv@divisor+1
  1146     06A6  300A               	movlw	10
  1147     06A7  00BD               	movwf	___lldiv@divisor
  1148     06A8  0828               	movf	_m+3,w
  1149     06A9  00C4               	movwf	___lldiv@dividend+3
  1150     06AA  0827               	movf	_m+2,w
  1151     06AB  00C3               	movwf	___lldiv@dividend+2
  1152     06AC  0826               	movf	_m+1,w
  1153     06AD  00C2               	movwf	___lldiv@dividend+1
  1154     06AE  0825               	movf	_m,w
  1155     06AF  00C1               	movwf	___lldiv@dividend
  1156     06B0  120A  118A  25E6  120A  118A  	fcall	___lldiv
  1157     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1158     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1159     06B7  0840               	movf	?___lldiv+3,w
  1160     06B8  00A8               	movwf	_m+3
  1161     06B9  083F               	movf	?___lldiv+2,w
  1162     06BA  00A7               	movwf	_m+2
  1163     06BB  083E               	movf	?___lldiv+1,w
  1164     06BC  00A6               	movwf	_m+1
  1165     06BD  083D               	movf	?___lldiv,w
  1166     06BE  00A5               	movwf	_m
  1167     06BF                     l924:
  1168     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1169     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1170     06C1  0828               	movf	_m+3,w
  1171     06C2  0427               	iorwf	_m+2,w
  1172     06C3  0426               	iorwf	_m+1,w
  1173     06C4  0425               	iorwf	_m,w
  1174     06C5  1D03               	skipz
  1175     06C6  2EC8               	goto	u321
  1176     06C7  2EC9               	goto	u320
  1177     06C8                     u321:
  1178     06C8  2E73               	goto	l916
  1179     06C9                     u320:
  1180     06C9                     l75:
  1181     06C9  01D2               	clrf	Lcd_Output@j
  1182     06CA  0AD2               	incf	Lcd_Output@j,f
  1183     06CB  2EF4               	goto	l938
  1184     06CC                     l926:
  1185     06CC  0852               	movf	Lcd_Output@j,w
  1186     06CD  3E20               	addlw	(low (_k| 0))& (0+255)
  1187     06CE  0084               	movwf	4
  1188     06CF  3023               	movlw	35
  1189     06D0  1383               	bcf	3,7	;select IRP bank0
  1190     06D1  0600               	xorwf	0,w
  1191     06D2  1D03               	btfss	3,2
  1192     06D3  2ED5               	goto	u331
  1193     06D4  2ED6               	goto	u330
  1194     06D5                     u331:
  1195     06D5  2EE3               	goto	l932
  1196     06D6                     u330:
  1197     06D6                     l928:
  1198     06D6  3020               	movlw	32
  1199     06D7  120A  118A  24E7  120A  118A  	fcall	_Lcd_Data
  1200     06DC                     l930:
  1201     06DC  3001               	movlw	1
  1202     06DD  00FF               	movwf	btemp+1
  1203     06DE  087F               	movf	btemp+1,w
  1204     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1205     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1206     06E1  07D2               	addwf	Lcd_Output@j,f
  1207     06E2  2EF4               	goto	l938
  1208     06E3                     l932:
  1209     06E3  0852               	movf	Lcd_Output@j,w
  1210     06E4  3E20               	addlw	(low (_k| 0))& (0+255)
  1211     06E5  0084               	movwf	4
  1212     06E6  0800               	movf	0,w
  1213     06E7  3E30               	addlw	48
  1214     06E8  00B3               	movwf	_n
  1215     06E9  3000               	movlw	0
  1216     06EA  1803               	skipnc
  1217     06EB  3001               	movlw	1
  1218     06EC  00B4               	movwf	_n+1
  1219     06ED                     l934:
  1220     06ED  0833               	movf	_n,w
  1221     06EE  120A  118A  24E7  120A  118A  	fcall	_Lcd_Data
  1222     06F3  2EDC               	goto	l930
  1223     06F4                     l938:
  1224     06F4  3005               	movlw	5
  1225     06F5  0252               	subwf	Lcd_Output@j,w
  1226     06F6  1C03               	skipc
  1227     06F7  2EF9               	goto	u341
  1228     06F8  2EFA               	goto	u340
  1229     06F9                     u341:
  1230     06F9  2ECC               	goto	l926
  1231     06FA                     u340:
  1232     06FA                     l81:
  1233     06FA  0008               	return
  1234     06FB                     __end_of_Lcd_Output:
  1235                           
  1236                           	psect	text5
  1237     05E6                     __ptext5:	
  1238 ;; *************** function ___lldiv *****************
  1239 ;; Defined at:
  1240 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  divisor         4    0[BANK0 ] unsigned long 
  1243 ;;  dividend        4    4[BANK0 ] unsigned long 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  quotient        4    8[BANK0 ] unsigned long 
  1246 ;;  counter         1   12[BANK0 ] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  4    0[BANK0 ] unsigned long 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, btemp+1
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       8       0       0       0
  1257 ;;      Locals:         0       5       0       0       0
  1258 ;;      Temps:          1       0       0       0       0
  1259 ;;      Totals:         1      13       0       0       0
  1260 ;;Total ram usage:       14 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;;		_Lcd_Output
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270     05E6                     ___lldiv:	
  1271                           ;psect for function ___lldiv
  1272                           
  1273     05E6                     l852:	
  1274                           ;incstack = 0
  1275                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1276                           
  1277     05E6  3000               	movlw	0
  1278     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1279     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1280     05E9  00C8               	movwf	___lldiv@quotient+3
  1281     05EA  3000               	movlw	0
  1282     05EB  00C7               	movwf	___lldiv@quotient+2
  1283     05EC  3000               	movlw	0
  1284     05ED  00C6               	movwf	___lldiv@quotient+1
  1285     05EE  3000               	movlw	0
  1286     05EF  00C5               	movwf	___lldiv@quotient
  1287     05F0  0840               	movf	___lldiv@divisor+3,w
  1288     05F1  043F               	iorwf	___lldiv@divisor+2,w
  1289     05F2  043E               	iorwf	___lldiv@divisor+1,w
  1290     05F3  043D               	iorwf	___lldiv@divisor,w
  1291     05F4  1903               	skipnz
  1292     05F5  2DF7               	goto	u241
  1293     05F6  2DF8               	goto	u240
  1294     05F7                     u241:
  1295     05F7  2E45               	goto	l874
  1296     05F8                     u240:
  1297     05F8                     l854:
  1298     05F8  01C9               	clrf	___lldiv@counter
  1299     05F9  0AC9               	incf	___lldiv@counter,f
  1300     05FA  2E08               	goto	l860
  1301     05FB                     l856:
  1302     05FB  3001               	movlw	1
  1303     05FC  00FD               	movwf	??___lldiv
  1304     05FD                     u255:
  1305     05FD  1003               	clrc
  1306     05FE  0DBD               	rlf	___lldiv@divisor,f
  1307     05FF  0DBE               	rlf	___lldiv@divisor+1,f
  1308     0600  0DBF               	rlf	___lldiv@divisor+2,f
  1309     0601  0DC0               	rlf	___lldiv@divisor+3,f
  1310     0602  0BFD               	decfsz	??___lldiv,f
  1311     0603  2DFD               	goto	u255
  1312     0604                     l858:
  1313     0604  3001               	movlw	1
  1314     0605  00FF               	movwf	btemp+1
  1315     0606  087F               	movf	btemp+1,w
  1316     0607  07C9               	addwf	___lldiv@counter,f
  1317     0608                     l860:
  1318     0608  1FC0               	btfss	___lldiv@divisor+3,7
  1319     0609  2E0B               	goto	u261
  1320     060A  2E0C               	goto	u260
  1321     060B                     u261:
  1322     060B  2DFB               	goto	l856
  1323     060C                     u260:
  1324     060C                     l862:
  1325     060C  3001               	movlw	1
  1326     060D  00FD               	movwf	??___lldiv
  1327     060E                     u275:
  1328     060E  1003               	clrc
  1329     060F  0DC5               	rlf	___lldiv@quotient,f
  1330     0610  0DC6               	rlf	___lldiv@quotient+1,f
  1331     0611  0DC7               	rlf	___lldiv@quotient+2,f
  1332     0612  0DC8               	rlf	___lldiv@quotient+3,f
  1333     0613  0BFD               	decfsz	??___lldiv,f
  1334     0614  2E0E               	goto	u275
  1335     0615                     l864:
  1336     0615  0840               	movf	___lldiv@divisor+3,w
  1337     0616  0244               	subwf	___lldiv@dividend+3,w
  1338     0617  1D03               	skipz
  1339     0618  2E23               	goto	u285
  1340     0619  083F               	movf	___lldiv@divisor+2,w
  1341     061A  0243               	subwf	___lldiv@dividend+2,w
  1342     061B  1D03               	skipz
  1343     061C  2E23               	goto	u285
  1344     061D  083E               	movf	___lldiv@divisor+1,w
  1345     061E  0242               	subwf	___lldiv@dividend+1,w
  1346     061F  1D03               	skipz
  1347     0620  2E23               	goto	u285
  1348     0621  083D               	movf	___lldiv@divisor,w
  1349     0622  0241               	subwf	___lldiv@dividend,w
  1350     0623                     u285:
  1351     0623  1C03               	skipc
  1352     0624  2E26               	goto	u281
  1353     0625  2E27               	goto	u280
  1354     0626                     u281:
  1355     0626  2E36               	goto	l870
  1356     0627                     u280:
  1357     0627                     l866:
  1358     0627  083D               	movf	___lldiv@divisor,w
  1359     0628  02C1               	subwf	___lldiv@dividend,f
  1360     0629  083E               	movf	___lldiv@divisor+1,w
  1361     062A  1C03               	skipc
  1362     062B  0F3E               	incfsz	___lldiv@divisor+1,w
  1363     062C  02C2               	subwf	___lldiv@dividend+1,f
  1364     062D  083F               	movf	___lldiv@divisor+2,w
  1365     062E  1C03               	skipc
  1366     062F  0F3F               	incfsz	___lldiv@divisor+2,w
  1367     0630  02C3               	subwf	___lldiv@dividend+2,f
  1368     0631  0840               	movf	___lldiv@divisor+3,w
  1369     0632  1C03               	skipc
  1370     0633  0F40               	incfsz	___lldiv@divisor+3,w
  1371     0634  02C4               	subwf	___lldiv@dividend+3,f
  1372     0635                     l868:
  1373     0635  1445               	bsf	___lldiv@quotient,0
  1374     0636                     l870:
  1375     0636  3001               	movlw	1
  1376     0637                     u295:
  1377     0637  1003               	clrc
  1378     0638  0CC0               	rrf	___lldiv@divisor+3,f
  1379     0639  0CBF               	rrf	___lldiv@divisor+2,f
  1380     063A  0CBE               	rrf	___lldiv@divisor+1,f
  1381     063B  0CBD               	rrf	___lldiv@divisor,f
  1382     063C  3EFF               	addlw	-1
  1383     063D  1D03               	skipz
  1384     063E  2E37               	goto	u295
  1385     063F                     l872:
  1386     063F  3001               	movlw	1
  1387     0640  02C9               	subwf	___lldiv@counter,f
  1388     0641  1D03               	btfss	3,2
  1389     0642  2E44               	goto	u301
  1390     0643  2E45               	goto	u300
  1391     0644                     u301:
  1392     0644  2E0C               	goto	l862
  1393     0645                     u300:
  1394     0645                     l874:
  1395     0645  0848               	movf	___lldiv@quotient+3,w
  1396     0646  00C0               	movwf	?___lldiv+3
  1397     0647  0847               	movf	___lldiv@quotient+2,w
  1398     0648  00BF               	movwf	?___lldiv+2
  1399     0649  0846               	movf	___lldiv@quotient+1,w
  1400     064A  00BE               	movwf	?___lldiv+1
  1401     064B  0845               	movf	___lldiv@quotient,w
  1402     064C  00BD               	movwf	?___lldiv
  1403     064D                     l212:
  1404     064D  0008               	return
  1405     064E                     __end_of___lldiv:
  1406                           
  1407                           	psect	text6
  1408     050F                     __ptext6:	
  1409 ;; *************** function ___bmul *****************
  1410 ;; Defined at:
  1411 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  multiplier      1    wreg     unsigned char 
  1414 ;;  multiplicand    1   13[BANK0 ] unsigned char 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  multiplier      1   15[BANK0 ] unsigned char 
  1417 ;;  product         1   14[BANK0 ] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      unsigned char 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, btemp+1
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       1       0       0       0
  1428 ;;      Locals:         0       2       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       3       0       0       0
  1431 ;;Total ram usage:        3 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_Lcd_Output
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440     050F                     ___bmul:	
  1441                           ;psect for function ___bmul
  1442                           
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1446                           ;___bmul@multiplier stored from wreg
  1447     050F  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0510  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0511  00CC               	movwf	___bmul@multiplier
  1450     0512                     l836:
  1451     0512  01CB               	clrf	___bmul@product
  1452     0513                     l838:
  1453     0513  1C4C               	btfss	___bmul@multiplier,0
  1454     0514  2D16               	goto	u221
  1455     0515  2D17               	goto	u220
  1456     0516                     u221:
  1457     0516  2D1B               	goto	l842
  1458     0517                     u220:
  1459     0517                     l840:
  1460     0517  084A               	movf	___bmul@multiplicand,w
  1461     0518  00FF               	movwf	btemp+1
  1462     0519  087F               	movf	btemp+1,w
  1463     051A  07CB               	addwf	___bmul@product,f
  1464     051B                     l842:
  1465     051B  1003               	clrc
  1466     051C  0DCA               	rlf	___bmul@multiplicand,f
  1467     051D                     l844:
  1468     051D  1003               	clrc
  1469     051E  0CCC               	rrf	___bmul@multiplier,f
  1470     051F                     l846:
  1471     051F  084C               	movf	___bmul@multiplier,w
  1472     0520  1D03               	btfss	3,2
  1473     0521  2D23               	goto	u231
  1474     0522  2D24               	goto	u230
  1475     0523                     u231:
  1476     0523  2D13               	goto	l838
  1477     0524                     u230:
  1478     0524                     l848:
  1479     0524  084B               	movf	___bmul@product,w
  1480     0525                     l202:
  1481     0525  0008               	return
  1482     0526                     __end_of___bmul:
  1483                           
  1484                           	psect	text7
  1485     04E7                     __ptext7:	
  1486 ;; *************** function _Lcd_Data *****************
  1487 ;; Defined at:
  1488 ;;		line 132 in file "6T_ADC.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  i               1    wreg     unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  i               1    2[COMMON] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, btemp+1
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0
  1504 ;;      Temps:          2       0       0       0       0
  1505 ;;      Totals:         3       0       0       0       0
  1506 ;;Total ram usage:        3 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;;		_Lcd_Output
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516     04E7                     _Lcd_Data:	
  1517                           ;psect for function _Lcd_Data
  1518                           
  1519                           
  1520                           ;incstack = 0
  1521                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
  1522                           ;Lcd_Data@i stored from wreg
  1523     04E7  00F2               	movwf	Lcd_Data@i
  1524     04E8                     l826:
  1525     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1526     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1527     04EA  1587               	bsf	7,3	;volatile
  1528     04EB                     l828:
  1529     04EB  0872               	movf	Lcd_Data@i,w
  1530     04EC  0088               	movwf	8	;volatile
  1531     04ED                     l830:
  1532     04ED  1407               	bsf	7,0	;volatile
  1533     04EE                     l832:
  1534     04EE  30FE               	movlw	254
  1535     04EF  00FF               	movwf	btemp+1
  1536     04F0  087F               	movf	btemp+1,w
  1537     04F1  0587               	andwf	7,f	;volatile
  1538     04F2                     l834:
  1539     04F2  30C3               	movlw	195
  1540     04F3  00F1               	movwf	??_Lcd_Data+1
  1541     04F4  30CD               	movlw	205
  1542     04F5  00F0               	movwf	??_Lcd_Data
  1543     04F6                     u507:
  1544     04F6  0BF0               	decfsz	??_Lcd_Data,f
  1545     04F7  2CF6               	goto	u507
  1546     04F8  0BF1               	decfsz	??_Lcd_Data+1,f
  1547     04F9  2CF6               	goto	u507
  1548     04FA                     l90:
  1549     04FA  0008               	return
  1550     04FB                     __end_of_Lcd_Data:
  1551     007E                     btemp	set	126	;btemp
  1552     007E                     wtemp0	set	126
  1553                           
  1554                           	psect	config
  1555                           
  1556                           ;Config register CONFIG @ 0x2007
  1557                           ;	Oscillator Selection bits
  1558                           ;	FOSC = EXTRC, RC oscillator
  1559                           ;	Watchdog Timer Enable bit
  1560                           ;	WDTE = OFF, WDT disabled
  1561                           ;	Power-up Timer Enable bit
  1562                           ;	PWRTE = OFF, PWRT disabled
  1563                           ;	Brown-out Reset Enable bit
  1564                           ;	BOREN = OFF, BOR disabled
  1565                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1566                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1567                           ;	Data EEPROM Memory Code Protection bit
  1568                           ;	CPD = OFF, Data EEPROM code protection off
  1569                           ;	Flash Program Memory Write Enable bits
  1570                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1571                           ;	In-Circuit Debugger Mode bit
  1572                           ;	DEBUG = 0x1, unprogrammed default
  1573                           ;	Flash Program Memory Code Protection bit
  1574                           ;	CP = OFF, Code protection off
  1575     2007                     	org	8199
  1576     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _init->_Lcd_Command
    _Lcd_Output->___lldiv
    ___lldiv->___lmul
    ___bmul->___lldiv

Critical Paths under _main in BANK0

    _main->_Lcd_Output
    _Lcd_Output->___bmul
    ___bmul->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2026
                                             22 BANK0      2     2      0
                        _Lcd_Command
                           _Lcd_Data
                         _Lcd_Output
                            ___lldiv
                             ___lmul
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Output                                           6     2      4    1098
                                             16 BANK0      6     2      4
                           _Lcd_Data
                             ___bmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     618
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                             13 BANK0      3     2      1
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Command
   _Lcd_Data
   _Lcd_Output
     _Lcd_Data
     ___bmul
       ___lldiv (ARG)
         ___lmul (ARG)
     ___lldiv
   ___lldiv
   ___lmul
   _init
     _Lcd_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      49       5       91.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      57      12        0.0%
ABS                  0      0      57       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 16 19:13:34 2024

                      _J 003B                        _N 003C                        _i 0031  
                      _k 0020                        _m 0025                        _n 0033  
                      pc 0002           ___bmul@product 004B                       l64 0759  
                     l81 06FA                       l90 04FA                       l75 06C9  
                     l84 05E5                       l87 053C                       fsr 0004  
                    l202 0525                      l212 064D                      l190 0582  
                    l820 052D                      l900 05C1                      l830 04ED  
                    l910 064E                      l822 052F                      l902 05C9  
                    l832 04EE                      l840 0517                      l920 069C  
                    l912 065A                      l824 0530                      l904 05CF  
                    l834 04F2                      l826 04E8                      l842 051B  
                    l930 06DC                      l922 06A0                      l914 066C  
                    l818 0527                      l906 05D7                      l828 04EB  
                    l844 051D                      l836 0512                      l860 0608  
                    l852 05E6                      l932 06E3                      l916 0673  
                    l924 06BF                      l940 053D                      l908 05DD  
                    l846 051F                      l838 0513                      l870 0636  
                    l862 060C                      l854 05F8                      l934 06ED  
                    l926 06CC                      l918 0696                      l950 057A  
                    l942 0545                      l848 0524                      l872 063F  
                    l864 0615                      l856 05FB                      l928 06D6  
                    l944 0549                      l880 0587                      l866 0627  
                    l858 0604                      l874 0645                      l938 06F4  
                    l946 0560                      l890 059F                      l882 0589  
                    l970 072B                      l962 070A                      l954 06FB  
                    l868 0635                      l948 0569                      l892 05A5  
                    l884 058D                      l980 0741                      l964 0714  
                    l956 0706                      l894 05AD                      l886 0591  
                    l878 0583                      l990 077C                      l982 074A  
                    l966 071C                      l896 05B3                      l888 0597  
                    l992 07B2                      l984 0756                      l976 072F  
                    l968 0725                      l898 05BB                      l994 07B8  
                    l986 075D                      l978 0739                      l996 07BE  
                    l988 076F                      l998 07CD                      u220 0517  
                    u300 0645                      u221 0516                      u301 0644  
                    u230 0524                      u310 066C                      u231 0523  
                    u311 066B                      u240 05F8                      u320 06C9  
                    u400 0725                      u241 05F7                      u321 06C8  
                    u401 0724                      u330 06D6                      u410 074A  
                    u331 06D5                      u411 0749                      u260 060C  
                    u340 06FA                      u420 075D                      u261 060B  
                    u341 06F9                      u421 075C                      u350 0549  
                    u255 05FD                      u351 0548                      u280 0627  
                    u281 0626                      u361 0552                      u362 0559  
                    u507 04F6                      u275 060E                      u363 0560  
                    u285 0623                      u437 059B                      u390 057A  
                    u295 0637                      u391 0579                      u375 0562  
                    u447 05A9                      u385 056A                      u457 05B7  
                    u467 05C5                      u477 05D3                      u487 05E1  
                    u497 0538                      fsr0 0004                      indf 0000  
    __end_of_Lcd_Command 053D                     l1000 07D3                     _main 06FB  
                   _init 0583                     btemp 007E                     start 0000  
      ___bmul@multiplier 004C               _Lcd_Output 064E                    ?_main 0070  
                  ?_init 0070          __end_of___lldiv 064E                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088      ___lmul@multiplicand 0074                    _hival 0037  
                  _loval 0039                    _value 002D                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Data 04FB  
        __initialization 07E6             __end_of_main 07E6             __end_of_init 05E6  
            _Lcd_Command 0526                   ??_main 0053                   ??_init 0073  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   ___bmul 050F                   ___lmul 053D  
              ??___lldiv 007D              ?_Lcd_Output 004D  __end_of__initialization 07FC  
    ___bmul@multiplicand 004A           __pcstackCOMMON 0070             __pidataBANK0 04FB  
              ?_Lcd_Data 0070               __pbssBANK0 0020               _delaycount 0035  
             __pmaintext 06FB                  ?___bmul 004A                  ?___lmul 0070  
         ___lmul@product 0079               ??_Lcd_Data 0070                  ___lldiv 05E6  
                _cal_val 0055                  _act_val 005F             ?_Lcd_Command 0070  
                __ptext1 0583                  __ptext2 0526                  __ptext3 053D  
                __ptext4 064E                  __ptext5 05E6                  __ptext6 050F  
                __ptext7 04E7                  clrloop0 04CD                  _voltage 0029  
   end_of_initialization 07FC          ___lldiv@divisor 003D                Lcd_Data@i 0072  
        ___lldiv@counter 0049             ??_Lcd_Output 007E       __end_of_Lcd_Output 06FB  
         __end_of___bmul 0526           __end_of___lmul 0583      start_initialization 07E6  
               ??___bmul 007E                 ??___lmul 0078               init_fetch0 04D4  
            __pdataBANK0 0055                ___latbits 0002            __pcstackBANK0 003D  
               ?___lldiv 003D                clear_ram0 04CC             Lcd_Command@i 0072  
               _Lcd_Data 04E7        ___lmul@multiplier 0070                 init_ram0 04D8  
            Lcd_Output@i 004D              Lcd_Output@j 0052              Lcd_Output@s 0051  
       ___lldiv@dividend 0041            ??_Lcd_Command 0070         ___lldiv@quotient 0045  
