

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jan 06 20:35:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Generated 22/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183     0559                     __pidataBANK0:
   184                           
   185                           ;initializer for _array_low
   186     0559  3442               	retlw	66
   187     055A  3441               	retlw	65
   188     055B  3454               	retlw	84
   189     055C  3454               	retlw	84
   190     055D  3420               	retlw	32
   191     055E  344C               	retlw	76
   192     055F  344F               	retlw	79
   193     0560  3457               	retlw	87
   194     0561  3400               	retlw	0
   195     0562  3400               	retlw	0
   196     0563  3400               	retlw	0
   197     0564  3400               	retlw	0
   198     0565  3400               	retlw	0
   199     0566  3400               	retlw	0
   200     0567  3400               	retlw	0
   201     0568  3400               	retlw	0
   202     0569  3400               	retlw	0
   203     056A  3400               	retlw	0
   204     056B  3400               	retlw	0
   205     056C  3400               	retlw	0
   206     056D  3400               	retlw	0
   207     056E  3400               	retlw	0
   208     056F  3400               	retlw	0
   209     0570  3400               	retlw	0
   210     0571  3400               	retlw	0
   211     0572  3400               	retlw	0
   212     0573  3400               	retlw	0
   213     0574  3400               	retlw	0
   214     0575  3400               	retlw	0
   215     0576  3400               	retlw	0
   216                           
   217                           ;initializer for _array
   218     0577  3442               	retlw	66
   219     0578  3441               	retlw	65
   220     0579  3454               	retlw	84
   221     057A  3454               	retlw	84
   222     057B  3420               	retlw	32
   223     057C  3456               	retlw	86
   224     057D  344F               	retlw	79
   225     057E  344C               	retlw	76
   226     057F  343A               	retlw	58
   227     0580  3420               	retlw	32
   228     0581  3420               	retlw	32
   229     0582  3420               	retlw	32
   230     0583  3420               	retlw	32
   231     0584  3456               	retlw	86
   232     0585  3400               	retlw	0
   233     0586  3400               	retlw	0
   234     0587  3400               	retlw	0
   235     0588  3400               	retlw	0
   236     0589  3400               	retlw	0
   237     058A  3400               	retlw	0
   238     058B  3400               	retlw	0
   239     058C  3400               	retlw	0
   240     058D  3400               	retlw	0
   241     058E  3400               	retlw	0
   242     058F  3400               	retlw	0
   243     0590  3400               	retlw	0
   244     0591  3400               	retlw	0
   245     0592  3400               	retlw	0
   246     0593  3400               	retlw	0
   247     0594  3400               	retlw	0
   248                           
   249                           	psect	idataBANK1
   250     051D                     __pidataBANK1:
   251                           
   252                           ;initializer for _array_high
   253     051D  3442               	retlw	66
   254     051E  3441               	retlw	65
   255     051F  3454               	retlw	84
   256     0520  3454               	retlw	84
   257     0521  3420               	retlw	32
   258     0522  3448               	retlw	72
   259     0523  3449               	retlw	73
   260     0524  3447               	retlw	71
   261     0525  3448               	retlw	72
   262     0526  3400               	retlw	0
   263     0527  3400               	retlw	0
   264     0528  3400               	retlw	0
   265     0529  3400               	retlw	0
   266     052A  3400               	retlw	0
   267     052B  3400               	retlw	0
   268     052C  3400               	retlw	0
   269     052D  3400               	retlw	0
   270     052E  3400               	retlw	0
   271     052F  3400               	retlw	0
   272     0530  3400               	retlw	0
   273     0531  3400               	retlw	0
   274     0532  3400               	retlw	0
   275     0533  3400               	retlw	0
   276     0534  3400               	retlw	0
   277     0535  3400               	retlw	0
   278     0536  3400               	retlw	0
   279     0537  3400               	retlw	0
   280     0538  3400               	retlw	0
   281     0539  3400               	retlw	0
   282     053A  3400               	retlw	0
   283                           
   284                           ;initializer for _array_med
   285     053B  3442               	retlw	66
   286     053C  3441               	retlw	65
   287     053D  3454               	retlw	84
   288     053E  3454               	retlw	84
   289     053F  3420               	retlw	32
   290     0540  344D               	retlw	77
   291     0541  3465               	retlw	101
   292     0542  3464               	retlw	100
   293     0543  3400               	retlw	0
   294     0544  3400               	retlw	0
   295     0545  3400               	retlw	0
   296     0546  3400               	retlw	0
   297     0547  3400               	retlw	0
   298     0548  3400               	retlw	0
   299     0549  3400               	retlw	0
   300     054A  3400               	retlw	0
   301     054B  3400               	retlw	0
   302     054C  3400               	retlw	0
   303     054D  3400               	retlw	0
   304     054E  3400               	retlw	0
   305     054F  3400               	retlw	0
   306     0550  3400               	retlw	0
   307     0551  3400               	retlw	0
   308     0552  3400               	retlw	0
   309     0553  3400               	retlw	0
   310     0554  3400               	retlw	0
   311     0555  3400               	retlw	0
   312     0556  3400               	retlw	0
   313     0557  3400               	retlw	0
   314     0558  3400               	retlw	0
   315     0006                     _PORTB	set	6
   316     0008                     _PORTD	set	8
   317     0007                     _PORTC	set	7
   318     0081                     _OPTION_REG	set	129
   319     0086                     _TRISB	set	134
   320     0088                     _TRISD	set	136
   321     0087                     _TRISC	set	135
   322                           
   323                           	psect	cinit
   324     07D4                     start_initialization:	
   325                           ; #config settings
   326                           
   327     07D4                     __initialization:
   328                           
   329                           ; Initialize objects allocated to BANK1
   330     07D4  1383               	bcf	3,7	;select IRP bank0
   331     07D5  30DC               	movlw	low (__pdataBANK1+60)
   332     07D6  00FD               	movwf	btemp+-1
   333     07D7  3005               	movlw	high __pidataBANK1
   334     07D8  00FE               	movwf	btemp
   335     07D9  301D               	movlw	low __pidataBANK1
   336     07DA  00FF               	movwf	btemp+1
   337     07DB  30A0               	movlw	low __pdataBANK1
   338     07DC  0084               	movwf	4
   339     07DD  120A  118A  24A9  120A  118A  	fcall	init_ram0
   340                           
   341                           ; Initialize objects allocated to BANK0
   342     07E2  305C               	movlw	low (__pdataBANK0+60)
   343     07E3  00FD               	movwf	btemp+-1
   344     07E4  3005               	movlw	high __pidataBANK0
   345     07E5  00FE               	movwf	btemp
   346     07E6  3059               	movlw	low __pidataBANK0
   347     07E7  00FF               	movwf	btemp+1
   348     07E8  3020               	movlw	low __pdataBANK0
   349     07E9  0084               	movwf	4
   350     07EA  120A  118A  24A9  120A  118A  	fcall	init_ram0
   351                           
   352                           ; Clear objects allocated to BANK0
   353     07EF  01DC               	clrf	__pbssBANK0& (0+127)
   354     07F0  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   355     07F1  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   356     07F2  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   357     07F3  01E0               	clrf	(__pbssBANK0+4)& (0+127)
   358     07F4  01E1               	clrf	(__pbssBANK0+5)& (0+127)
   359     07F5  01E2               	clrf	(__pbssBANK0+6)& (0+127)
   360     07F6  01E3               	clrf	(__pbssBANK0+7)& (0+127)
   361     07F7  01E4               	clrf	(__pbssBANK0+8)& (0+127)
   362     07F8  01E5               	clrf	(__pbssBANK0+9)& (0+127)
   363     07F9  01E6               	clrf	(__pbssBANK0+10)& (0+127)
   364     07FA  01E7               	clrf	(__pbssBANK0+11)& (0+127)
   365                           
   366                           ; Clear objects allocated to COMMON
   367     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   368     07FC                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371     07FC                     __end_of__initialization:
   372     07FC  0183               	clrf	3
   373     07FD  120A  118A  2C97   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376     007D                     __pbssCOMMON:
   377     007D                     _m:
   378     007D                     	ds	1
   379                           
   380                           	psect	bssBANK0
   381     005C                     __pbssBANK0:
   382     005C                     _j:
   383     005C                     	ds	2
   384     005E                     _i:
   385     005E                     	ds	2
   386     0060                     _d4:
   387     0060                     	ds	2
   388     0062                     _d3:
   389     0062                     	ds	2
   390     0064                     _d2:
   391     0064                     	ds	2
   392     0066                     _value:
   393     0066                     	ds	1
   394     0067                     _x:
   395     0067                     	ds	1
   396                           
   397                           	psect	dataBANK0
   398     0020                     __pdataBANK0:
   399     0020                     _array_low:
   400     0020                     	ds	30
   401     003E                     _array:
   402     003E                     	ds	30
   403                           
   404                           	psect	dataBANK1
   405     00A0                     __pdataBANK1:
   406     00A0                     _array_high:
   407     00A0                     	ds	30
   408     00BE                     _array_med:
   409     00BE                     	ds	30
   410                           
   411                           	psect	inittext
   412     04A5                     init_fetch0:	
   413                           ;	Called with low address in FSR and high address in W
   414                           
   415     04A5  087E               	movf	btemp,w
   416     04A6  008A               	movwf	10
   417     04A7  087F               	movf	btemp+1,w
   418     04A8  0082               	movwf	2
   419     04A9                     init_ram0:	
   420                           ;Called with:
   421                           ;	high address of idata address in btemp 
   422                           ;	low address of idata address in btemp+1 
   423                           ;	low address of data in FSR
   424                           ;	high address + 1 of data in btemp-1
   425                           
   426     04A9  120A  118A  24A5  120A  118A  	fcall	init_fetch0
   427     04AE  0080               	movwf	0
   428     04AF  0A84               	incf	4,f
   429     04B0  0804               	movf	4,w
   430     04B1  067D               	xorwf	btemp+-1,w
   431     04B2  1903               	btfsc	3,2
   432     04B3  3400               	retlw	0
   433     04B4  0AFF               	incf	btemp+1,f
   434     04B5  1903               	btfsc	3,2
   435     04B6  0AFE               	incf	btemp,f
   436     04B7  2CA9               	goto	init_ram0
   437                           
   438                           	psect	cstackCOMMON
   439     0070                     __pcstackCOMMON:
   440     0070                     ?_init:
   441     0070                     ?_keyscan:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_Lcd_Command:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_Lcd_Command:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_val_check:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_Lcd_Data:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ??_Lcd_Data:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?___bmul:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?___wmul:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ___bmul@multiplicand:	
   469                           ; 2 bytes @ 0x0
   470                           
   471     0070                     ___wmul@multiplier:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 2 bytes @ 0x0
   476     0070                     	ds	1
   477     0071                     ??___bmul:
   478     0071                     ___bmul@product:	
   479                           ; 1 bytes @ 0x1
   480                           
   481                           
   482                           ; 1 bytes @ 0x1
   483     0071                     	ds	1
   484     0072                     Lcd_Command@i:
   485     0072                     Lcd_Data@i:	
   486                           ; 1 bytes @ 0x2
   487                           
   488     0072                     ___bmul@multiplier:	
   489                           ; 1 bytes @ 0x2
   490                           
   491     0072                     ___wmul@multiplicand:	
   492                           ; 1 bytes @ 0x2
   493                           
   494                           
   495                           ; 2 bytes @ 0x2
   496     0072                     	ds	1
   497     0073                     ??_init:
   498     0073                     ??_val_check:	
   499                           ; 1 bytes @ 0x3
   500                           
   501                           
   502                           ; 1 bytes @ 0x3
   503     0073                     	ds	1
   504     0074                     ??___wmul:
   505     0074                     ___wmul@product:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 2 bytes @ 0x4
   510     0074                     	ds	2
   511     0076                     ?___lwdiv:
   512     0076                     ___lwdiv@divisor:	
   513                           ; 2 bytes @ 0x6
   514                           
   515                           
   516                           ; 2 bytes @ 0x6
   517     0076                     	ds	2
   518     0078                     ___lwdiv@dividend:
   519                           
   520                           ; 2 bytes @ 0x8
   521     0078                     	ds	2
   522     007A                     ??___lwdiv:
   523     007A                     ___lwdiv@quotient:	
   524                           ; 1 bytes @ 0xA
   525                           
   526                           
   527                           ; 2 bytes @ 0xA
   528     007A                     	ds	2
   529     007C                     ___lwdiv@counter:
   530                           
   531                           ; 1 bytes @ 0xC
   532     007C                     	ds	1
   533     007D                     ??_main:
   534                           
   535                           	psect	cstackBANK0
   536     0068                     __pcstackBANK0:	
   537                           ; 1 bytes @ 0xD
   538                           
   539     0068                     ?_Lcd_Output:
   540     0068                     Lcd_Output@i:	
   541                           ; 1 bytes @ 0x0
   542                           
   543                           
   544                           ; 2 bytes @ 0x0
   545     0068                     	ds	2
   546     006A                     ??_Lcd_Output:
   547                           
   548                           ; 1 bytes @ 0x2
   549     006A                     	ds	3
   550     006D                     ??_keyscan:
   551                           
   552                           ; 1 bytes @ 0x5
   553     006D                     	ds	2
   554                           
   555                           	psect	maintext
   556     0497                     __pmaintext:	
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 33 in file "newmain.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : B00/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels required when called: 3
   582 ;; This function calls:
   583 ;;		_init
   584 ;;		_keyscan
   585 ;; This function is called by:
   586 ;;		Startup code after reset
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590     0497                     _main:	
   591                           ;psect for function _main
   592                           
   593     0497                     l1083:	
   594                           ;incstack = 0
   595                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   596                           
   597                           
   598                           ;newmain.c: 35:     init();
   599     0497  120A  118A  25D9  120A  118A  	fcall	_init
   600     049C                     l1085:
   601                           
   602                           ;newmain.c: 37:         keyscan();
   603     049C  120A  118A  26B6  120A  118A  	fcall	_keyscan
   604     04A1  2C9C               	goto	l1085
   605     04A2  120A  118A  2800   	ljmp	start
   606     04A5                     __end_of_main:
   607                           
   608                           	psect	text1
   609     06B6                     __ptext1:	
   610 ;; *************** function _keyscan *****************
   611 ;; Defined at:
   612 ;;		line 80 in file "newmain.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       2       0       0       0
   629 ;;      Totals:         0       2       0       0       0
   630 ;;Total ram usage:        2 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; Hardware stack levels required when called: 2
   633 ;; This function calls:
   634 ;;		_Lcd_Command
   635 ;;		_Lcd_Data
   636 ;;		_Lcd_Output
   637 ;;		_val_check
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643     06B6                     _keyscan:	
   644                           ;psect for function _keyscan
   645                           
   646     06B6                     l1035:	
   647                           ;incstack = 0
   648                           ; Regs used in _keyscan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   649                           
   650                           
   651                           ;newmain.c: 82:     value = PORTB &=0xF0;
   652     06B6  30F0               	movlw	240
   653     06B7  00FF               	movwf	btemp+1
   654     06B8  087F               	movf	btemp+1,w
   655     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   656     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   657     06BB  0586               	andwf	6,f	;volatile
   658     06BC  0806               	movf	6,w	;volatile
   659     06BD  00E6               	movwf	_value
   660                           
   661                           ;newmain.c: 83:     switch(value)
   662     06BE  2F25               	goto	l1077
   663     06BF                     l1037:
   664                           
   665                           ;newmain.c: 86:             Lcd_Command(0x80);
   666     06BF  3080               	movlw	128
   667     06C0  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
   668     06C5                     l1039:
   669                           
   670                           ;newmain.c: 87:             for(x=0;x<16;x++){
   671     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   672     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   673     06C7  01E7               	clrf	_x
   674     06C8                     l1041:
   675     06C8  3010               	movlw	16
   676     06C9  0267               	subwf	_x,w
   677     06CA  1C03               	skipc
   678     06CB  2ECD               	goto	u441
   679     06CC  2ECE               	goto	u440
   680     06CD                     u441:
   681     06CD  2ECF               	goto	l1045
   682     06CE                     u440:
   683     06CE  2EE0               	goto	l1051
   684     06CF                     l1045:
   685                           
   686                           ;newmain.c: 88:                 Lcd_Data(array[x]);
   687     06CF  0867               	movf	_x,w
   688     06D0  3E3E               	addlw	(low (_array| 0))& (0+255)
   689     06D1  0084               	movwf	4
   690     06D2  1383               	bcf	3,7	;select IRP bank0
   691     06D3  0800               	movf	0,w
   692     06D4  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
   693     06D9                     l1047:
   694                           
   695                           ;newmain.c: 89:             }
   696     06D9  3001               	movlw	1
   697     06DA  00FF               	movwf	btemp+1
   698     06DB  087F               	movf	btemp+1,w
   699     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   700     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   701     06DE  07E7               	addwf	_x,f
   702     06DF  2EC8               	goto	l1041
   703     06E0                     l1051:
   704                           
   705                           ;newmain.c: 90:             Lcd_Output(j);
   706     06E0  085D               	movf	_j+1,w
   707     06E1  00E9               	movwf	Lcd_Output@i+1
   708     06E2  085C               	movf	_j,w
   709     06E3  00E8               	movwf	Lcd_Output@i
   710     06E4  120A  118A  273C  120A  118A  	fcall	_Lcd_Output
   711     06E9                     l1053:
   712                           
   713                           ;newmain.c: 91:             val_check();
   714     06E9  120A  118A  263E  120A  118A  	fcall	_val_check
   715                           
   716                           ;newmain.c: 92:             break;
   717     06EE  2F3B               	goto	l82
   718     06EF                     l1055:
   719                           
   720                           ;newmain.c: 95:             j++;
   721     06EF  3001               	movlw	1
   722     06F0  07DC               	addwf	_j,f
   723     06F1  1803               	skipnc
   724     06F2  0ADD               	incf	_j+1,f
   725     06F3  3000               	movlw	0
   726     06F4  07DD               	addwf	_j+1,f
   727                           
   728                           ;newmain.c: 97:             if(j>225)
   729     06F5  3000               	movlw	0
   730     06F6  025D               	subwf	_j+1,w
   731     06F7  30E2               	movlw	226
   732     06F8  1903               	skipnz
   733     06F9  025C               	subwf	_j,w
   734     06FA  1C03               	skipc
   735     06FB  2EFD               	goto	u451
   736     06FC  2EFE               	goto	u450
   737     06FD                     u451:
   738     06FD  2EE0               	goto	l1051
   739     06FE                     u450:
   740     06FE                     l1057:
   741                           
   742                           ;newmain.c: 98:             {;newmain.c: 99:                 j=225;
   743     06FE  30E1               	movlw	225
   744     06FF  00DC               	movwf	_j
   745     0700  3000               	movlw	0
   746     0701  00DD               	movwf	_j+1
   747     0702  2EE0               	goto	l1051
   748     0703                     l1063:
   749                           
   750                           ;newmain.c: 105:             j--;
   751     0703  3001               	movlw	1
   752     0704  02DC               	subwf	_j,f
   753     0705  3000               	movlw	0
   754     0706  1C03               	skipc
   755     0707  03DD               	decf	_j+1,f
   756     0708  02DD               	subwf	_j+1,f
   757                           
   758                           ;newmain.c: 106:             if(j<=150)
   759     0709  3000               	movlw	0
   760     070A  025D               	subwf	_j+1,w
   761     070B  3097               	movlw	151
   762     070C  1903               	skipnz
   763     070D  025C               	subwf	_j,w
   764     070E  1803               	skipnc
   765     070F  2F11               	goto	u461
   766     0710  2F12               	goto	u460
   767     0711                     u461:
   768     0711  2EE0               	goto	l1051
   769     0712                     u460:
   770     0712                     l1065:
   771                           
   772                           ;newmain.c: 107:             {;newmain.c: 108:                 j=150;
   773     0712  3096               	movlw	150
   774     0713  00DC               	movwf	_j
   775     0714  3000               	movlw	0
   776     0715  00DD               	movwf	_j+1
   777     0716  2EE0               	goto	l1051
   778     0717                     l1071:
   779                           
   780                           ;newmain.c: 114:             j=150;
   781     0717  3096               	movlw	150
   782     0718  00DC               	movwf	_j
   783     0719  3000               	movlw	0
   784     071A  00DD               	movwf	_j+1
   785     071B                     l1073:
   786                           
   787                           ;newmain.c: 115:             Lcd_Output(j);
   788     071B  085D               	movf	_j+1,w
   789     071C  00E9               	movwf	Lcd_Output@i+1
   790     071D  085C               	movf	_j,w
   791     071E  00E8               	movwf	Lcd_Output@i
   792     071F  120A  118A  273C  120A  118A  	fcall	_Lcd_Output
   793                           
   794                           ;newmain.c: 116:             break;
   795     0724  2F3B               	goto	l82
   796     0725                     l1077:
   797     0725  0866               	movf	_value,w
   798     0726  00ED               	movwf	??_keyscan
   799     0727  01EE               	clrf	??_keyscan+1
   800                           
   801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   802                           ; Switch size 1, requested type "simple"
   803                           ; Number of cases is 1, Range of values is 0 to 0
   804                           ; switch strategies available:
   805                           ; Name         Instructions Cycles
   806                           ; simple_byte            4     3 (average)
   807                           ; direct_byte           11     8 (fixed)
   808                           ; jumptable            260     6 (fixed)
   809                           ;	Chosen strategy is simple_byte
   810     0728  086E               	movf	??_keyscan+1,w
   811     0729  3A00               	xorlw	0	; case 0
   812     072A  1903               	skipnz
   813     072B  2F2D               	goto	l1107
   814     072C  2F3B               	goto	l82
   815     072D                     l1107:
   816                           
   817                           ; Switch size 1, requested type "simple"
   818                           ; Number of cases is 4, Range of values is 112 to 224
   819                           ; switch strategies available:
   820                           ; Name         Instructions Cycles
   821                           ; simple_byte           13     7 (average)
   822                           ; jumptable            263     9 (fixed)
   823                           ;	Chosen strategy is simple_byte
   824     072D  086D               	movf	??_keyscan,w
   825     072E  3A70               	xorlw	112	; case 112
   826     072F  1903               	skipnz
   827     0730  2F17               	goto	l1071
   828     0731  3AC0               	xorlw	192	; case 176
   829     0732  1903               	skipnz
   830     0733  2F03               	goto	l1063
   831     0734  3A60               	xorlw	96	; case 208
   832     0735  1903               	skipnz
   833     0736  2EEF               	goto	l1055
   834     0737  3A30               	xorlw	48	; case 224
   835     0738  1903               	skipnz
   836     0739  2EBF               	goto	l1037
   837     073A  2F3B               	goto	l82
   838     073B                     l82:
   839     073B  0008               	return
   840     073C                     __end_of_keyscan:
   841                           
   842                           	psect	text2
   843     063E                     __ptext2:	
   844 ;; *************** function _val_check *****************
   845 ;; Defined at:
   846 ;;		line 136 in file "newmain.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0
   863 ;;      Totals:         0       0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 1
   867 ;; This function calls:
   868 ;;		_Lcd_Command
   869 ;;		_Lcd_Data
   870 ;; This function is called by:
   871 ;;		_keyscan
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     063E                     _val_check:	
   876                           ;psect for function _val_check
   877                           
   878     063E                     l957:	
   879                           ;incstack = 0
   880                           ; Regs used in _val_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   881                           
   882                           
   883                           ;newmain.c: 137:     Lcd_Command(0xC0);
   884     063E  30C0               	movlw	192
   885     063F  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
   886     0644                     l959:
   887                           
   888                           ;newmain.c: 138:      if (j<=175){
   889     0644  3000               	movlw	0
   890     0645  1283               	bcf	3,5	;RP0=0, select bank0
   891     0646  1303               	bcf	3,6	;RP1=0, select bank0
   892     0647  025D               	subwf	_j+1,w
   893     0648  30B0               	movlw	176
   894     0649  1903               	skipnz
   895     064A  025C               	subwf	_j,w
   896     064B  1803               	skipnc
   897     064C  2E4E               	goto	u371
   898     064D  2E4F               	goto	u370
   899     064E                     u371:
   900     064E  2E68               	goto	l973
   901     064F                     u370:
   902     064F                     l961:
   903                           
   904                           ;newmain.c: 139:                 for(x=0;x<16;x++){
   905     064F  01E7               	clrf	_x
   906     0650                     l963:
   907     0650  3010               	movlw	16
   908     0651  0267               	subwf	_x,w
   909     0652  1C03               	skipc
   910     0653  2E55               	goto	u381
   911     0654  2E56               	goto	u380
   912     0655                     u381:
   913     0655  2E57               	goto	l967
   914     0656                     u380:
   915     0656  2EB5               	goto	l99
   916     0657                     l967:
   917                           
   918                           ;newmain.c: 140:                 Lcd_Data(array_low[x]);
   919     0657  0867               	movf	_x,w
   920     0658  3E20               	addlw	(low (_array_low| 0))& (0+255)
   921     0659  0084               	movwf	4
   922     065A  1383               	bcf	3,7	;select IRP bank0
   923     065B  0800               	movf	0,w
   924     065C  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
   925     0661                     l969:
   926                           
   927                           ;newmain.c: 141:             }
   928     0661  3001               	movlw	1
   929     0662  00FF               	movwf	btemp+1
   930     0663  087F               	movf	btemp+1,w
   931     0664  1283               	bcf	3,5	;RP0=0, select bank0
   932     0665  1303               	bcf	3,6	;RP1=0, select bank0
   933     0666  07E7               	addwf	_x,f
   934     0667  2E50               	goto	l963
   935     0668                     l973:
   936     0668  3000               	movlw	0
   937     0669  025D               	subwf	_j+1,w
   938     066A  30B0               	movlw	176
   939     066B  1903               	skipnz
   940     066C  025C               	subwf	_j,w
   941     066D  1C03               	skipc
   942     066E  2E70               	goto	u391
   943     066F  2E71               	goto	u390
   944     0670                     u391:
   945     0670  2E93               	goto	l989
   946     0671                     u390:
   947     0671                     l975:
   948     0671  3000               	movlw	0
   949     0672  025D               	subwf	_j+1,w
   950     0673  30CE               	movlw	206
   951     0674  1903               	skipnz
   952     0675  025C               	subwf	_j,w
   953     0676  1803               	skipnc
   954     0677  2E79               	goto	u401
   955     0678  2E7A               	goto	u400
   956     0679                     u401:
   957     0679  2E93               	goto	l989
   958     067A                     u400:
   959     067A                     l977:
   960                           
   961                           ;newmain.c: 144:                 for(x=0;x<16;x++){
   962     067A  01E7               	clrf	_x
   963     067B                     l979:
   964     067B  3010               	movlw	16
   965     067C  0267               	subwf	_x,w
   966     067D  1C03               	skipc
   967     067E  2E80               	goto	u411
   968     067F  2E81               	goto	u410
   969     0680                     u411:
   970     0680  2E82               	goto	l983
   971     0681                     u410:
   972     0681  2EB5               	goto	l99
   973     0682                     l983:
   974                           
   975                           ;newmain.c: 145:                 Lcd_Data(array_med[x]);
   976     0682  0867               	movf	_x,w
   977     0683  3EBE               	addlw	(low (_array_med| 0))& (0+255)
   978     0684  0084               	movwf	4
   979     0685  1383               	bcf	3,7	;select IRP bank1
   980     0686  0800               	movf	0,w
   981     0687  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
   982     068C                     l985:
   983                           
   984                           ;newmain.c: 146:             }
   985     068C  3001               	movlw	1
   986     068D  00FF               	movwf	btemp+1
   987     068E  087F               	movf	btemp+1,w
   988     068F  1283               	bcf	3,5	;RP0=0, select bank0
   989     0690  1303               	bcf	3,6	;RP1=0, select bank0
   990     0691  07E7               	addwf	_x,f
   991     0692  2E7B               	goto	l979
   992     0693                     l989:
   993     0693  3000               	movlw	0
   994     0694  025D               	subwf	_j+1,w
   995     0695  30CE               	movlw	206
   996     0696  1903               	skipnz
   997     0697  025C               	subwf	_j,w
   998     0698  1C03               	skipc
   999     0699  2E9B               	goto	u421
  1000     069A  2E9C               	goto	u420
  1001     069B                     u421:
  1002     069B  2EB5               	goto	l99
  1003     069C                     u420:
  1004     069C                     l991:
  1005                           
  1006                           ;newmain.c: 149:                 for(x=0;x<16;x++){
  1007     069C  01E7               	clrf	_x
  1008     069D                     l993:
  1009     069D  3010               	movlw	16
  1010     069E  0267               	subwf	_x,w
  1011     069F  1C03               	skipc
  1012     06A0  2EA2               	goto	u431
  1013     06A1  2EA3               	goto	u430
  1014     06A2                     u431:
  1015     06A2  2EA4               	goto	l997
  1016     06A3                     u430:
  1017     06A3  2EB5               	goto	l99
  1018     06A4                     l997:
  1019                           
  1020                           ;newmain.c: 150:                 Lcd_Data(array_high[x]);
  1021     06A4  0867               	movf	_x,w
  1022     06A5  3EA0               	addlw	(low (_array_high| 0))& (0+255)
  1023     06A6  0084               	movwf	4
  1024     06A7  1383               	bcf	3,7	;select IRP bank1
  1025     06A8  0800               	movf	0,w
  1026     06A9  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
  1027     06AE                     l999:
  1028                           
  1029                           ;newmain.c: 151:             }
  1030     06AE  3001               	movlw	1
  1031     06AF  00FF               	movwf	btemp+1
  1032     06B0  087F               	movf	btemp+1,w
  1033     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1034     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1035     06B3  07E7               	addwf	_x,f
  1036     06B4  2E9D               	goto	l993
  1037     06B5                     l99:
  1038     06B5  0008               	return
  1039     06B6                     __end_of_val_check:
  1040                           
  1041                           	psect	text3
  1042     073C                     __ptext3:	
  1043 ;; *************** function _Lcd_Output *****************
  1044 ;; Defined at:
  1045 ;;		line 121 in file "newmain.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  i               2    0[BANK0 ] unsigned int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       2       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       3       0       0       0
  1062 ;;      Totals:         0       5       0       0       0
  1063 ;;Total ram usage:        5 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 1
  1066 ;; This function calls:
  1067 ;;		_Lcd_Command
  1068 ;;		_Lcd_Data
  1069 ;;		___bmul
  1070 ;;		___lwdiv
  1071 ;;		___wmul
  1072 ;; This function is called by:
  1073 ;;		_keyscan
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     073C                     _Lcd_Output:	
  1078                           ;psect for function _Lcd_Output
  1079                           
  1080     073C                     l955:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _Lcd_Output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1083                           
  1084                           
  1085                           ;newmain.c: 121: void Lcd_Output(unsigned int i);newmain.c: 122: {;newmain.c: 123:     d
      +                          4 = (unsigned char) (i/100);
  1086     073C  3064               	movlw	100
  1087     073D  00F6               	movwf	___lwdiv@divisor
  1088     073E  3000               	movlw	0
  1089     073F  00F7               	movwf	___lwdiv@divisor+1
  1090     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1091     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1092     0742  0869               	movf	Lcd_Output@i+1,w
  1093     0743  00F9               	movwf	___lwdiv@dividend+1
  1094     0744  0868               	movf	Lcd_Output@i,w
  1095     0745  00F8               	movwf	___lwdiv@dividend
  1096     0746  120A  118A  2595  120A  118A  	fcall	___lwdiv
  1097     074B  0876               	movf	?___lwdiv,w
  1098     074C  1283               	bcf	3,5	;RP0=0, select bank0
  1099     074D  1303               	bcf	3,6	;RP1=0, select bank0
  1100     074E  00EA               	movwf	??_Lcd_Output
  1101     074F  01EB               	clrf	??_Lcd_Output+1
  1102     0750  086A               	movf	??_Lcd_Output,w
  1103     0751  00E0               	movwf	_d4
  1104     0752  086B               	movf	??_Lcd_Output+1,w
  1105     0753  00E1               	movwf	_d4+1
  1106                           
  1107                           ;newmain.c: 124:     d3 = (unsigned char) ((i-(d4*100))/10);
  1108     0754  300A               	movlw	10
  1109     0755  00F6               	movwf	___lwdiv@divisor
  1110     0756  3000               	movlw	0
  1111     0757  00F7               	movwf	___lwdiv@divisor+1
  1112     0758  0861               	movf	_d4+1,w
  1113     0759  00F1               	movwf	___wmul@multiplier+1
  1114     075A  0860               	movf	_d4,w
  1115     075B  00F0               	movwf	___wmul@multiplier
  1116     075C  309C               	movlw	156
  1117     075D  00F2               	movwf	___wmul@multiplicand
  1118     075E  30FF               	movlw	255
  1119     075F  00F3               	movwf	___wmul@multiplicand+1
  1120     0760  120A  118A  24F8  120A  118A  	fcall	___wmul
  1121     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1122     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1123     0767  0868               	movf	Lcd_Output@i,w
  1124     0768  0770               	addwf	?___wmul,w
  1125     0769  00F8               	movwf	___lwdiv@dividend
  1126     076A  0869               	movf	Lcd_Output@i+1,w
  1127     076B  1803               	skipnc
  1128     076C  0A69               	incf	Lcd_Output@i+1,w
  1129     076D  0771               	addwf	?___wmul+1,w
  1130     076E  00F9               	movwf	___lwdiv@dividend+1
  1131     076F  120A  118A  2595  120A  118A  	fcall	___lwdiv
  1132     0774  0876               	movf	?___lwdiv,w
  1133     0775  1283               	bcf	3,5	;RP0=0, select bank0
  1134     0776  1303               	bcf	3,6	;RP1=0, select bank0
  1135     0777  00EA               	movwf	??_Lcd_Output
  1136     0778  01EB               	clrf	??_Lcd_Output+1
  1137     0779  086A               	movf	??_Lcd_Output,w
  1138     077A  00E2               	movwf	_d3
  1139     077B  086B               	movf	??_Lcd_Output+1,w
  1140     077C  00E3               	movwf	_d3+1
  1141                           
  1142                           ;newmain.c: 125:     d2 = (unsigned char) ((i-(d4*100)-(d3*10)));
  1143     077D  309C               	movlw	156
  1144     077E  00F0               	movwf	___bmul@multiplicand
  1145     077F  0860               	movf	_d4,w
  1146     0780  120A  118A  24CC  120A  118A  	fcall	___bmul
  1147     0785  1283               	bcf	3,5	;RP0=0, select bank0
  1148     0786  1303               	bcf	3,6	;RP1=0, select bank0
  1149     0787  00EA               	movwf	??_Lcd_Output
  1150     0788  30F6               	movlw	246
  1151     0789  00F0               	movwf	___bmul@multiplicand
  1152     078A  0862               	movf	_d3,w
  1153     078B  120A  118A  24CC  120A  118A  	fcall	___bmul
  1154     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0792  076A               	addwf	??_Lcd_Output,w
  1157     0793  0768               	addwf	Lcd_Output@i,w
  1158     0794  00EB               	movwf	??_Lcd_Output+1
  1159     0795  01EC               	clrf	??_Lcd_Output+2
  1160     0796  086B               	movf	??_Lcd_Output+1,w
  1161     0797  00E4               	movwf	_d2
  1162     0798  086C               	movf	??_Lcd_Output+2,w
  1163     0799  00E5               	movwf	_d2+1
  1164                           
  1165                           ;newmain.c: 126:     Lcd_Command(0x89);
  1166     079A  3089               	movlw	137
  1167     079B  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1168                           
  1169                           ;newmain.c: 127:     Lcd_Data(0x30+d4);
  1170     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1171     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1172     07A2  0860               	movf	_d4,w
  1173     07A3  3E30               	addlw	48
  1174     07A4  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
  1175                           
  1176                           ;newmain.c: 128:     Lcd_Command(0x8A);
  1177     07A9  308A               	movlw	138
  1178     07AA  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1179                           
  1180                           ;newmain.c: 129:     Lcd_Data(0x30+d3);
  1181     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1182     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1183     07B1  0862               	movf	_d3,w
  1184     07B2  3E30               	addlw	48
  1185     07B3  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
  1186                           
  1187                           ;newmain.c: 130:     Lcd_Command(0x8B);
  1188     07B8  308B               	movlw	139
  1189     07B9  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1190                           
  1191                           ;newmain.c: 131:     Lcd_Data(0x2E);
  1192     07BE  302E               	movlw	46
  1193     07BF  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
  1194                           
  1195                           ;newmain.c: 132:     Lcd_Command(0x8C);
  1196     07C4  308C               	movlw	140
  1197     07C5  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1198                           
  1199                           ;newmain.c: 133:     Lcd_Data(0x30+d2);
  1200     07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1201     07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1202     07CC  0864               	movf	_d2,w
  1203     07CD  3E30               	addlw	48
  1204     07CE  120A  118A  24B8  120A  118A  	fcall	_Lcd_Data
  1205     07D3                     l85:
  1206     07D3  0008               	return
  1207     07D4                     __end_of_Lcd_Output:
  1208                           
  1209                           	psect	text4
  1210     04F8                     __ptext4:	
  1211 ;; *************** function ___wmul *****************
  1212 ;; Defined at:
  1213 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  multiplier      2    0[COMMON] unsigned int 
  1216 ;;  multiplicand    2    2[COMMON] unsigned int 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  product         2    4[COMMON] unsigned int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    0[COMMON] unsigned int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         4       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0
  1231 ;;      Totals:         6       0       0       0       0
  1232 ;;Total ram usage:        6 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_Lcd_Output
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241     04F8                     ___wmul:	
  1242                           ;psect for function ___wmul
  1243                           
  1244     04F8                     l899:	
  1245                           ;incstack = 0
  1246                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1247                           
  1248     04F8  01F4               	clrf	___wmul@product
  1249     04F9  01F5               	clrf	___wmul@product+1
  1250     04FA                     l901:
  1251     04FA  1C70               	btfss	___wmul@multiplier,0
  1252     04FB  2CFD               	goto	u241
  1253     04FC  2CFE               	goto	u240
  1254     04FD                     u241:
  1255     04FD  2D04               	goto	l185
  1256     04FE                     u240:
  1257     04FE                     l903:
  1258     04FE  0872               	movf	___wmul@multiplicand,w
  1259     04FF  07F4               	addwf	___wmul@product,f
  1260     0500  1803               	skipnc
  1261     0501  0AF5               	incf	___wmul@product+1,f
  1262     0502  0873               	movf	___wmul@multiplicand+1,w
  1263     0503  07F5               	addwf	___wmul@product+1,f
  1264     0504                     l185:
  1265     0504  3001               	movlw	1
  1266     0505                     u255:
  1267     0505  1003               	clrc
  1268     0506  0DF2               	rlf	___wmul@multiplicand,f
  1269     0507  0DF3               	rlf	___wmul@multiplicand+1,f
  1270     0508  3EFF               	addlw	-1
  1271     0509  1D03               	skipz
  1272     050A  2D05               	goto	u255
  1273     050B                     l905:
  1274     050B  3001               	movlw	1
  1275     050C                     u265:
  1276     050C  1003               	clrc
  1277     050D  0CF1               	rrf	___wmul@multiplier+1,f
  1278     050E  0CF0               	rrf	___wmul@multiplier,f
  1279     050F  3EFF               	addlw	-1
  1280     0510  1D03               	skipz
  1281     0511  2D0C               	goto	u265
  1282     0512                     l907:
  1283     0512  0870               	movf	___wmul@multiplier,w
  1284     0513  0471               	iorwf	___wmul@multiplier+1,w
  1285     0514  1D03               	btfss	3,2
  1286     0515  2D17               	goto	u271
  1287     0516  2D18               	goto	u270
  1288     0517                     u271:
  1289     0517  2CFA               	goto	l901
  1290     0518                     u270:
  1291     0518                     l909:
  1292     0518  0875               	movf	___wmul@product+1,w
  1293     0519  00F1               	movwf	?___wmul+1
  1294     051A  0874               	movf	___wmul@product,w
  1295     051B  00F0               	movwf	?___wmul
  1296     051C                     l187:
  1297     051C  0008               	return
  1298     051D                     __end_of___wmul:
  1299                           
  1300                           	psect	text5
  1301     0595                     __ptext5:	
  1302 ;; *************** function ___lwdiv *****************
  1303 ;; Defined at:
  1304 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  divisor         2    6[COMMON] unsigned int 
  1307 ;;  dividend        2    8[COMMON] unsigned int 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  quotient        2   10[COMMON] unsigned int 
  1310 ;;  counter         1   12[COMMON] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2    6[COMMON] unsigned int 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, btemp+1
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         4       0       0       0       0
  1321 ;;      Locals:         3       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         7       0       0       0       0
  1324 ;;Total ram usage:        7 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_Lcd_Output
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333     0595                     ___lwdiv:	
  1334                           ;psect for function ___lwdiv
  1335                           
  1336     0595                     l929:	
  1337                           ;incstack = 0
  1338                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1339                           
  1340     0595  01FA               	clrf	___lwdiv@quotient
  1341     0596  01FB               	clrf	___lwdiv@quotient+1
  1342     0597                     l931:
  1343     0597  0876               	movf	___lwdiv@divisor,w
  1344     0598  0477               	iorwf	___lwdiv@divisor+1,w
  1345     0599  1903               	btfsc	3,2
  1346     059A  2D9C               	goto	u301
  1347     059B  2D9D               	goto	u300
  1348     059C                     u301:
  1349     059C  2DD4               	goto	l951
  1350     059D                     u300:
  1351     059D                     l933:
  1352     059D  01FC               	clrf	___lwdiv@counter
  1353     059E  0AFC               	incf	___lwdiv@counter,f
  1354     059F  2DAB               	goto	l939
  1355     05A0                     l935:
  1356     05A0  3001               	movlw	1
  1357     05A1                     u315:
  1358     05A1  1003               	clrc
  1359     05A2  0DF6               	rlf	___lwdiv@divisor,f
  1360     05A3  0DF7               	rlf	___lwdiv@divisor+1,f
  1361     05A4  3EFF               	addlw	-1
  1362     05A5  1D03               	skipz
  1363     05A6  2DA1               	goto	u315
  1364     05A7                     l937:
  1365     05A7  3001               	movlw	1
  1366     05A8  00FF               	movwf	btemp+1
  1367     05A9  087F               	movf	btemp+1,w
  1368     05AA  07FC               	addwf	___lwdiv@counter,f
  1369     05AB                     l939:
  1370     05AB  1FF7               	btfss	___lwdiv@divisor+1,7
  1371     05AC  2DAE               	goto	u321
  1372     05AD  2DAF               	goto	u320
  1373     05AE                     u321:
  1374     05AE  2DA0               	goto	l935
  1375     05AF                     u320:
  1376     05AF                     l941:
  1377     05AF  3001               	movlw	1
  1378     05B0                     u335:
  1379     05B0  1003               	clrc
  1380     05B1  0DFA               	rlf	___lwdiv@quotient,f
  1381     05B2  0DFB               	rlf	___lwdiv@quotient+1,f
  1382     05B3  3EFF               	addlw	-1
  1383     05B4  1D03               	skipz
  1384     05B5  2DB0               	goto	u335
  1385     05B6  0877               	movf	___lwdiv@divisor+1,w
  1386     05B7  0279               	subwf	___lwdiv@dividend+1,w
  1387     05B8  1D03               	skipz
  1388     05B9  2DBC               	goto	u345
  1389     05BA  0876               	movf	___lwdiv@divisor,w
  1390     05BB  0278               	subwf	___lwdiv@dividend,w
  1391     05BC                     u345:
  1392     05BC  1C03               	skipc
  1393     05BD  2DBF               	goto	u341
  1394     05BE  2DC0               	goto	u340
  1395     05BF                     u341:
  1396     05BF  2DC7               	goto	l947
  1397     05C0                     u340:
  1398     05C0                     l943:
  1399     05C0  0876               	movf	___lwdiv@divisor,w
  1400     05C1  02F8               	subwf	___lwdiv@dividend,f
  1401     05C2  0877               	movf	___lwdiv@divisor+1,w
  1402     05C3  1C03               	skipc
  1403     05C4  03F9               	decf	___lwdiv@dividend+1,f
  1404     05C5  02F9               	subwf	___lwdiv@dividend+1,f
  1405     05C6                     l945:
  1406     05C6  147A               	bsf	___lwdiv@quotient,0
  1407     05C7                     l947:
  1408     05C7  3001               	movlw	1
  1409     05C8                     u355:
  1410     05C8  1003               	clrc
  1411     05C9  0CF7               	rrf	___lwdiv@divisor+1,f
  1412     05CA  0CF6               	rrf	___lwdiv@divisor,f
  1413     05CB  3EFF               	addlw	-1
  1414     05CC  1D03               	skipz
  1415     05CD  2DC8               	goto	u355
  1416     05CE                     l949:
  1417     05CE  3001               	movlw	1
  1418     05CF  02FC               	subwf	___lwdiv@counter,f
  1419     05D0  1D03               	btfss	3,2
  1420     05D1  2DD3               	goto	u361
  1421     05D2  2DD4               	goto	u360
  1422     05D3                     u361:
  1423     05D3  2DAF               	goto	l941
  1424     05D4                     u360:
  1425     05D4                     l951:
  1426     05D4  087B               	movf	___lwdiv@quotient+1,w
  1427     05D5  00F7               	movwf	?___lwdiv+1
  1428     05D6  087A               	movf	___lwdiv@quotient,w
  1429     05D7  00F6               	movwf	?___lwdiv
  1430     05D8                     l465:
  1431     05D8  0008               	return
  1432     05D9                     __end_of___lwdiv:
  1433                           
  1434                           	psect	text6
  1435     04CC                     __ptext6:	
  1436 ;; *************** function ___bmul *****************
  1437 ;; Defined at:
  1438 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  multiplier      1    wreg     unsigned char 
  1441 ;;  multiplicand    1    0[COMMON] unsigned char 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  multiplier      1    2[COMMON] unsigned char 
  1444 ;;  product         1    1[COMMON] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, btemp+1
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         1       0       0       0       0
  1455 ;;      Locals:         2       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0
  1457 ;;      Totals:         3       0       0       0       0
  1458 ;;Total ram usage:        3 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_Lcd_Output
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467     04CC                     ___bmul:	
  1468                           ;psect for function ___bmul
  1469                           
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1473                           ;___bmul@multiplier stored from wreg
  1474     04CC  00F2               	movwf	___bmul@multiplier
  1475     04CD                     l913:
  1476     04CD  01F1               	clrf	___bmul@product
  1477     04CE                     l915:
  1478     04CE  1C72               	btfss	___bmul@multiplier,0
  1479     04CF  2CD1               	goto	u281
  1480     04D0  2CD2               	goto	u280
  1481     04D1                     u281:
  1482     04D1  2CD6               	goto	l919
  1483     04D2                     u280:
  1484     04D2                     l917:
  1485     04D2  0870               	movf	___bmul@multiplicand,w
  1486     04D3  00FF               	movwf	btemp+1
  1487     04D4  087F               	movf	btemp+1,w
  1488     04D5  07F1               	addwf	___bmul@product,f
  1489     04D6                     l919:
  1490     04D6  1003               	clrc
  1491     04D7  0DF0               	rlf	___bmul@multiplicand,f
  1492     04D8                     l921:
  1493     04D8  1003               	clrc
  1494     04D9  0CF2               	rrf	___bmul@multiplier,f
  1495     04DA                     l923:
  1496     04DA  0872               	movf	___bmul@multiplier,w
  1497     04DB  1D03               	btfss	3,2
  1498     04DC  2CDE               	goto	u291
  1499     04DD  2CDF               	goto	u290
  1500     04DE                     u291:
  1501     04DE  2CCE               	goto	l915
  1502     04DF                     u290:
  1503     04DF                     l925:
  1504     04DF  0871               	movf	___bmul@product,w
  1505     04E0                     l211:
  1506     04E0  0008               	return
  1507     04E1                     __end_of___bmul:
  1508                           
  1509                           	psect	text7
  1510     04B8                     __ptext7:	
  1511 ;; *************** function _Lcd_Data *****************
  1512 ;; Defined at:
  1513 ;;		line 72 in file "newmain.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  i               1    wreg     unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  i               1    2[COMMON] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, btemp+1
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         1       0       0       0       0
  1529 ;;      Temps:          2       0       0       0       0
  1530 ;;      Totals:         3       0       0       0       0
  1531 ;;Total ram usage:        3 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_keyscan
  1537 ;;		_Lcd_Output
  1538 ;;		_val_check
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542     04B8                     _Lcd_Data:	
  1543                           ;psect for function _Lcd_Data
  1544                           
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
  1548                           ;Lcd_Data@i stored from wreg
  1549     04B8  00F2               	movwf	Lcd_Data@i
  1550     04B9                     l889:
  1551                           
  1552                           ;newmain.c: 73:     PORTC |= 0x08;
  1553     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1554     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1555     04BB  1587               	bsf	7,3	;volatile
  1556     04BC                     l891:
  1557                           
  1558                           ;newmain.c: 74:     PORTD=i;
  1559     04BC  0872               	movf	Lcd_Data@i,w
  1560     04BD  0088               	movwf	8	;volatile
  1561     04BE                     l893:
  1562                           
  1563                           ;newmain.c: 75:     PORTC |= 0x01;
  1564     04BE  1407               	bsf	7,0	;volatile
  1565     04BF                     l895:
  1566                           
  1567                           ;newmain.c: 76:     PORTC &= ~0x01;
  1568     04BF  30FE               	movlw	254
  1569     04C0  00FF               	movwf	btemp+1
  1570     04C1  087F               	movf	btemp+1,w
  1571     04C2  0587               	andwf	7,f	;volatile
  1572     04C3                     l897:
  1573                           
  1574                           ;newmain.c: 77:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1575     04C3  30C3               	movlw	195
  1576     04C4  00F1               	movwf	??_Lcd_Data+1
  1577     04C5  30CD               	movlw	205
  1578     04C6  00F0               	movwf	??_Lcd_Data
  1579     04C7                     u477:
  1580     04C7  0BF0               	decfsz	??_Lcd_Data,f
  1581     04C8  2CC7               	goto	u477
  1582     04C9  0BF1               	decfsz	??_Lcd_Data+1,f
  1583     04CA  2CC7               	goto	u477
  1584     04CB                     l69:
  1585     04CB  0008               	return
  1586     04CC                     __end_of_Lcd_Data:
  1587                           
  1588                           	psect	text8
  1589     05D9                     __ptext8:	
  1590 ;; *************** function _init *****************
  1591 ;; Defined at:
  1592 ;;		line 42 in file "newmain.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          2       0       0       0       0
  1609 ;;      Totals:         2       0       0       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 1
  1613 ;; This function calls:
  1614 ;;		_Lcd_Command
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620     05D9                     _init:	
  1621                           ;psect for function _init
  1622                           
  1623     05D9                     l1003:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1626                           
  1627                           
  1628                           ;newmain.c: 43:     TRISC = 0x00;
  1629     05D9  1683               	bsf	3,5	;RP0=1, select bank1
  1630     05DA  1303               	bcf	3,6	;RP1=0, select bank1
  1631     05DB  0187               	clrf	7	;volatile
  1632                           
  1633                           ;newmain.c: 44:     TRISD = 0x00;
  1634     05DC  0188               	clrf	8	;volatile
  1635     05DD                     l1005:
  1636                           
  1637                           ;newmain.c: 45:     TRISB = 0xF0;
  1638     05DD  30F0               	movlw	240
  1639     05DE  0086               	movwf	6	;volatile
  1640     05DF                     l1007:
  1641                           
  1642                           ;newmain.c: 47:     OPTION_REG &= 0x7F;
  1643     05DF  307F               	movlw	127
  1644     05E0  00FF               	movwf	btemp+1
  1645     05E1  087F               	movf	btemp+1,w
  1646     05E2  0581               	andwf	1,f	;volatile
  1647     05E3                     l1009:
  1648                           
  1649                           ;newmain.c: 49:     Lcd_Command(0x30);
  1650     05E3  3030               	movlw	48
  1651     05E4  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1652     05E9                     l1011:
  1653                           
  1654                           ;newmain.c: 50:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1655     05E9  30C3               	movlw	195
  1656     05EA  00F4               	movwf	??_init+1
  1657     05EB  30CD               	movlw	205
  1658     05EC  00F3               	movwf	??_init
  1659     05ED                     u487:
  1660     05ED  0BF3               	decfsz	??_init,f
  1661     05EE  2DED               	goto	u487
  1662     05EF  0BF4               	decfsz	??_init+1,f
  1663     05F0  2DED               	goto	u487
  1664     05F1                     l1013:
  1665                           
  1666                           ;newmain.c: 51:     Lcd_Command(0x30);
  1667     05F1  3030               	movlw	48
  1668     05F2  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1669     05F7                     l1015:
  1670                           
  1671                           ;newmain.c: 52:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1672     05F7  30C3               	movlw	195
  1673     05F8  00F4               	movwf	??_init+1
  1674     05F9  30CD               	movlw	205
  1675     05FA  00F3               	movwf	??_init
  1676     05FB                     u497:
  1677     05FB  0BF3               	decfsz	??_init,f
  1678     05FC  2DFB               	goto	u497
  1679     05FD  0BF4               	decfsz	??_init+1,f
  1680     05FE  2DFB               	goto	u497
  1681     05FF                     l1017:
  1682                           
  1683                           ;newmain.c: 53:     Lcd_Command(0x30);
  1684     05FF  3030               	movlw	48
  1685     0600  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1686     0605                     l1019:
  1687                           
  1688                           ;newmain.c: 54:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1689     0605  30C3               	movlw	195
  1690     0606  00F4               	movwf	??_init+1
  1691     0607  30CD               	movlw	205
  1692     0608  00F3               	movwf	??_init
  1693     0609                     u507:
  1694     0609  0BF3               	decfsz	??_init,f
  1695     060A  2E09               	goto	u507
  1696     060B  0BF4               	decfsz	??_init+1,f
  1697     060C  2E09               	goto	u507
  1698     060D                     l1021:
  1699                           
  1700                           ;newmain.c: 55:     Lcd_Command(0x38);
  1701     060D  3038               	movlw	56
  1702     060E  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1703     0613                     l1023:
  1704                           
  1705                           ;newmain.c: 56:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1706     0613  30C3               	movlw	195
  1707     0614  00F4               	movwf	??_init+1
  1708     0615  30CD               	movlw	205
  1709     0616  00F3               	movwf	??_init
  1710     0617                     u517:
  1711     0617  0BF3               	decfsz	??_init,f
  1712     0618  2E17               	goto	u517
  1713     0619  0BF4               	decfsz	??_init+1,f
  1714     061A  2E17               	goto	u517
  1715     061B                     l1025:
  1716                           
  1717                           ;newmain.c: 57:         Lcd_Command(0x0C);
  1718     061B  300C               	movlw	12
  1719     061C  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1720     0621                     l1027:
  1721                           
  1722                           ;newmain.c: 58:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1723     0621  30C3               	movlw	195
  1724     0622  00F4               	movwf	??_init+1
  1725     0623  30CD               	movlw	205
  1726     0624  00F3               	movwf	??_init
  1727     0625                     u527:
  1728     0625  0BF3               	decfsz	??_init,f
  1729     0626  2E25               	goto	u527
  1730     0627  0BF4               	decfsz	??_init+1,f
  1731     0628  2E25               	goto	u527
  1732     0629                     l1029:
  1733                           
  1734                           ;newmain.c: 59:         Lcd_Command(0x01);
  1735     0629  3001               	movlw	1
  1736     062A  120A  118A  24E1  120A  118A  	fcall	_Lcd_Command
  1737     062F                     l1031:
  1738                           
  1739                           ;newmain.c: 60:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1740     062F  30C3               	movlw	195
  1741     0630  00F4               	movwf	??_init+1
  1742     0631  30CD               	movlw	205
  1743     0632  00F3               	movwf	??_init
  1744     0633                     u537:
  1745     0633  0BF3               	decfsz	??_init,f
  1746     0634  2E33               	goto	u537
  1747     0635  0BF4               	decfsz	??_init+1,f
  1748     0636  2E33               	goto	u537
  1749     0637                     l1033:
  1750                           
  1751                           ;newmain.c: 61:     j=150;
  1752     0637  3096               	movlw	150
  1753     0638  1283               	bcf	3,5	;RP0=0, select bank0
  1754     0639  1303               	bcf	3,6	;RP1=0, select bank0
  1755     063A  00DC               	movwf	_j
  1756     063B  3000               	movlw	0
  1757     063C  00DD               	movwf	_j+1
  1758     063D                     l63:
  1759     063D  0008               	return
  1760     063E                     __end_of_init:
  1761                           
  1762                           	psect	text9
  1763     04E1                     __ptext9:	
  1764 ;; *************** function _Lcd_Command *****************
  1765 ;; Defined at:
  1766 ;;		line 65 in file "newmain.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  i               1    wreg     unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  i               1    2[COMMON] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, btemp+1
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0
  1782 ;;      Temps:          2       0       0       0       0
  1783 ;;      Totals:         3       0       0       0       0
  1784 ;;Total ram usage:        3 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_init
  1790 ;;		_keyscan
  1791 ;;		_Lcd_Output
  1792 ;;		_val_check
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796     04E1                     _Lcd_Command:	
  1797                           ;psect for function _Lcd_Command
  1798                           
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+btemp+1]
  1802                           ;Lcd_Command@i stored from wreg
  1803     04E1  00F2               	movwf	Lcd_Command@i
  1804     04E2                     l881:
  1805                           
  1806                           ;newmain.c: 66:     PORTC &= 0xF7;
  1807     04E2  30F7               	movlw	247
  1808     04E3  00FF               	movwf	btemp+1
  1809     04E4  087F               	movf	btemp+1,w
  1810     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1811     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1812     04E7  0587               	andwf	7,f	;volatile
  1813     04E8                     l883:
  1814                           
  1815                           ;newmain.c: 67:     PORTD=i;
  1816     04E8  0872               	movf	Lcd_Command@i,w
  1817     04E9  0088               	movwf	8	;volatile
  1818     04EA                     l885:
  1819                           
  1820                           ;newmain.c: 68:     PORTC |= 0x01;
  1821     04EA  1407               	bsf	7,0	;volatile
  1822     04EB                     l887:
  1823                           
  1824                           ;newmain.c: 69:     PORTC &= ~0x01;
  1825     04EB  30FE               	movlw	254
  1826     04EC  00FF               	movwf	btemp+1
  1827     04ED  087F               	movf	btemp+1,w
  1828     04EE  0587               	andwf	7,f	;volatile
  1829                           
  1830                           ;newmain.c: 70:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1831     04EF  30C3               	movlw	195
  1832     04F0  00F1               	movwf	??_Lcd_Command+1
  1833     04F1  30CD               	movlw	205
  1834     04F2  00F0               	movwf	??_Lcd_Command
  1835     04F3                     u547:
  1836     04F3  0BF0               	decfsz	??_Lcd_Command,f
  1837     04F4  2CF3               	goto	u547
  1838     04F5  0BF1               	decfsz	??_Lcd_Command+1,f
  1839     04F6  2CF3               	goto	u547
  1840     04F7                     l66:
  1841     04F7  0008               	return
  1842     04F8                     __end_of_Lcd_Command:
  1843     007E                     btemp	set	126	;btemp
  1844     007E                     wtemp0	set	126
  1845                           
  1846                           	psect	config
  1847                           
  1848                           ;Config register CONFIG @ 0x2007
  1849                           ;	Oscillator Selection bits
  1850                           ;	FOSC = EXTRC, RC oscillator
  1851                           ;	Watchdog Timer Enable bit
  1852                           ;	WDTE = OFF, WDT disabled
  1853                           ;	Power-up Timer Enable bit
  1854                           ;	PWRTE = OFF, PWRT disabled
  1855                           ;	Brown-out Reset Enable bit
  1856                           ;	BOREN = OFF, BOR disabled
  1857                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1858                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1859                           ;	Data EEPROM Memory Code Protection bit
  1860                           ;	CPD = OFF, Data EEPROM code protection off
  1861                           ;	Flash Program Memory Write Enable bits
  1862                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1863                           ;	In-Circuit Debugger Mode bit
  1864                           ;	DEBUG = 0x1, unprogrammed default
  1865                           ;	Flash Program Memory Code Protection bit
  1866                           ;	CP = OFF, Code protection off
  1867     2007                     	org	8199
  1868     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        120
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      7      79
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _val_check->_Lcd_Command
    _val_check->_Lcd_Data
    _Lcd_Output->___lwdiv
    ___lwdiv->___wmul
    _init->_Lcd_Command

Critical Paths under _main in BANK0

    _main->_keyscan
    _keyscan->_Lcd_Output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1478
                               _init
                            _keyscan
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              2     2      0    1456
                                              5 BANK0      2     2      0
                        _Lcd_Command
                           _Lcd_Data
                         _Lcd_Output
                          _val_check
 ---------------------------------------------------------------------------------
 (2) _val_check                                            0     0      0      44
                        _Lcd_Command
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _Lcd_Output                                           5     3      2    1368
                                              0 BANK0      5     3      2
                        _Lcd_Command
                           _Lcd_Data
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     244
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _Lcd_Command
   _keyscan
     _Lcd_Command
     _Lcd_Data
     _Lcd_Output
       _Lcd_Command
       _Lcd_Data
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _val_check
       _Lcd_Command
       _Lcd_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      99      12        0.0%
ABS                  0      0      99       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jan 06 20:35:18 2024

                      _i 005E                        _j 005C                        _m 007D  
                      _x 0067                        pc 0002           ___bmul@product 0071  
                     l63 063D                       l66 04F7                       l82 073B  
                     l69 04CB                       l85 07D3                       l99 06B5  
                     _d2 0064                       _d3 0062                       _d4 0060  
                     fsr 0004      ___wmul@multiplicand 0072                      l211 04E0  
                    l185 0504                      l187 051C                      l465 05D8  
                    l901 04FA                      l903 04FE                      l921 04D8  
                    l913 04CD                      l905 050B                      l923 04DA  
                    l915 04CE                      l931 0597                      l907 0512  
                    l925 04DF                      l917 04D2                      l941 05AF  
                    l933 059D                      l909 0518                      l919 04D6  
                    l943 05C0                      l935 05A0                      l951 05D4  
                    l881 04E2                      l945 05C6                      l937 05A7  
                    l929 0595                      l961 064F                      l883 04E8  
                    l891 04BC                      l947 05C7                      l939 05AB  
                    l955 073C                      l963 0650                      l885 04EA  
                    l893 04BE                      l949 05CE                      l973 0668  
                    l957 063E                      l887 04EB                      l895 04BF  
                    l991 069C                      l983 0682                      l975 0671  
                    l967 0657                      l959 0644                      l897 04C3  
                    l889 04B9                      l993 069D                      l985 068C  
                    l977 067A                      l969 0661                      l899 04F8  
                    l979 067B                      l997 06A4                      l989 0693  
                    l999 06AE                      u300 059D                      u301 059C  
                    u320 05AF                      u240 04FE                      u400 067A  
                    u321 05AE                      u241 04FD                      u401 0679  
                    u410 0681                      u315 05A1                      u411 0680  
                    u340 05C0                      u420 069C                      u341 05BF  
                    u421 069B                      u270 0518                      u430 06A3  
                    u335 05B0                      u271 0517                      u255 0505  
                    u431 06A2                      u280 04D2                      u360 05D4  
                    u440 06CE                      u281 04D1                      u361 05D3  
                    u345 05BC                      u265 050C                      u441 06CD  
                    u290 04DF                      u370 064F                      u450 06FE  
                    u507 0609                      u291 04DE                      u355 05C8  
                    u371 064E                      u451 06FD                      u380 0656  
                    u460 0712                      u517 0617                      u381 0655  
                    u461 0711                      u390 0671                      u527 0625  
                    u391 0670                      u537 0633                      u547 04F3  
                    u477 04C7                      u487 05ED                      u497 05FB  
                    fsr0 0004                      indf 0000      __end_of_Lcd_Command 04F8  
                   l1011 05E9                     l1003 05D9                     l1021 060D  
                   l1013 05F1                     l1005 05DD                     l1031 062F  
                   l1023 0613                     l1015 05F7                     l1007 05DF  
                   l1033 0637                     l1025 061B                     l1017 05FF  
                   l1009 05E3                     l1041 06C8                     l1027 0621  
                   l1019 0605                     l1107 072D                     l1051 06E0  
                   l1035 06B6                     l1029 0629                     l1053 06E9  
                   l1045 06CF                     l1037 06BF                     l1071 0717  
                   l1063 0703                     l1055 06EF                     l1047 06D9  
                   l1039 06C5                     l1073 071B                     l1065 0712  
                   l1057 06FE                     l1083 0497                     l1077 0725  
                   l1085 049C                     _main 0497                     _init 05D9  
                   btemp 007E                     start 0000        ___bmul@multiplier 0072  
             _Lcd_Output 073C                    ?_main 0070                    ?_init 0070  
        __end_of___lwdiv 05D9                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _array 003E          __end_of_keyscan 073C  
                  _value 0066                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Lcd_Data 04CC          __initialization 07D4  
           __end_of_main 04A5             __end_of_init 063E              _Lcd_Command 04E1  
                 ??_main 007D                   ??_init 0073                   ___bmul 04CC  
                 ___wmul 04F8                ??___lwdiv 007A              ?_Lcd_Output 0068  
              ??_keyscan 006D  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 0559             __pidataBANK1 051D  
              ?_Lcd_Data 0070               __pbssBANK0 005C               __pmaintext 0497  
                ?___bmul 0070                  ?___wmul 0070               ??_Lcd_Data 0070  
             _array_high 00A0                  ___lwdiv 0595             ?_Lcd_Command 0070  
                __ptext1 06B6                  __ptext2 063E                  __ptext3 073C  
                __ptext4 04F8                  __ptext5 0595                  __ptext6 04CC  
                __ptext7 04B8                  __ptext8 05D9                  __ptext9 04E1  
                _keyscan 06B6     end_of_initialization 07FC        __end_of_val_check 06B6  
              Lcd_Data@i 0072             ??_Lcd_Output 006A       __end_of_Lcd_Output 07D4  
         __end_of___bmul 04E1           __end_of___wmul 051D      start_initialization 07D4  
               ??___bmul 0071                 ??___wmul 0074               init_fetch0 04A5  
            __pdataBANK0 0020              __pdataBANK1 00A0              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0068         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                _array_med 00BE                _array_low 0020  
               ?_keyscan 0070         ___lwdiv@quotient 007A           ___wmul@product 0074  
              _val_check 063E             Lcd_Command@i 0072        ___wmul@multiplier 0070  
               _Lcd_Data 04B8               ?_val_check 0070          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007C                 init_ram0 04A9              Lcd_Output@i 0068  
            ??_val_check 0073            ??_Lcd_Command 0070               _OPTION_REG 0081  
