

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 15 12:14:20 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	idataCOMMON
   169     076E                     __pidataCOMMON:
   170                           
   171                           ;initializer for _data_C
   172     076E  3407               	retlw	7
   173     076F  3400               	retlw	0
   174                           
   175                           ;initializer for _data_B
   176     0770  3406               	retlw	6
   177     0771  3400               	retlw	0
   178                           
   179                           ;initializer for _opreg
   180     0772  3481               	retlw	129
   181     0773  3401               	retlw	1
   182                           
   183                           ;initializer for _prop_C
   184     0774  3487               	retlw	135
   185     0775  3400               	retlw	0
   186                           
   187                           ;initializer for _prop_B
   188     0776  3486               	retlw	134
   189     0777  3400               	retlw	0
   190     0007                     _PORTC	set	7
   191                           
   192                           	psect	cinit
   193     07C0                     start_initialization:	
   194                           ; #config settings
   195                           
   196     07C0                     __initialization:
   197                           
   198                           ; Initialize objects allocated to COMMON
   199     07C0  120A  118A  276E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   200     07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   201     07C6  120A  118A  276F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   202     07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   203     07CC  120A  118A  2770  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   204     07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   205     07D2  120A  118A  2771  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   206     07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   207     07D8  120A  118A  2772  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   208     07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   209     07DE  120A  118A  2773  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   210     07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   211     07E4  120A  118A  2774  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   212     07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   213     07EA  120A  118A  2775  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   214     07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   215     07F0  120A  118A  2776  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   216     07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   217     07F6  120A  118A  2777  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   218     07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   219     07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FC                     __end_of__initialization:
   223     07FC  0183               	clrf	3
   224     07FD  120A  118A  2F8B   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	dataCOMMON
   227     0070                     __pdataCOMMON:
   228     0070                     _data_C:
   229     0070                     	ds	2
   230     0072                     _data_B:
   231     0072                     	ds	2
   232     0074                     _opreg:
   233     0074                     	ds	2
   234     0076                     _prop_C:
   235     0076                     	ds	2
   236     0078                     _prop_B:
   237     0078                     	ds	2
   238                           
   239                           	psect	inittext
   240     0778                     init_fetch0:	
   241                           ;	Called with low address in FSR and high address in W
   242                           
   243     0778  087E               	movf	btemp,w
   244     0779  008A               	movwf	10
   245     077A  087F               	movf	btemp+1,w
   246     077B  0082               	movwf	2
   247     077C                     init_ram0:	
   248                           ;Called with:
   249                           ;	high address of idata address in btemp 
   250                           ;	low address of idata address in btemp+1 
   251                           ;	low address of data in FSR
   252                           ;	high address + 1 of data in btemp-1
   253                           
   254     077C  120A  118A  2778  120A  118A  	fcall	init_fetch0
   255     0781  0080               	movwf	0
   256     0782  0A84               	incf	4,f
   257     0783  0804               	movf	4,w
   258     0784  067D               	xorwf	btemp+-1,w
   259     0785  1903               	btfsc	3,2
   260     0786  3400               	retlw	0
   261     0787  0AFF               	incf	btemp+1,f
   262     0788  1903               	btfsc	3,2
   263     0789  0AFE               	incf	btemp,f
   264     078A  2F7C               	goto	init_ram0
   265                           
   266                           	psect	cstackCOMMON
   267     007A                     __pcstackCOMMON:
   268     007A                     ?_main:
   269     007A                     ??_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           ; 1 bytes @ 0x0
   274     007A                     	ds	2
   275     007C                     main@val:
   276                           
   277                           ; 1 bytes @ 0x2
   278     007C                     	ds	1
   279                           
   280                           	psect	maintext
   281     078B                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 21 in file "9T_MM_Switch_LED.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  val             1    2[COMMON] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         1       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0
   304 ;;      Totals:         3       0       0       0       0
   305 ;;Total ram usage:        3 bytes
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313     078B                     _main:	
   314                           ;psect for function _main
   315                           
   316     078B                     l571:	
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   319                           
   320     078B  30FF               	movlw	255
   321     078C  1683               	bsf	3,5	;RP0=1, select bank1
   322     078D  1303               	bcf	3,6	;RP1=0, select bank1
   323     078E  0086               	movwf	6
   324     078F                     l573:
   325     078F  0187               	clrf	7
   326     0790                     l575:
   327     0790  3070               	movlw	112
   328     0791  1683               	bsf	3,5	;RP0=1, select bank3
   329     0792  1703               	bsf	3,6	;RP1=1, select bank3
   330     0793  0081               	movwf	1
   331     0794  1283               	bcf	3,5	;RP0=0, select bank0
   332     0795  1303               	bcf	3,6	;RP1=0, select bank0
   333     0796  0187               	clrf	7
   334     0797                     l577:
   335     0797  0806               	movf	6,w
   336     0798  00FC               	movwf	main@val
   337     0799  2FA7               	goto	l591
   338     079A                     l579:
   339     079A  3004               	movlw	4
   340     079B  0087               	movwf	7
   341     079C  2F97               	goto	l577
   342     079D                     l581:
   343     079D  3002               	movlw	2
   344     079E  0087               	movwf	7
   345     079F  2F97               	goto	l577
   346     07A0                     l583:
   347     07A0  0187               	clrf	7
   348     07A1  2F97               	goto	l577
   349     07A2                     l585:
   350     07A2  3006               	movlw	6
   351     07A3  0087               	movwf	7
   352     07A4  2F97               	goto	l577
   353     07A5                     l587:
   354     07A5  0187               	clrf	7	;volatile
   355     07A6  2F97               	goto	l577
   356     07A7                     l591:
   357     07A7  087C               	movf	main@val,w
   358     07A8  00FA               	movwf	??_main
   359     07A9  01FB               	clrf	??_main+1
   360                           
   361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   362                           ; Switch size 1, requested type "simple"
   363                           ; Number of cases is 1, Range of values is 0 to 0
   364                           ; switch strategies available:
   365                           ; Name         Instructions Cycles
   366                           ; simple_byte            4     3 (average)
   367                           ; direct_byte           11     8 (fixed)
   368                           ; jumptable            260     6 (fixed)
   369                           ;	Chosen strategy is simple_byte
   370     07AA  087B               	movf	??_main+1,w
   371     07AB  3A00               	xorlw	0	; case 0
   372     07AC  1903               	skipnz
   373     07AD  2FAF               	goto	l629
   374     07AE  2FA5               	goto	l587
   375     07AF                     l629:
   376                           
   377                           ; Switch size 1, requested type "simple"
   378                           ; Number of cases is 4, Range of values is 127 to 239
   379                           ; switch strategies available:
   380                           ; Name         Instructions Cycles
   381                           ; simple_byte           13     7 (average)
   382                           ; jumptable            263     9 (fixed)
   383                           ;	Chosen strategy is simple_byte
   384     07AF  087A               	movf	??_main,w
   385     07B0  3A7F               	xorlw	127	; case 127
   386     07B1  1903               	skipnz
   387     07B2  2FA2               	goto	l585
   388     07B3  3AC0               	xorlw	192	; case 191
   389     07B4  1903               	skipnz
   390     07B5  2FA0               	goto	l583
   391     07B6  3A60               	xorlw	96	; case 223
   392     07B7  1903               	skipnz
   393     07B8  2F9D               	goto	l581
   394     07B9  3A30               	xorlw	48	; case 239
   395     07BA  1903               	skipnz
   396     07BB  2F9A               	goto	l579
   397     07BC  2FA5               	goto	l587
   398     07BD  120A  118A  2800   	ljmp	start
   399     07C0                     __end_of_main:
   400     007E                     btemp	set	126	;btemp
   401     007E                     wtemp0	set	126
   402                           
   403                           	psect	config
   404                           
   405                           ;Config register CONFIG @ 0x2007
   406                           ;	Oscillator Selection bits
   407                           ;	FOSC = EXTRC, RC oscillator
   408                           ;	Watchdog Timer Enable bit
   409                           ;	WDTE = OFF, WDT disabled
   410                           ;	Power-up Timer Enable bit
   411                           ;	PWRTE = OFF, PWRT disabled
   412                           ;	Brown-out Reset Enable bit
   413                           ;	BOREN = OFF, BOR disabled
   414                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   415                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   416                           ;	Data EEPROM Memory Code Protection bit
   417                           ;	CPD = OFF, Data EEPROM code protection off
   418                           ;	Flash Program Memory Write Enable bits
   419                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   420                           ;	In-Circuit Debugger Mode bit
   421                           ;	DEBUG = 0x1, unprogrammed default
   422                           ;	Flash Program Memory Code Protection bit
   423                           ;	CP = OFF, Code protection off
   424     2007                     	org	8199
   425     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    data_B	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    data_C	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    opreg	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    prop_B	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    prop_C	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 15 12:14:20 2024

                      pc 0002                       fsr 0004                      l571 078B  
                    l629 07AF                      l581 079D                      l573 078F  
                    l583 07A0                      l591 07A7                      l575 0790  
                    l585 07A2                      l577 0797                      l587 07A5  
                    l579 079A                      indf 0000                     _main 078B  
                   btemp 007E                     start 0000                    ?_main 007A  
                  _PORTC 0007                    _opreg 0074                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07C0  
           __end_of_main 07C0                   ??_main 007A                   _data_B 0072  
                 _data_C 0070                   _prop_B 0078                   _prop_C 0076  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007A  
             __pmaintext 078B                  main@val 007C     end_of_initialization 07FC  
          __pidataCOMMON 076E      start_initialization 07C0               init_fetch0 0778  
              ___latbits 0002                 init_ram0 077C  
